if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

!function(){function n(n,t){return t>n?-1:n>t?1:n>=t?0:0/0}function t(n){return null===n?0/0:+n}function e(n){return!isNaN(n)}function r(n){return{left:function(t,e,r,u){for(arguments.length<3&&(r=0),arguments.length<4&&(u=t.length);u>r;){var i=r+u>>>1;n(t[i],e)<0?r=i+1:u=i}return r},right:function(t,e,r,u){for(arguments.length<3&&(r=0),arguments.length<4&&(u=t.length);u>r;){var i=r+u>>>1;n(t[i],e)>0?u=i:r=i+1}return r}}}function u(n){return n.length}function i(n){for(var t=1;n*t%1;)t*=10;return t}function o(n,t){for(var e in t)Object.defineProperty(n.prototype,e,{value:t[e],enumerable:!1})}function a(){this._=Object.create(null)}function c(n){return(n+="")===da||n[0]===ma?ma+n:n}function l(n){return(n+="")[0]===ma?n.slice(1):n}function s(n){return c(n)in this._}function f(n){return(n=c(n))in this._&&delete this._[n]}function h(){var n=[];for(var t in this._)n.push(l(t));return n}function g(){var n=0;for(var t in this._)++n;return n}function p(){for(var n in this._)return!1;return!0}function v(){this._=Object.create(null)}function d(n,t,e){return function(){var r=e.apply(t,arguments);return r===t?n:r}}function m(n,t){if(t in n)return t;t=t.charAt(0).toUpperCase()+t.slice(1);for(var e=0,r=ya.length;r>e;++e){var u=ya[e]+t;if(u in n)return u}}function y(){}function M(){}function x(n){function t(){for(var t,r=e,u=-1,i=r.length;++u<i;)(t=r[u].on)&&t.apply(this,arguments);return n}var e=[],r=new a;return t.on=function(t,u){var i,o=r.get(t);return arguments.length<2?o&&o.on:(o&&(o.on=null,e=e.slice(0,i=e.indexOf(o)).concat(e.slice(i+1)),r.remove(t)),u&&e.push(r.set(t,{on:u})),n)},t}function b(){ta.event.preventDefault()}function _(){for(var n,t=ta.event;n=t.sourceEvent;)t=n;return t}function w(n){for(var t=new M,e=0,r=arguments.length;++e<r;)t[arguments[e]]=x(t);return t.of=function(e,r){return function(u){try{var i=u.sourceEvent=ta.event;u.target=n,ta.event=u,t[u.type].apply(e,r)}finally{ta.event=i}}},t}function S(n){return xa(n,ka),n}function k(n){return"function"==typeof n?n:function(){return ba(n,this)}}function E(n){return"function"==typeof n?n:function(){return _a(n,this)}}function A(n,t){function e(){this.removeAttribute(n)}function r(){this.removeAttributeNS(n.space,n.local)}function u(){this.setAttribute(n,t)}function i(){this.setAttributeNS(n.space,n.local,t)}function o(){var e=t.apply(this,arguments);null==e?this.removeAttribute(n):this.setAttribute(n,e)}function a(){var e=t.apply(this,arguments);null==e?this.removeAttributeNS(n.space,n.local):this.setAttributeNS(n.space,n.local,e)}return n=ta.ns.qualify(n),null==t?n.local?r:e:"function"==typeof t?n.local?a:o:n.local?i:u}function N(n){return n.trim().replace(/\s+/g," ")}function C(n){return new RegExp("(?:^|\\s+)"+ta.requote(n)+"(?:\\s+|$)","g")}function z(n){return(n+"").trim().split(/^|\s+/)}function q(n,t){function e(){for(var e=-1;++e<u;)n[e](this,t)}function r(){for(var e=-1,r=t.apply(this,arguments);++e<u;)n[e](this,r)}n=z(n).map(L);var u=n.length;return"function"==typeof t?r:e}function L(n){var t=C(n);return function(e,r){if(u=e.classList)return r?u.add(n):u.remove(n);var u=e.getAttribute("class")||"";r?(t.lastIndex=0,t.test(u)||e.setAttribute("class",N(u+" "+n))):e.setAttribute("class",N(u.replace(t," ")))}}function T(n,t,e){function r(){this.style.removeProperty(n)}function u(){this.style.setProperty(n,t,e)}function i(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(n):this.style.setProperty(n,r,e)}return null==t?r:"function"==typeof t?i:u}function R(n,t){function e(){delete this[n]}function r(){this[n]=t}function u(){var e=t.apply(this,arguments);null==e?delete this[n]:this[n]=e}return null==t?e:"function"==typeof t?u:r}function D(n){return"function"==typeof n?n:(n=ta.ns.qualify(n)).local?function(){return this.ownerDocument.createElementNS(n.space,n.local)}:function(){return this.ownerDocument.createElementNS(this.namespaceURI,n)}}function P(){var n=this.parentNode;n&&n.removeChild(this)}function U(n){return{__data__:n}}function j(n){return function(){return Sa(this,n)}}function F(t){return arguments.length||(t=n),function(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}}function H(n,t){for(var e=0,r=n.length;r>e;e++)for(var u,i=n[e],o=0,a=i.length;a>o;o++)(u=i[o])&&t(u,o,e);return n}function O(n){return xa(n,Aa),n}function Y(n){var t,e;return function(r,u,i){var o,a=n[i].update,c=a.length;for(i!=e&&(e=i,t=0),u>=t&&(t=u+1);!(o=a[t])&&++t<c;);return o}}function I(n,t,e){function r(){var t=this[o];t&&(this.removeEventListener(n,t,t.$),delete this[o])}function u(){var u=c(t,ra(arguments));r.call(this),this.addEventListener(n,this[o]=u,u.$=e),u._=t}function i(){var t,e=new RegExp("^__on([^.]+)"+ta.requote(n)+"$");for(var r in this)if(t=r.match(e)){var u=this[r];this.removeEventListener(t[1],u,u.$),delete this[r]}}var o="__on"+n,a=n.indexOf("."),c=Z;a>0&&(n=n.slice(0,a));var l=Ca.get(n);return l&&(n=l,c=V),a?t?u:r:t?y:i}function Z(n,t){return function(e){var r=ta.event;ta.event=e,t[0]=this.__data__;try{n.apply(this,t)}finally{ta.event=r}}}function V(n,t){var e=Z(n,t);return function(n){var t=this,r=n.relatedTarget;r&&(r===t||8&r.compareDocumentPosition(t))||e.call(t,n)}}function X(){var n=".dragsuppress-"+ ++qa,t="click"+n,e=ta.select(oa).on("touchmove"+n,b).on("dragstart"+n,b).on("selectstart"+n,b);if(za){var r=ia.style,u=r[za];r[za]="none"}return function(i){if(e.on(n,null),za&&(r[za]=u),i){var o=function(){e.on(t,null)};e.on(t,function(){b(),o()},!0),setTimeout(o,0)}}}function $(n,t){t.changedTouches&&(t=t.changedTouches[0]);var e=n.ownerSVGElement||n;if(e.createSVGPoint){var r=e.createSVGPoint();if(0>La&&(oa.scrollX||oa.scrollY)){e=ta.select("body").append("svg").style({position:"absolute",top:0,left:0,margin:0,padding:0,border:"none"},"important");var u=e[0][0].getScreenCTM();La=!(u.f||u.e),e.remove()}return La?(r.x=t.pageX,r.y=t.pageY):(r.x=t.clientX,r.y=t.clientY),r=r.matrixTransform(n.getScreenCTM().inverse()),[r.x,r.y]}var i=n.getBoundingClientRect();return[t.clientX-i.left-n.clientLeft,t.clientY-i.top-n.clientTop]}function B(){return ta.event.changedTouches[0].identifier}function W(){return ta.event.target}function J(){return oa}function G(n){return n>0?1:0>n?-1:0}function K(n,t,e){return(t[0]-n[0])*(e[1]-n[1])-(t[1]-n[1])*(e[0]-n[0])}function Q(n){return n>1?0:-1>n?Da:Math.acos(n)}function nt(n){return n>1?ja:-1>n?-ja:Math.asin(n)}function tt(n){return((n=Math.exp(n))-1/n)/2}function et(n){return((n=Math.exp(n))+1/n)/2}function rt(n){return((n=Math.exp(2*n))-1)/(n+1)}function ut(n){return(n=Math.sin(n/2))*n}function it(){}function ot(n,t,e){return this instanceof ot?(this.h=+n,this.s=+t,void(this.l=+e)):arguments.length<2?n instanceof ot?new ot(n.h,n.s,n.l):xt(""+n,bt,ot):new ot(n,t,e)}function at(n,t,e){function r(n){return n>360?n-=360:0>n&&(n+=360),60>n?i+(o-i)*n/60:180>n?o:240>n?i+(o-i)*(240-n)/60:i}function u(n){return Math.round(255*r(n))}var i,o;return n=isNaN(n)?0:(n%=360)<0?n+360:n,t=isNaN(t)?0:0>t?0:t>1?1:t,e=0>e?0:e>1?1:e,o=.5>=e?e*(1+t):e+t-e*t,i=2*e-o,new dt(u(n+120),u(n),u(n-120))}function ct(n,t,e){return this instanceof ct?(this.h=+n,this.c=+t,void(this.l=+e)):arguments.length<2?n instanceof ct?new ct(n.h,n.c,n.l):n instanceof st?ht(n.l,n.a,n.b):ht((n=_t((n=ta.rgb(n)).r,n.g,n.b)).l,n.a,n.b):new ct(n,t,e)}function lt(n,t,e){return isNaN(n)&&(n=0),isNaN(t)&&(t=0),new st(e,Math.cos(n*=Fa)*t,Math.sin(n)*t)}function st(n,t,e){return this instanceof st?(this.l=+n,this.a=+t,void(this.b=+e)):arguments.length<2?n instanceof st?new st(n.l,n.a,n.b):n instanceof ct?lt(n.h,n.c,n.l):_t((n=dt(n)).r,n.g,n.b):new st(n,t,e)}function ft(n,t,e){var r=(n+16)/116,u=r+t/500,i=r-e/200;return u=gt(u)*Ja,r=gt(r)*Ga,i=gt(i)*Ka,new dt(vt(3.2404542*u-1.5371385*r-.4985314*i),vt(-.969266*u+1.8760108*r+.041556*i),vt(.0556434*u-.2040259*r+1.0572252*i))}function ht(n,t,e){return n>0?new ct(Math.atan2(e,t)*Ha,Math.sqrt(t*t+e*e),n):new ct(0/0,0/0,n)}function gt(n){return n>.206893034?n*n*n:(n-4/29)/7.787037}function pt(n){return n>.008856?Math.pow(n,1/3):7.787037*n+4/29}function vt(n){return Math.round(255*(.00304>=n?12.92*n:1.055*Math.pow(n,1/2.4)-.055))}function dt(n,t,e){return this instanceof dt?(this.r=~~n,this.g=~~t,void(this.b=~~e)):arguments.length<2?n instanceof dt?new dt(n.r,n.g,n.b):xt(""+n,dt,at):new dt(n,t,e)}function mt(n){return new dt(n>>16,255&n>>8,255&n)}function yt(n){return mt(n)+""}function Mt(n){return 16>n?"0"+Math.max(0,n).toString(16):Math.min(255,n).toString(16)}function xt(n,t,e){var r,u,i,o=0,a=0,c=0;if(r=/([a-z]+)\((.*)\)/i.exec(n))switch(u=r[2].split(","),r[1]){case"hsl":return e(parseFloat(u[0]),parseFloat(u[1])/100,parseFloat(u[2])/100);case"rgb":return t(St(u[0]),St(u[1]),St(u[2]))}return(i=tc.get(n))?t(i.r,i.g,i.b):(null==n||"#"!==n.charAt(0)||isNaN(i=parseInt(n.slice(1),16))||(4===n.length?(o=(3840&i)>>4,o=o>>4|o,a=240&i,a=a>>4|a,c=15&i,c=c<<4|c):7===n.length&&(o=(16711680&i)>>16,a=(65280&i)>>8,c=255&i)),t(o,a,c))}function bt(n,t,e){var r,u,i=Math.min(n/=255,t/=255,e/=255),o=Math.max(n,t,e),a=o-i,c=(o+i)/2;return a?(u=.5>c?a/(o+i):a/(2-o-i),r=n==o?(t-e)/a+(e>t?6:0):t==o?(e-n)/a+2:(n-t)/a+4,r*=60):(r=0/0,u=c>0&&1>c?0:r),new ot(r,u,c)}function _t(n,t,e){n=wt(n),t=wt(t),e=wt(e);var r=pt((.4124564*n+.3575761*t+.1804375*e)/Ja),u=pt((.2126729*n+.7151522*t+.072175*e)/Ga),i=pt((.0193339*n+.119192*t+.9503041*e)/Ka);return st(116*u-16,500*(r-u),200*(u-i))}function wt(n){return(n/=255)<=.04045?n/12.92:Math.pow((n+.055)/1.055,2.4)}function St(n){var t=parseFloat(n);return"%"===n.charAt(n.length-1)?Math.round(2.55*t):t}function kt(n){return"function"==typeof n?n:function(){return n}}function Et(n){return n}function At(n){return function(t,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=null),Nt(t,e,n,r)}}function Nt(n,t,e,r){function u(){var n,t=c.status;if(!t&&zt(c)||t>=200&&300>t||304===t){try{n=e.call(i,c)}catch(r){return o.error.call(i,r),void 0}o.load.call(i,n)}else o.error.call(i,c)}var i={},o=ta.dispatch("beforesend","progress","load","error"),a={},c=new XMLHttpRequest,l=null;return!oa.XDomainRequest||"withCredentials"in c||!/^(http(s)?:)?\/\//.test(n)||(c=new XDomainRequest),"onload"in c?c.onload=c.onerror=u:c.onreadystatechange=function(){c.readyState>3&&u()},c.onprogress=function(n){var t=ta.event;ta.event=n;try{o.progress.call(i,c)}finally{ta.event=t}},i.header=function(n,t){return n=(n+"").toLowerCase(),arguments.length<2?a[n]:(null==t?delete a[n]:a[n]=t+"",i)},i.mimeType=function(n){return arguments.length?(t=null==n?null:n+"",i):t},i.responseType=function(n){return arguments.length?(l=n,i):l},i.response=function(n){return e=n,i},["get","post"].forEach(function(n){i[n]=function(){return i.send.apply(i,[n].concat(ra(arguments)))}}),i.send=function(e,r,u){if(2===arguments.length&&"function"==typeof r&&(u=r,r=null),c.open(e,n,!0),null==t||"accept"in a||(a.accept=t+",*/*"),c.setRequestHeader)for(var s in a)c.setRequestHeader(s,a[s]);return null!=t&&c.overrideMimeType&&c.overrideMimeType(t),null!=l&&(c.responseType=l),null!=u&&i.on("error",u).on("load",function(n){u(null,n)}),o.beforesend.call(i,c),c.send(null==r?null:r),i},i.abort=function(){return c.abort(),i},ta.rebind(i,o,"on"),null==r?i:i.get(Ct(r))}function Ct(n){return 1===n.length?function(t,e){n(null==t?e:null)}:n}function zt(n){var t=n.responseType;return t&&"text"!==t?n.response:n.responseText}function qt(){var n=Lt(),t=Tt()-n;t>24?(isFinite(t)&&(clearTimeout(ic),ic=setTimeout(qt,t)),uc=0):(uc=1,ac(qt))}function Lt(){var n=Date.now();for(oc=ec;oc;)n>=oc.t&&(oc.f=oc.c(n-oc.t)),oc=oc.n;return n}function Tt(){for(var n,t=ec,e=1/0;t;)t.f?t=n?n.n=t.n:ec=t.n:(t.t<e&&(e=t.t),t=(n=t).n);return rc=n,e}function Rt(n,t){return t-(n?Math.ceil(Math.log(n)/Math.LN10):1)}function Dt(n,t){var e=Math.pow(10,3*va(8-t));return{scale:t>8?function(n){return n/e}:function(n){return n*e},symbol:n}}function Pt(n){var t=n.decimal,e=n.thousands,r=n.grouping,u=n.currency,i=r&&e?function(n,t){for(var u=n.length,i=[],o=0,a=r[0],c=0;u>0&&a>0&&(c+a+1>t&&(a=Math.max(1,t-c)),i.push(n.substring(u-=a,u+a)),!((c+=a+1)>t));)a=r[o=(o+1)%r.length];return i.reverse().join(e)}:Et;return function(n){var e=lc.exec(n),r=e[1]||" ",o=e[2]||">",a=e[3]||"-",c=e[4]||"",l=e[5],s=+e[6],f=e[7],h=e[8],g=e[9],p=1,v="",d="",m=!1,y=!0;switch(h&&(h=+h.substring(1)),(l||"0"===r&&"="===o)&&(l=r="0",o="="),g){case"n":f=!0,g="g";break;case"%":p=100,d="%",g="f";break;case"p":p=100,d="%",g="r";break;case"b":case"o":case"x":case"X":"#"===c&&(v="0"+g.toLowerCase());case"c":y=!1;case"d":m=!0,h=0;break;case"s":p=-1,g="r"}"$"===c&&(v=u[0],d=u[1]),"r"!=g||h||(g="g"),null!=h&&("g"==g?h=Math.max(1,Math.min(21,h)):("e"==g||"f"==g)&&(h=Math.max(0,Math.min(20,h)))),g=sc.get(g)||Ut;var M=l&&f;return function(n){var e=d;if(m&&n%1)return"";var u=0>n||0===n&&0>1/n?(n=-n,"-"):"-"===a?"":a;if(0>p){var c=ta.formatPrefix(n,h);n=c.scale(n),e=c.symbol+d}else n*=p;n=g(n,h);var x,b,_=n.lastIndexOf(".");if(0>_){var w=y?n.lastIndexOf("e"):-1;0>w?(x=n,b=""):(x=n.substring(0,w),b=n.substring(w))}else x=n.substring(0,_),b=t+n.substring(_+1);!l&&f&&(x=i(x,1/0));var S=v.length+x.length+b.length+(M?0:u.length),k=s>S?new Array(S=s-S+1).join(r):"";return M&&(x=i(k+x,k.length?s-b.length:1/0)),u+=v,n=x+b,("<"===o?u+n+k:">"===o?k+u+n:"^"===o?k.substring(0,S>>=1)+u+n+k.substring(S):u+(M?n:k+n))+e}}}function Ut(n){return n+""}function jt(){this._=new Date(arguments.length>1?Date.UTC.apply(this,arguments):arguments[0])}function Ft(n,t,e){function r(t){var e=n(t),r=i(e,1);return r-t>t-e?e:r}function u(e){return t(e=n(new hc(e-1)),1),e}function i(n,e){return t(n=new hc(+n),e),n}function o(n,r,i){var o=u(n),a=[];if(i>1)for(;r>o;)e(o)%i||a.push(new Date(+o)),t(o,1);else for(;r>o;)a.push(new Date(+o)),t(o,1);return a}function a(n,t,e){try{hc=jt;var r=new jt;return r._=n,o(r,t,e)}finally{hc=Date}}n.floor=n,n.round=r,n.ceil=u,n.offset=i,n.range=o;var c=n.utc=Ht(n);return c.floor=c,c.round=Ht(r),c.ceil=Ht(u),c.offset=Ht(i),c.range=a,n}function Ht(n){return function(t,e){try{hc=jt;var r=new jt;return r._=t,n(r,e)._}finally{hc=Date}}}function Ot(n){function t(n){function t(t){for(var e,u,i,o=[],a=-1,c=0;++a<r;)37===n.charCodeAt(a)&&(o.push(n.slice(c,a)),null!=(u=pc[e=n.charAt(++a)])&&(e=n.charAt(++a)),(i=N[e])&&(e=i(t,null==u?"e"===e?" ":"0":u)),o.push(e),c=a+1);return o.push(n.slice(c,a)),o.join("")}var r=n.length;return t.parse=function(t){var r={y:1900,m:0,d:1,H:0,M:0,S:0,L:0,Z:null},u=e(r,n,t,0);if(u!=t.length)return null;"p"in r&&(r.H=r.H%12+12*r.p);var i=null!=r.Z&&hc!==jt,o=new(i?jt:hc);return"j"in r?o.setFullYear(r.y,0,r.j):"w"in r&&("W"in r||"U"in r)?(o.setFullYear(r.y,0,1),o.setFullYear(r.y,0,"W"in r?(r.w+6)%7+7*r.W-(o.getDay()+5)%7:r.w+7*r.U-(o.getDay()+6)%7)):o.setFullYear(r.y,r.m,r.d),o.setHours(r.H+(0|r.Z/100),r.M+r.Z%100,r.S,r.L),i?o._:o},t.toString=function(){return n},t}function e(n,t,e,r){for(var u,i,o,a=0,c=t.length,l=e.length;c>a;){if(r>=l)return-1;if(u=t.charCodeAt(a++),37===u){if(o=t.charAt(a++),i=C[o in pc?t.charAt(a++):o],!i||(r=i(n,e,r))<0)return-1}else if(u!=e.charCodeAt(r++))return-1}return r}function r(n,t,e){_.lastIndex=0;var r=_.exec(t.slice(e));return r?(n.w=w.get(r[0].toLowerCase()),e+r[0].length):-1}function u(n,t,e){x.lastIndex=0;var r=x.exec(t.slice(e));return r?(n.w=b.get(r[0].toLowerCase()),e+r[0].length):-1}function i(n,t,e){E.lastIndex=0;var r=E.exec(t.slice(e));return r?(n.m=A.get(r[0].toLowerCase()),e+r[0].length):-1}function o(n,t,e){S.lastIndex=0;var r=S.exec(t.slice(e));return r?(n.m=k.get(r[0].toLowerCase()),e+r[0].length):-1}function a(n,t,r){return e(n,N.c.toString(),t,r)}function c(n,t,r){return e(n,N.x.toString(),t,r)}function l(n,t,r){return e(n,N.X.toString(),t,r)}function s(n,t,e){var r=M.get(t.slice(e,e+=2).toLowerCase());return null==r?-1:(n.p=r,e)}var f=n.dateTime,h=n.date,g=n.time,p=n.periods,v=n.days,d=n.shortDays,m=n.months,y=n.shortMonths;t.utc=function(n){function e(n){try{hc=jt;var t=new hc;return t._=n,r(t)}finally{hc=Date}}var r=t(n);return e.parse=function(n){try{hc=jt;var t=r.parse(n);return t&&t._}finally{hc=Date}},e.toString=r.toString,e},t.multi=t.utc.multi=ae;var M=ta.map(),x=It(v),b=Zt(v),_=It(d),w=Zt(d),S=It(m),k=Zt(m),E=It(y),A=Zt(y);p.forEach(function(n,t){M.set(n.toLowerCase(),t)});var N={a:function(n){return d[n.getDay()]},A:function(n){return v[n.getDay()]},b:function(n){return y[n.getMonth()]},B:function(n){return m[n.getMonth()]},c:t(f),d:function(n,t){return Yt(n.getDate(),t,2)},e:function(n,t){return Yt(n.getDate(),t,2)},H:function(n,t){return Yt(n.getHours(),t,2)},I:function(n,t){return Yt(n.getHours()%12||12,t,2)},j:function(n,t){return Yt(1+fc.dayOfYear(n),t,3)},L:function(n,t){return Yt(n.getMilliseconds(),t,3)},m:function(n,t){return Yt(n.getMonth()+1,t,2)},M:function(n,t){return Yt(n.getMinutes(),t,2)},p:function(n){return p[+(n.getHours()>=12)]},S:function(n,t){return Yt(n.getSeconds(),t,2)},U:function(n,t){return Yt(fc.sundayOfYear(n),t,2)},w:function(n){return n.getDay()},W:function(n,t){return Yt(fc.mondayOfYear(n),t,2)},x:t(h),X:t(g),y:function(n,t){return Yt(n.getFullYear()%100,t,2)},Y:function(n,t){return Yt(n.getFullYear()%1e4,t,4)},Z:ie,"%":function(){return"%"}},C={a:r,A:u,b:i,B:o,c:a,d:Qt,e:Qt,H:te,I:te,j:ne,L:ue,m:Kt,M:ee,p:s,S:re,U:Xt,w:Vt,W:$t,x:c,X:l,y:Wt,Y:Bt,Z:Jt,"%":oe};return t}function Yt(n,t,e){var r=0>n?"-":"",u=(r?-n:n)+"",i=u.length;return r+(e>i?new Array(e-i+1).join(t)+u:u)}function It(n){return new RegExp("^(?:"+n.map(ta.requote).join("|")+")","i")}function Zt(n){for(var t=new a,e=-1,r=n.length;++e<r;)t.set(n[e].toLowerCase(),e);return t}function Vt(n,t,e){vc.lastIndex=0;var r=vc.exec(t.slice(e,e+1));return r?(n.w=+r[0],e+r[0].length):-1}function Xt(n,t,e){vc.lastIndex=0;var r=vc.exec(t.slice(e));return r?(n.U=+r[0],e+r[0].length):-1}function $t(n,t,e){vc.lastIndex=0;var r=vc.exec(t.slice(e));return r?(n.W=+r[0],e+r[0].length):-1}function Bt(n,t,e){vc.lastIndex=0;var r=vc.exec(t.slice(e,e+4));return r?(n.y=+r[0],e+r[0].length):-1}function Wt(n,t,e){vc.lastIndex=0;var r=vc.exec(t.slice(e,e+2));return r?(n.y=Gt(+r[0]),e+r[0].length):-1}function Jt(n,t,e){return/^[+-]\d{4}$/.test(t=t.slice(e,e+5))?(n.Z=-t,e+5):-1}function Gt(n){return n+(n>68?1900:2e3)}function Kt(n,t,e){vc.lastIndex=0;var r=vc.exec(t.slice(e,e+2));return r?(n.m=r[0]-1,e+r[0].length):-1}function Qt(n,t,e){vc.lastIndex=0;var r=vc.exec(t.slice(e,e+2));return r?(n.d=+r[0],e+r[0].length):-1}function ne(n,t,e){vc.lastIndex=0;var r=vc.exec(t.slice(e,e+3));return r?(n.j=+r[0],e+r[0].length):-1}function te(n,t,e){vc.lastIndex=0;var r=vc.exec(t.slice(e,e+2));return r?(n.H=+r[0],e+r[0].length):-1}function ee(n,t,e){vc.lastIndex=0;var r=vc.exec(t.slice(e,e+2));return r?(n.M=+r[0],e+r[0].length):-1}function re(n,t,e){vc.lastIndex=0;var r=vc.exec(t.slice(e,e+2));return r?(n.S=+r[0],e+r[0].length):-1}function ue(n,t,e){vc.lastIndex=0;var r=vc.exec(t.slice(e,e+3));return r?(n.L=+r[0],e+r[0].length):-1}function ie(n){var t=n.getTimezoneOffset(),e=t>0?"-":"+",r=0|va(t)/60,u=va(t)%60;return e+Yt(r,"0",2)+Yt(u,"0",2)}function oe(n,t,e){dc.lastIndex=0;var r=dc.exec(t.slice(e,e+1));return r?e+r[0].length:-1}function ae(n){for(var t=n.length,e=-1;++e<t;)n[e][0]=this(n[e][0]);return function(t){for(var e=0,r=n[e];!r[1](t);)r=n[++e];return r[0](t)}}function ce(){}function le(n,t,e){var r=e.s=n+t,u=r-n,i=r-u;e.t=n-i+(t-u)}function se(n,t){n&&xc.hasOwnProperty(n.type)&&xc[n.type](n,t)}function fe(n,t,e){var r,u=-1,i=n.length-e;for(t.lineStart();++u<i;)r=n[u],t.point(r[0],r[1],r[2]);t.lineEnd()}function he(n,t){var e=-1,r=n.length;for(t.polygonStart();++e<r;)fe(n[e],t,1);t.polygonEnd()}function ge(){function n(n,t){n*=Fa,t=t*Fa/2+Da/4;var e=n-r,o=e>=0?1:-1,a=o*e,c=Math.cos(t),l=Math.sin(t),s=i*l,f=u*c+s*Math.cos(a),h=s*o*Math.sin(a);_c.add(Math.atan2(h,f)),r=n,u=c,i=l}var t,e,r,u,i;wc.point=function(o,a){wc.point=n,r=(t=o)*Fa,u=Math.cos(a=(e=a)*Fa/2+Da/4),i=Math.sin(a)},wc.lineEnd=function(){n(t,e)}}function pe(n){var t=n[0],e=n[1],r=Math.cos(e);return[r*Math.cos(t),r*Math.sin(t),Math.sin(e)]}function ve(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]}function de(n,t){return[n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]]}function me(n,t){n[0]+=t[0],n[1]+=t[1],n[2]+=t[2]}function ye(n,t){return[n[0]*t,n[1]*t,n[2]*t]}function Me(n){var t=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);n[0]/=t,n[1]/=t,n[2]/=t}function xe(n){return[Math.atan2(n[1],n[0]),nt(n[2])]}function be(n,t){return va(n[0]-t[0])<Ta&&va(n[1]-t[1])<Ta}function _e(n,t){n*=Fa;var e=Math.cos(t*=Fa);we(e*Math.cos(n),e*Math.sin(n),Math.sin(t))}function we(n,t,e){++Sc,Ec+=(n-Ec)/Sc,Ac+=(t-Ac)/Sc,Nc+=(e-Nc)/Sc}function Se(){function n(n,u){n*=Fa;var i=Math.cos(u*=Fa),o=i*Math.cos(n),a=i*Math.sin(n),c=Math.sin(u),l=Math.atan2(Math.sqrt((l=e*c-r*a)*l+(l=r*o-t*c)*l+(l=t*a-e*o)*l),t*o+e*a+r*c);kc+=l,Cc+=l*(t+(t=o)),zc+=l*(e+(e=a)),qc+=l*(r+(r=c)),we(t,e,r)}var t,e,r;Dc.point=function(u,i){u*=Fa;var o=Math.cos(i*=Fa);t=o*Math.cos(u),e=o*Math.sin(u),r=Math.sin(i),Dc.point=n,we(t,e,r)}}function ke(){Dc.point=_e}function Ee(){function n(n,t){n*=Fa;var e=Math.cos(t*=Fa),o=e*Math.cos(n),a=e*Math.sin(n),c=Math.sin(t),l=u*c-i*a,s=i*o-r*c,f=r*a-u*o,h=Math.sqrt(l*l+s*s+f*f),g=r*o+u*a+i*c,p=h&&-Q(g)/h,v=Math.atan2(h,g);Lc+=p*l,Tc+=p*s,Rc+=p*f,kc+=v,Cc+=v*(r+(r=o)),zc+=v*(u+(u=a)),qc+=v*(i+(i=c)),we(r,u,i)}var t,e,r,u,i;Dc.point=function(o,a){t=o,e=a,Dc.point=n,o*=Fa;var c=Math.cos(a*=Fa);r=c*Math.cos(o),u=c*Math.sin(o),i=Math.sin(a),we(r,u,i)},Dc.lineEnd=function(){n(t,e),Dc.lineEnd=ke,Dc.point=_e}}function Ae(n,t){function e(e,r){return e=n(e,r),t(e[0],e[1])}return n.invert&&t.invert&&(e.invert=function(e,r){return e=t.invert(e,r),e&&n.invert(e[0],e[1])}),e}function Ne(){return!0}function Ce(n,t,e,r,u){var i=[],o=[];if(n.forEach(function(n){if(!((t=n.length-1)<=0)){var t,e=n[0],r=n[t];if(be(e,r)){u.lineStart();for(var a=0;t>a;++a)u.point((e=n[a])[0],e[1]);return u.lineEnd(),void 0}var c=new qe(e,n,null,!0),l=new qe(e,null,c,!1);c.o=l,i.push(c),o.push(l),c=new qe(r,n,null,!1),l=new qe(r,null,c,!0),c.o=l,i.push(c),o.push(l)}}),o.sort(t),ze(i),ze(o),i.length){for(var a=0,c=e,l=o.length;l>a;++a)o[a].e=c=!c;for(var s,f,h=i[0];;){for(var g=h,p=!0;g.v;)if((g=g.n)===h)return;s=g.z,u.lineStart();do{if(g.v=g.o.v=!0,g.e){if(p)for(var a=0,l=s.length;l>a;++a)u.point((f=s[a])[0],f[1]);else r(g.x,g.n.x,1,u);g=g.n}else{if(p){s=g.p.z;for(var a=s.length-1;a>=0;--a)u.point((f=s[a])[0],f[1])}else r(g.x,g.p.x,-1,u);g=g.p}g=g.o,s=g.z,p=!p}while(!g.v);u.lineEnd()}}}function ze(n){if(t=n.length){for(var t,e,r=0,u=n[0];++r<t;)u.n=e=n[r],e.p=u,u=e;u.n=e=n[0],e.p=u}}function qe(n,t,e,r){this.x=n,this.z=t,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}function Le(n,t,e,r){return function(u,i){function o(t,e){var r=u(t,e);n(t=r[0],e=r[1])&&i.point(t,e)}function a(n,t){var e=u(n,t);d.point(e[0],e[1])}function c(){y.point=a,d.lineStart()}function l(){y.point=o,d.lineEnd()}function s(n,t){v.push([n,t]);var e=u(n,t);x.point(e[0],e[1])}function f(){x.lineStart(),v=[]}function h(){s(v[0][0],v[0][1]),x.lineEnd();var n,t=x.clean(),e=M.buffer(),r=e.length;if(v.pop(),p.push(v),v=null,r)if(1&t){n=e[0];var u,r=n.length-1,o=-1;if(r>0){for(b||(i.polygonStart(),b=!0),i.lineStart();++o<r;)i.point((u=n[o])[0],u[1]);i.lineEnd()}}else r>1&&2&t&&e.push(e.pop().concat(e.shift())),g.push(e.filter(Te))}var g,p,v,d=t(i),m=u.invert(r[0],r[1]),y={point:o,lineStart:c,lineEnd:l,polygonStart:function(){y.point=s,y.lineStart=f,y.lineEnd=h,g=[],p=[]},polygonEnd:function(){y.point=o,y.lineStart=c,y.lineEnd=l,g=ta.merge(g);var n=Fe(m,p);g.length?(b||(i.polygonStart(),b=!0),Ce(g,De,n,e,i)):n&&(b||(i.polygonStart(),b=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),b&&(i.polygonEnd(),b=!1),g=p=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}},M=Re(),x=t(M),b=!1;return y}}function Te(n){return n.length>1}function Re(){var n,t=[];return{lineStart:function(){t.push(n=[])},point:function(t,e){n.push([t,e])},lineEnd:y,buffer:function(){var e=t;return t=[],n=null,e},rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))}}}function De(n,t){return((n=n.x)[0]<0?n[1]-ja-Ta:ja-n[1])-((t=t.x)[0]<0?t[1]-ja-Ta:ja-t[1])}function Pe(n){var t,e=0/0,r=0/0,u=0/0;return{lineStart:function(){n.lineStart(),t=1},point:function(i,o){var a=i>0?Da:-Da,c=va(i-e);va(c-Da)<Ta?(n.point(e,r=(r+o)/2>0?ja:-ja),n.point(u,r),n.lineEnd(),n.lineStart(),n.point(a,r),n.point(i,r),t=0):u!==a&&c>=Da&&(va(e-u)<Ta&&(e-=u*Ta),va(i-a)<Ta&&(i-=a*Ta),r=Ue(e,r,i,o),n.point(u,r),n.lineEnd(),n.lineStart(),n.point(a,r),t=0),n.point(e=i,r=o),u=a},lineEnd:function(){n.lineEnd(),e=r=0/0},clean:function(){return 2-t}}}function Ue(n,t,e,r){var u,i,o=Math.sin(n-e);return va(o)>Ta?Math.atan((Math.sin(t)*(i=Math.cos(r))*Math.sin(e)-Math.sin(r)*(u=Math.cos(t))*Math.sin(n))/(u*i*o)):(t+r)/2}function je(n,t,e,r){var u;if(null==n)u=e*ja,r.point(-Da,u),r.point(0,u),r.point(Da,u),r.point(Da,0),r.point(Da,-u),r.point(0,-u),r.point(-Da,-u),r.point(-Da,0),r.point(-Da,u);else if(va(n[0]-t[0])>Ta){var i=n[0]<t[0]?Da:-Da;u=e*i/2,r.point(-i,u),r.point(0,u),r.point(i,u)}else r.point(t[0],t[1])}function Fe(n,t){var e=n[0],r=n[1],u=[Math.sin(e),-Math.cos(e),0],i=0,o=0;_c.reset();for(var a=0,c=t.length;c>a;++a){var l=t[a],s=l.length;if(s)for(var f=l[0],h=f[0],g=f[1]/2+Da/4,p=Math.sin(g),v=Math.cos(g),d=1;;){d===s&&(d=0),n=l[d];var m=n[0],y=n[1]/2+Da/4,M=Math.sin(y),x=Math.cos(y),b=m-h,_=b>=0?1:-1,w=_*b,S=w>Da,k=p*M;if(_c.add(Math.atan2(k*_*Math.sin(w),v*x+k*Math.cos(w))),i+=S?b+_*Pa:b,S^h>=e^m>=e){var E=de(pe(f),pe(n));Me(E);var A=de(u,E);Me(A);var N=(S^b>=0?-1:1)*nt(A[2]);(r>N||r===N&&(E[0]||E[1]))&&(o+=S^b>=0?1:-1)}if(!d++)break;h=m,p=M,v=x,f=n}}return(-Ta>i||Ta>i&&0>_c)^1&o}function He(n){function t(n,t){return Math.cos(n)*Math.cos(t)>i}function e(n){var e,i,c,l,s;return{lineStart:function(){l=c=!1,s=1},point:function(f,h){var g,p=[f,h],v=t(f,h),d=o?v?0:u(f,h):v?u(f+(0>f?Da:-Da),h):0;if(!e&&(l=c=v)&&n.lineStart(),v!==c&&(g=r(e,p),(be(e,g)||be(p,g))&&(p[0]+=Ta,p[1]+=Ta,v=t(p[0],p[1]))),v!==c)s=0,v?(n.lineStart(),g=r(p,e),n.point(g[0],g[1])):(g=r(e,p),n.point(g[0],g[1]),n.lineEnd()),e=g;else if(a&&e&&o^v){var m;d&i||!(m=r(p,e,!0))||(s=0,o?(n.lineStart(),n.point(m[0][0],m[0][1]),n.point(m[1][0],m[1][1]),n.lineEnd()):(n.point(m[1][0],m[1][1]),n.lineEnd(),n.lineStart(),n.point(m[0][0],m[0][1])))}!v||e&&be(e,p)||n.point(p[0],p[1]),e=p,c=v,i=d},lineEnd:function(){c&&n.lineEnd(),e=null},clean:function(){return s|(l&&c)<<1}}}function r(n,t,e){var r=pe(n),u=pe(t),o=[1,0,0],a=de(r,u),c=ve(a,a),l=a[0],s=c-l*l;if(!s)return!e&&n;var f=i*c/s,h=-i*l/s,g=de(o,a),p=ye(o,f),v=ye(a,h);me(p,v);var d=g,m=ve(p,d),y=ve(d,d),M=m*m-y*(ve(p,p)-1);if(!(0>M)){var x=Math.sqrt(M),b=ye(d,(-m-x)/y);if(me(b,p),b=xe(b),!e)return b;var _,w=n[0],S=t[0],k=n[1],E=t[1];w>S&&(_=w,w=S,S=_);var A=S-w,N=va(A-Da)<Ta,C=N||Ta>A;if(!N&&k>E&&(_=k,k=E,E=_),C?N?k+E>0^b[1]<(va(b[0]-w)<Ta?k:E):k<=b[1]&&b[1]<=E:A>Da^(w<=b[0]&&b[0]<=S)){var z=ye(d,(-m+x)/y);return me(z,p),[b,xe(z)]}}}function u(t,e){var r=o?n:Da-n,u=0;return-r>t?u|=1:t>r&&(u|=2),-r>e?u|=4:e>r&&(u|=8),u}var i=Math.cos(n),o=i>0,a=va(i)>Ta,c=gr(n,6*Fa);return Le(t,e,c,o?[0,-n]:[-Da,n-Da])}function Oe(n,t,e,r){return function(u){var i,o=u.a,a=u.b,c=o.x,l=o.y,s=a.x,f=a.y,h=0,g=1,p=s-c,v=f-l;if(i=n-c,p||!(i>0)){if(i/=p,0>p){if(h>i)return;g>i&&(g=i)}else if(p>0){if(i>g)return;i>h&&(h=i)}if(i=e-c,p||!(0>i)){if(i/=p,0>p){if(i>g)return;i>h&&(h=i)}else if(p>0){if(h>i)return;g>i&&(g=i)}if(i=t-l,v||!(i>0)){if(i/=v,0>v){if(h>i)return;g>i&&(g=i)}else if(v>0){if(i>g)return;i>h&&(h=i)}if(i=r-l,v||!(0>i)){if(i/=v,0>v){if(i>g)return;i>h&&(h=i)}else if(v>0){if(h>i)return;g>i&&(g=i)}return h>0&&(u.a={x:c+h*p,y:l+h*v}),1>g&&(u.b={x:c+g*p,y:l+g*v}),u}}}}}}function Ye(n,t,e,r){function u(r,u){return va(r[0]-n)<Ta?u>0?0:3:va(r[0]-e)<Ta?u>0?2:1:va(r[1]-t)<Ta?u>0?1:0:u>0?3:2}function i(n,t){return o(n.x,t.x)}function o(n,t){var e=u(n,1),r=u(t,1);return e!==r?e-r:0===e?t[1]-n[1]:1===e?n[0]-t[0]:2===e?n[1]-t[1]:t[0]-n[0]}return function(a){function c(n){for(var t=0,e=d.length,r=n[1],u=0;e>u;++u)for(var i,o=1,a=d[u],c=a.length,l=a[0];c>o;++o)i=a[o],l[1]<=r?i[1]>r&&K(l,i,n)>0&&++t:i[1]<=r&&K(l,i,n)<0&&--t,l=i;return 0!==t}function l(i,a,c,l){var s=0,f=0;if(null==i||(s=u(i,c))!==(f=u(a,c))||o(i,a)<0^c>0){do l.point(0===s||3===s?n:e,s>1?r:t);while((s=(s+c+4)%4)!==f)}else l.point(a[0],a[1])}function s(u,i){return u>=n&&e>=u&&i>=t&&r>=i}function f(n,t){s(n,t)&&a.point(n,t)}function h(){C.point=p,d&&d.push(m=[]),S=!0,w=!1,b=_=0/0}function g(){v&&(p(y,M),x&&w&&A.rejoin(),v.push(A.buffer())),C.point=f,w&&a.lineEnd()}function p(n,t){n=Math.max(-Uc,Math.min(Uc,n)),t=Math.max(-Uc,Math.min(Uc,t));var e=s(n,t);if(d&&m.push([n,t]),S)y=n,M=t,x=e,S=!1,e&&(a.lineStart(),a.point(n,t));else if(e&&w)a.point(n,t);else{var r={a:{x:b,y:_},b:{x:n,y:t}};N(r)?(w||(a.lineStart(),a.point(r.a.x,r.a.y)),a.point(r.b.x,r.b.y),e||a.lineEnd(),k=!1):e&&(a.lineStart(),a.point(n,t),k=!1)}b=n,_=t,w=e}var v,d,m,y,M,x,b,_,w,S,k,E=a,A=Re(),N=Oe(n,t,e,r),C={point:f,lineStart:h,lineEnd:g,polygonStart:function(){a=A,v=[],d=[],k=!0},polygonEnd:function(){a=E,v=ta.merge(v);var t=c([n,r]),e=k&&t,u=v.length;(e||u)&&(a.polygonStart(),e&&(a.lineStart(),l(null,null,1,a),a.lineEnd()),u&&Ce(v,i,t,l,a),a.polygonEnd()),v=d=m=null}};return C}}function Ie(n){var t=0,e=Da/3,r=ir(n),u=r(t,e);return u.parallels=function(n){return arguments.length?r(t=n[0]*Da/180,e=n[1]*Da/180):[180*(t/Da),180*(e/Da)]},u}function Ze(n,t){function e(n,t){var e=Math.sqrt(i-2*u*Math.sin(t))/u;return[e*Math.sin(n*=u),o-e*Math.cos(n)]}var r=Math.sin(n),u=(r+Math.sin(t))/2,i=1+r*(2*u-r),o=Math.sqrt(i)/u;return e.invert=function(n,t){var e=o-t;return[Math.atan2(n,e)/u,nt((i-(n*n+e*e)*u*u)/(2*u))]},e}function Ve(){function n(n,t){Fc+=u*n-r*t,r=n,u=t}var t,e,r,u;Zc.point=function(i,o){Zc.point=n,t=r=i,e=u=o},Zc.lineEnd=function(){n(t,e)}}function Xe(n,t){Hc>n&&(Hc=n),n>Yc&&(Yc=n),Oc>t&&(Oc=t),t>Ic&&(Ic=t)}function $e(){function n(n,t){o.push("M",n,",",t,i)}function t(n,t){o.push("M",n,",",t),a.point=e}function e(n,t){o.push("L",n,",",t)}function r(){a.point=n}function u(){o.push("Z")}var i=Be(4.5),o=[],a={point:n,lineStart:function(){a.point=t},lineEnd:r,polygonStart:function(){a.lineEnd=u},polygonEnd:function(){a.lineEnd=r,a.point=n},pointRadius:function(n){return i=Be(n),a},result:function(){if(o.length){var n=o.join("");return o=[],n}}};return a}function Be(n){return"m0,"+n+"a"+n+","+n+" 0 1,1 0,"+-2*n+"a"+n+","+n+" 0 1,1 0,"+2*n+"z"}function We(n,t){Ec+=n,Ac+=t,++Nc}function Je(){function n(n,r){var u=n-t,i=r-e,o=Math.sqrt(u*u+i*i);Cc+=o*(t+n)/2,zc+=o*(e+r)/2,qc+=o,We(t=n,e=r)}var t,e;Xc.point=function(r,u){Xc.point=n,We(t=r,e=u)}}function Ge(){Xc.point=We}function Ke(){function n(n,t){var e=n-r,i=t-u,o=Math.sqrt(e*e+i*i);Cc+=o*(r+n)/2,zc+=o*(u+t)/2,qc+=o,o=u*n-r*t,Lc+=o*(r+n),Tc+=o*(u+t),Rc+=3*o,We(r=n,u=t)}var t,e,r,u;Xc.point=function(i,o){Xc.point=n,We(t=r=i,e=u=o)},Xc.lineEnd=function(){n(t,e)}}function Qe(n){function t(t,e){n.moveTo(t+o,e),n.arc(t,e,o,0,Pa)}function e(t,e){n.moveTo(t,e),a.point=r}function r(t,e){n.lineTo(t,e)}function u(){a.point=t}function i(){n.closePath()}var o=4.5,a={point:t,lineStart:function(){a.point=e},lineEnd:u,polygonStart:function(){a.lineEnd=i},polygonEnd:function(){a.lineEnd=u,a.point=t},pointRadius:function(n){return o=n,a},result:y};return a}function nr(n){function t(n){return(a?r:e)(n)}function e(t){return rr(t,function(e,r){e=n(e,r),t.point(e[0],e[1])})}function r(t){function e(e,r){e=n(e,r),t.point(e[0],e[1])}function r(){M=0/0,S.point=i,t.lineStart()}function i(e,r){var i=pe([e,r]),o=n(e,r);u(M,x,y,b,_,w,M=o[0],x=o[1],y=e,b=i[0],_=i[1],w=i[2],a,t),t.point(M,x)}function o(){S.point=e,t.lineEnd()}function c(){r(),S.point=l,S.lineEnd=s}function l(n,t){i(f=n,h=t),g=M,p=x,v=b,d=_,m=w,S.point=i}function s(){u(M,x,y,b,_,w,g,p,f,v,d,m,a,t),S.lineEnd=o,o()}var f,h,g,p,v,d,m,y,M,x,b,_,w,S={point:e,lineStart:r,lineEnd:o,polygonStart:function(){t.polygonStart(),S.lineStart=c},polygonEnd:function(){t.polygonEnd(),S.lineStart=r}};return S}function u(t,e,r,a,c,l,s,f,h,g,p,v,d,m){var y=s-t,M=f-e,x=y*y+M*M;if(x>4*i&&d--){var b=a+g,_=c+p,w=l+v,S=Math.sqrt(b*b+_*_+w*w),k=Math.asin(w/=S),E=va(va(w)-1)<Ta||va(r-h)<Ta?(r+h)/2:Math.atan2(_,b),A=n(E,k),N=A[0],C=A[1],z=N-t,q=C-e,L=M*z-y*q;
(L*L/x>i||va((y*z+M*q)/x-.5)>.3||o>a*g+c*p+l*v)&&(u(t,e,r,a,c,l,N,C,E,b/=S,_/=S,w,d,m),m.point(N,C),u(N,C,E,b,_,w,s,f,h,g,p,v,d,m))}}var i=.5,o=Math.cos(30*Fa),a=16;return t.precision=function(n){return arguments.length?(a=(i=n*n)>0&&16,t):Math.sqrt(i)},t}function tr(n){var t=nr(function(t,e){return n([t*Ha,e*Ha])});return function(n){return or(t(n))}}function er(n){this.stream=n}function rr(n,t){return{point:t,sphere:function(){n.sphere()},lineStart:function(){n.lineStart()},lineEnd:function(){n.lineEnd()},polygonStart:function(){n.polygonStart()},polygonEnd:function(){n.polygonEnd()}}}function ur(n){return ir(function(){return n})()}function ir(n){function t(n){return n=a(n[0]*Fa,n[1]*Fa),[n[0]*h+c,l-n[1]*h]}function e(n){return n=a.invert((n[0]-c)/h,(l-n[1])/h),n&&[n[0]*Ha,n[1]*Ha]}function r(){a=Ae(o=lr(m,y,M),i);var n=i(v,d);return c=g-n[0]*h,l=p+n[1]*h,u()}function u(){return s&&(s.valid=!1,s=null),t}var i,o,a,c,l,s,f=nr(function(n,t){return n=i(n,t),[n[0]*h+c,l-n[1]*h]}),h=150,g=480,p=250,v=0,d=0,m=0,y=0,M=0,x=Pc,b=Et,_=null,w=null;return t.stream=function(n){return s&&(s.valid=!1),s=or(x(o,f(b(n)))),s.valid=!0,s},t.clipAngle=function(n){return arguments.length?(x=null==n?(_=n,Pc):He((_=+n)*Fa),u()):_},t.clipExtent=function(n){return arguments.length?(w=n,b=n?Ye(n[0][0],n[0][1],n[1][0],n[1][1]):Et,u()):w},t.scale=function(n){return arguments.length?(h=+n,r()):h},t.translate=function(n){return arguments.length?(g=+n[0],p=+n[1],r()):[g,p]},t.center=function(n){return arguments.length?(v=n[0]%360*Fa,d=n[1]%360*Fa,r()):[v*Ha,d*Ha]},t.rotate=function(n){return arguments.length?(m=n[0]%360*Fa,y=n[1]%360*Fa,M=n.length>2?n[2]%360*Fa:0,r()):[m*Ha,y*Ha,M*Ha]},ta.rebind(t,f,"precision"),function(){return i=n.apply(this,arguments),t.invert=i.invert&&e,r()}}function or(n){return rr(n,function(t,e){n.point(t*Fa,e*Fa)})}function ar(n,t){return[n,t]}function cr(n,t){return[n>Da?n-Pa:-Da>n?n+Pa:n,t]}function lr(n,t,e){return n?t||e?Ae(fr(n),hr(t,e)):fr(n):t||e?hr(t,e):cr}function sr(n){return function(t,e){return t+=n,[t>Da?t-Pa:-Da>t?t+Pa:t,e]}}function fr(n){var t=sr(n);return t.invert=sr(-n),t}function hr(n,t){function e(n,t){var e=Math.cos(t),a=Math.cos(n)*e,c=Math.sin(n)*e,l=Math.sin(t),s=l*r+a*u;return[Math.atan2(c*i-s*o,a*r-l*u),nt(s*i+c*o)]}var r=Math.cos(n),u=Math.sin(n),i=Math.cos(t),o=Math.sin(t);return e.invert=function(n,t){var e=Math.cos(t),a=Math.cos(n)*e,c=Math.sin(n)*e,l=Math.sin(t),s=l*i-c*o;return[Math.atan2(c*i+l*o,a*r+s*u),nt(s*r-a*u)]},e}function gr(n,t){var e=Math.cos(n),r=Math.sin(n);return function(u,i,o,a){var c=o*t;null!=u?(u=pr(e,u),i=pr(e,i),(o>0?i>u:u>i)&&(u+=o*Pa)):(u=n+o*Pa,i=n-.5*c);for(var l,s=u;o>0?s>i:i>s;s-=c)a.point((l=xe([e,-r*Math.cos(s),-r*Math.sin(s)]))[0],l[1])}}function pr(n,t){var e=pe(t);e[0]-=n,Me(e);var r=Q(-e[1]);return((-e[2]<0?-r:r)+2*Math.PI-Ta)%(2*Math.PI)}function vr(n,t,e){var r=ta.range(n,t-Ta,e).concat(t);return function(n){return r.map(function(t){return[n,t]})}}function dr(n,t,e){var r=ta.range(n,t-Ta,e).concat(t);return function(n){return r.map(function(t){return[t,n]})}}function mr(n){return n.source}function yr(n){return n.target}function Mr(n,t,e,r){var u=Math.cos(t),i=Math.sin(t),o=Math.cos(r),a=Math.sin(r),c=u*Math.cos(n),l=u*Math.sin(n),s=o*Math.cos(e),f=o*Math.sin(e),h=2*Math.asin(Math.sqrt(ut(r-t)+u*o*ut(e-n))),g=1/Math.sin(h),p=h?function(n){var t=Math.sin(n*=h)*g,e=Math.sin(h-n)*g,r=e*c+t*s,u=e*l+t*f,o=e*i+t*a;return[Math.atan2(u,r)*Ha,Math.atan2(o,Math.sqrt(r*r+u*u))*Ha]}:function(){return[n*Ha,t*Ha]};return p.distance=h,p}function xr(){function n(n,u){var i=Math.sin(u*=Fa),o=Math.cos(u),a=va((n*=Fa)-t),c=Math.cos(a);$c+=Math.atan2(Math.sqrt((a=o*Math.sin(a))*a+(a=r*i-e*o*c)*a),e*i+r*o*c),t=n,e=i,r=o}var t,e,r;Bc.point=function(u,i){t=u*Fa,e=Math.sin(i*=Fa),r=Math.cos(i),Bc.point=n},Bc.lineEnd=function(){Bc.point=Bc.lineEnd=y}}function br(n,t){function e(t,e){var r=Math.cos(t),u=Math.cos(e),i=n(r*u);return[i*u*Math.sin(t),i*Math.sin(e)]}return e.invert=function(n,e){var r=Math.sqrt(n*n+e*e),u=t(r),i=Math.sin(u),o=Math.cos(u);return[Math.atan2(n*i,r*o),Math.asin(r&&e*i/r)]},e}function _r(n,t){function e(n,t){o>0?-ja+Ta>t&&(t=-ja+Ta):t>ja-Ta&&(t=ja-Ta);var e=o/Math.pow(u(t),i);return[e*Math.sin(i*n),o-e*Math.cos(i*n)]}var r=Math.cos(n),u=function(n){return Math.tan(Da/4+n/2)},i=n===t?Math.sin(n):Math.log(r/Math.cos(t))/Math.log(u(t)/u(n)),o=r*Math.pow(u(n),i)/i;return i?(e.invert=function(n,t){var e=o-t,r=G(i)*Math.sqrt(n*n+e*e);return[Math.atan2(n,e)/i,2*Math.atan(Math.pow(o/r,1/i))-ja]},e):Sr}function wr(n,t){function e(n,t){var e=i-t;return[e*Math.sin(u*n),i-e*Math.cos(u*n)]}var r=Math.cos(n),u=n===t?Math.sin(n):(r-Math.cos(t))/(t-n),i=r/u+n;return va(u)<Ta?ar:(e.invert=function(n,t){var e=i-t;return[Math.atan2(n,e)/u,i-G(u)*Math.sqrt(n*n+e*e)]},e)}function Sr(n,t){return[n,Math.log(Math.tan(Da/4+t/2))]}function kr(n){var t,e=ur(n),r=e.scale,u=e.translate,i=e.clipExtent;return e.scale=function(){var n=r.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.translate=function(){var n=u.apply(e,arguments);return n===e?t?e.clipExtent(null):e:n},e.clipExtent=function(n){var o=i.apply(e,arguments);if(o===e){if(t=null==n){var a=Da*r(),c=u();i([[c[0]-a,c[1]-a],[c[0]+a,c[1]+a]])}}else t&&(o=null);return o},e.clipExtent(null)}function Er(n,t){return[Math.log(Math.tan(Da/4+t/2)),-n]}function Ar(n){return n[0]}function Nr(n){return n[1]}function Cr(n){for(var t=n.length,e=[0,1],r=2,u=2;t>u;u++){for(;r>1&&K(n[e[r-2]],n[e[r-1]],n[u])<=0;)--r;e[r++]=u}return e.slice(0,r)}function zr(n,t){return n[0]-t[0]||n[1]-t[1]}function qr(n,t,e){return(e[0]-t[0])*(n[1]-t[1])<(e[1]-t[1])*(n[0]-t[0])}function Lr(n,t,e,r){var u=n[0],i=e[0],o=t[0]-u,a=r[0]-i,c=n[1],l=e[1],s=t[1]-c,f=r[1]-l,h=(a*(c-l)-f*(u-i))/(f*o-a*s);return[u+h*o,c+h*s]}function Tr(n){var t=n[0],e=n[n.length-1];return!(t[0]-e[0]||t[1]-e[1])}function Rr(){tu(this),this.edge=this.site=this.circle=null}function Dr(n){var t=ol.pop()||new Rr;return t.site=n,t}function Pr(n){Xr(n),rl.remove(n),ol.push(n),tu(n)}function Ur(n){var t=n.circle,e=t.x,r=t.cy,u={x:e,y:r},i=n.P,o=n.N,a=[n];Pr(n);for(var c=i;c.circle&&va(e-c.circle.x)<Ta&&va(r-c.circle.cy)<Ta;)i=c.P,a.unshift(c),Pr(c),c=i;a.unshift(c),Xr(c);for(var l=o;l.circle&&va(e-l.circle.x)<Ta&&va(r-l.circle.cy)<Ta;)o=l.N,a.push(l),Pr(l),l=o;a.push(l),Xr(l);var s,f=a.length;for(s=1;f>s;++s)l=a[s],c=a[s-1],Kr(l.edge,c.site,l.site,u);c=a[0],l=a[f-1],l.edge=Jr(c.site,l.site,null,u),Vr(c),Vr(l)}function jr(n){for(var t,e,r,u,i=n.x,o=n.y,a=rl._;a;)if(r=Fr(a,o)-i,r>Ta)a=a.L;else{if(u=i-Hr(a,o),!(u>Ta)){r>-Ta?(t=a.P,e=a):u>-Ta?(t=a,e=a.N):t=e=a;break}if(!a.R){t=a;break}a=a.R}var c=Dr(n);if(rl.insert(t,c),t||e){if(t===e)return Xr(t),e=Dr(t.site),rl.insert(c,e),c.edge=e.edge=Jr(t.site,c.site),Vr(t),Vr(e),void 0;if(!e)return c.edge=Jr(t.site,c.site),void 0;Xr(t),Xr(e);var l=t.site,s=l.x,f=l.y,h=n.x-s,g=n.y-f,p=e.site,v=p.x-s,d=p.y-f,m=2*(h*d-g*v),y=h*h+g*g,M=v*v+d*d,x={x:(d*y-g*M)/m+s,y:(h*M-v*y)/m+f};Kr(e.edge,l,p,x),c.edge=Jr(l,n,null,x),e.edge=Jr(n,p,null,x),Vr(t),Vr(e)}}function Fr(n,t){var e=n.site,r=e.x,u=e.y,i=u-t;if(!i)return r;var o=n.P;if(!o)return-1/0;e=o.site;var a=e.x,c=e.y,l=c-t;if(!l)return a;var s=a-r,f=1/i-1/l,h=s/l;return f?(-h+Math.sqrt(h*h-2*f*(s*s/(-2*l)-c+l/2+u-i/2)))/f+r:(r+a)/2}function Hr(n,t){var e=n.N;if(e)return Fr(e,t);var r=n.site;return r.y===t?r.x:1/0}function Or(n){this.site=n,this.edges=[]}function Yr(n){for(var t,e,r,u,i,o,a,c,l,s,f=n[0][0],h=n[1][0],g=n[0][1],p=n[1][1],v=el,d=v.length;d--;)if(i=v[d],i&&i.prepare())for(a=i.edges,c=a.length,o=0;c>o;)s=a[o].end(),r=s.x,u=s.y,l=a[++o%c].start(),t=l.x,e=l.y,(va(r-t)>Ta||va(u-e)>Ta)&&(a.splice(o,0,new Qr(Gr(i.site,s,va(r-f)<Ta&&p-u>Ta?{x:f,y:va(t-f)<Ta?e:p}:va(u-p)<Ta&&h-r>Ta?{x:va(e-p)<Ta?t:h,y:p}:va(r-h)<Ta&&u-g>Ta?{x:h,y:va(t-h)<Ta?e:g}:va(u-g)<Ta&&r-f>Ta?{x:va(e-g)<Ta?t:f,y:g}:null),i.site,null)),++c)}function Ir(n,t){return t.angle-n.angle}function Zr(){tu(this),this.x=this.y=this.arc=this.site=this.cy=null}function Vr(n){var t=n.P,e=n.N;if(t&&e){var r=t.site,u=n.site,i=e.site;if(r!==i){var o=u.x,a=u.y,c=r.x-o,l=r.y-a,s=i.x-o,f=i.y-a,h=2*(c*f-l*s);if(!(h>=-Ra)){var g=c*c+l*l,p=s*s+f*f,v=(f*g-l*p)/h,d=(c*p-s*g)/h,f=d+a,m=al.pop()||new Zr;m.arc=n,m.site=u,m.x=v+o,m.y=f+Math.sqrt(v*v+d*d),m.cy=f,n.circle=m;for(var y=null,M=il._;M;)if(m.y<M.y||m.y===M.y&&m.x<=M.x){if(!M.L){y=M.P;break}M=M.L}else{if(!M.R){y=M;break}M=M.R}il.insert(y,m),y||(ul=m)}}}}function Xr(n){var t=n.circle;t&&(t.P||(ul=t.N),il.remove(t),al.push(t),tu(t),n.circle=null)}function $r(n){for(var t,e=tl,r=Oe(n[0][0],n[0][1],n[1][0],n[1][1]),u=e.length;u--;)t=e[u],(!Br(t,n)||!r(t)||va(t.a.x-t.b.x)<Ta&&va(t.a.y-t.b.y)<Ta)&&(t.a=t.b=null,e.splice(u,1))}function Br(n,t){var e=n.b;if(e)return!0;var r,u,i=n.a,o=t[0][0],a=t[1][0],c=t[0][1],l=t[1][1],s=n.l,f=n.r,h=s.x,g=s.y,p=f.x,v=f.y,d=(h+p)/2,m=(g+v)/2;if(v===g){if(o>d||d>=a)return;if(h>p){if(i){if(i.y>=l)return}else i={x:d,y:c};e={x:d,y:l}}else{if(i){if(i.y<c)return}else i={x:d,y:l};e={x:d,y:c}}}else if(r=(h-p)/(v-g),u=m-r*d,-1>r||r>1)if(h>p){if(i){if(i.y>=l)return}else i={x:(c-u)/r,y:c};e={x:(l-u)/r,y:l}}else{if(i){if(i.y<c)return}else i={x:(l-u)/r,y:l};e={x:(c-u)/r,y:c}}else if(v>g){if(i){if(i.x>=a)return}else i={x:o,y:r*o+u};e={x:a,y:r*a+u}}else{if(i){if(i.x<o)return}else i={x:a,y:r*a+u};e={x:o,y:r*o+u}}return n.a=i,n.b=e,!0}function Wr(n,t){this.l=n,this.r=t,this.a=this.b=null}function Jr(n,t,e,r){var u=new Wr(n,t);return tl.push(u),e&&Kr(u,n,t,e),r&&Kr(u,t,n,r),el[n.i].edges.push(new Qr(u,n,t)),el[t.i].edges.push(new Qr(u,t,n)),u}function Gr(n,t,e){var r=new Wr(n,null);return r.a=t,r.b=e,tl.push(r),r}function Kr(n,t,e,r){n.a||n.b?n.l===e?n.b=r:n.a=r:(n.a=r,n.l=t,n.r=e)}function Qr(n,t,e){var r=n.a,u=n.b;this.edge=n,this.site=t,this.angle=e?Math.atan2(e.y-t.y,e.x-t.x):n.l===t?Math.atan2(u.x-r.x,r.y-u.y):Math.atan2(r.x-u.x,u.y-r.y)}function nu(){this._=null}function tu(n){n.U=n.C=n.L=n.R=n.P=n.N=null}function eu(n,t){var e=t,r=t.R,u=e.U;u?u.L===e?u.L=r:u.R=r:n._=r,r.U=u,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function ru(n,t){var e=t,r=t.L,u=e.U;u?u.L===e?u.L=r:u.R=r:n._=r,r.U=u,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function uu(n){for(;n.L;)n=n.L;return n}function iu(n,t){var e,r,u,i=n.sort(ou).pop();for(tl=[],el=new Array(n.length),rl=new nu,il=new nu;;)if(u=ul,i&&(!u||i.y<u.y||i.y===u.y&&i.x<u.x))(i.x!==e||i.y!==r)&&(el[i.i]=new Or(i),jr(i),e=i.x,r=i.y),i=n.pop();else{if(!u)break;Ur(u.arc)}t&&($r(t),Yr(t));var o={cells:el,edges:tl};return rl=il=tl=el=null,o}function ou(n,t){return t.y-n.y||t.x-n.x}function au(n,t,e){return(n.x-e.x)*(t.y-n.y)-(n.x-t.x)*(e.y-n.y)}function cu(n){return n.x}function lu(n){return n.y}function su(){return{leaf:!0,nodes:[],point:null,x:null,y:null}}function fu(n,t,e,r,u,i){if(!n(t,e,r,u,i)){var o=.5*(e+u),a=.5*(r+i),c=t.nodes;c[0]&&fu(n,c[0],e,r,o,a),c[1]&&fu(n,c[1],o,r,u,a),c[2]&&fu(n,c[2],e,a,o,i),c[3]&&fu(n,c[3],o,a,u,i)}}function hu(n,t,e,r,u,i,o){var a,c=1/0;return function l(n,s,f,h,g){if(!(s>i||f>o||r>h||u>g)){if(p=n.point){var p,v=t-p[0],d=e-p[1],m=v*v+d*d;if(c>m){var y=Math.sqrt(c=m);r=t-y,u=e-y,i=t+y,o=e+y,a=p}}for(var M=n.nodes,x=.5*(s+h),b=.5*(f+g),_=t>=x,w=e>=b,S=w<<1|_,k=S+4;k>S;++S)if(n=M[3&S])switch(3&S){case 0:l(n,s,f,x,b);break;case 1:l(n,x,f,h,b);break;case 2:l(n,s,b,x,g);break;case 3:l(n,x,b,h,g)}}}(n,r,u,i,o),a}function gu(n,t){n=ta.rgb(n),t=ta.rgb(t);var e=n.r,r=n.g,u=n.b,i=t.r-e,o=t.g-r,a=t.b-u;return function(n){return"#"+Mt(Math.round(e+i*n))+Mt(Math.round(r+o*n))+Mt(Math.round(u+a*n))}}function pu(n,t){var e,r={},u={};for(e in n)e in t?r[e]=mu(n[e],t[e]):u[e]=n[e];for(e in t)e in n||(u[e]=t[e]);return function(n){for(e in r)u[e]=r[e](n);return u}}function vu(n,t){return n=+n,t=+t,function(e){return n*(1-e)+t*e}}function du(n,t){var e,r,u,i=ll.lastIndex=sl.lastIndex=0,o=-1,a=[],c=[];for(n+="",t+="";(e=ll.exec(n))&&(r=sl.exec(t));)(u=r.index)>i&&(u=t.slice(i,u),a[o]?a[o]+=u:a[++o]=u),(e=e[0])===(r=r[0])?a[o]?a[o]+=r:a[++o]=r:(a[++o]=null,c.push({i:o,x:vu(e,r)})),i=sl.lastIndex;return i<t.length&&(u=t.slice(i),a[o]?a[o]+=u:a[++o]=u),a.length<2?c[0]?(t=c[0].x,function(n){return t(n)+""}):function(){return t}:(t=c.length,function(n){for(var e,r=0;t>r;++r)a[(e=c[r]).i]=e.x(n);return a.join("")})}function mu(n,t){for(var e,r=ta.interpolators.length;--r>=0&&!(e=ta.interpolators[r](n,t)););return e}function yu(n,t){var e,r=[],u=[],i=n.length,o=t.length,a=Math.min(n.length,t.length);for(e=0;a>e;++e)r.push(mu(n[e],t[e]));for(;i>e;++e)u[e]=n[e];for(;o>e;++e)u[e]=t[e];return function(n){for(e=0;a>e;++e)u[e]=r[e](n);return u}}function Mu(n){return function(t){return 0>=t?0:t>=1?1:n(t)}}function xu(n){return function(t){return 1-n(1-t)}}function bu(n){return function(t){return.5*(.5>t?n(2*t):2-n(2-2*t))}}function _u(n){return n*n}function wu(n){return n*n*n}function Su(n){if(0>=n)return 0;if(n>=1)return 1;var t=n*n,e=t*n;return 4*(.5>n?e:3*(n-t)+e-.75)}function ku(n){return function(t){return Math.pow(t,n)}}function Eu(n){return 1-Math.cos(n*ja)}function Au(n){return Math.pow(2,10*(n-1))}function Nu(n){return 1-Math.sqrt(1-n*n)}function Cu(n,t){var e;return arguments.length<2&&(t=.45),arguments.length?e=t/Pa*Math.asin(1/n):(n=1,e=t/4),function(r){return 1+n*Math.pow(2,-10*r)*Math.sin((r-e)*Pa/t)}}function zu(n){return n||(n=1.70158),function(t){return t*t*((n+1)*t-n)}}function qu(n){return 1/2.75>n?7.5625*n*n:2/2.75>n?7.5625*(n-=1.5/2.75)*n+.75:2.5/2.75>n?7.5625*(n-=2.25/2.75)*n+.9375:7.5625*(n-=2.625/2.75)*n+.984375}function Lu(n,t){n=ta.hcl(n),t=ta.hcl(t);var e=n.h,r=n.c,u=n.l,i=t.h-e,o=t.c-r,a=t.l-u;return isNaN(o)&&(o=0,r=isNaN(r)?t.c:r),isNaN(i)?(i=0,e=isNaN(e)?t.h:e):i>180?i-=360:-180>i&&(i+=360),function(n){return lt(e+i*n,r+o*n,u+a*n)+""}}function Tu(n,t){n=ta.hsl(n),t=ta.hsl(t);var e=n.h,r=n.s,u=n.l,i=t.h-e,o=t.s-r,a=t.l-u;return isNaN(o)&&(o=0,r=isNaN(r)?t.s:r),isNaN(i)?(i=0,e=isNaN(e)?t.h:e):i>180?i-=360:-180>i&&(i+=360),function(n){return at(e+i*n,r+o*n,u+a*n)+""}}function Ru(n,t){n=ta.lab(n),t=ta.lab(t);var e=n.l,r=n.a,u=n.b,i=t.l-e,o=t.a-r,a=t.b-u;return function(n){return ft(e+i*n,r+o*n,u+a*n)+""}}function Du(n,t){return t-=n,function(e){return Math.round(n+t*e)}}function Pu(n){var t=[n.a,n.b],e=[n.c,n.d],r=ju(t),u=Uu(t,e),i=ju(Fu(e,t,-u))||0;t[0]*e[1]<e[0]*t[1]&&(t[0]*=-1,t[1]*=-1,r*=-1,u*=-1),this.rotate=(r?Math.atan2(t[1],t[0]):Math.atan2(-e[0],e[1]))*Ha,this.translate=[n.e,n.f],this.scale=[r,i],this.skew=i?Math.atan2(u,i)*Ha:0}function Uu(n,t){return n[0]*t[0]+n[1]*t[1]}function ju(n){var t=Math.sqrt(Uu(n,n));return t&&(n[0]/=t,n[1]/=t),t}function Fu(n,t,e){return n[0]+=e*t[0],n[1]+=e*t[1],n}function Hu(n,t){var e,r=[],u=[],i=ta.transform(n),o=ta.transform(t),a=i.translate,c=o.translate,l=i.rotate,s=o.rotate,f=i.skew,h=o.skew,g=i.scale,p=o.scale;return a[0]!=c[0]||a[1]!=c[1]?(r.push("translate(",null,",",null,")"),u.push({i:1,x:vu(a[0],c[0])},{i:3,x:vu(a[1],c[1])})):c[0]||c[1]?r.push("translate("+c+")"):r.push(""),l!=s?(l-s>180?s+=360:s-l>180&&(l+=360),u.push({i:r.push(r.pop()+"rotate(",null,")")-2,x:vu(l,s)})):s&&r.push(r.pop()+"rotate("+s+")"),f!=h?u.push({i:r.push(r.pop()+"skewX(",null,")")-2,x:vu(f,h)}):h&&r.push(r.pop()+"skewX("+h+")"),g[0]!=p[0]||g[1]!=p[1]?(e=r.push(r.pop()+"scale(",null,",",null,")"),u.push({i:e-4,x:vu(g[0],p[0])},{i:e-2,x:vu(g[1],p[1])})):(1!=p[0]||1!=p[1])&&r.push(r.pop()+"scale("+p+")"),e=u.length,function(n){for(var t,i=-1;++i<e;)r[(t=u[i]).i]=t.x(n);return r.join("")}}function Ou(n,t){return t=(t-=n=+n)||1/t,function(e){return(e-n)/t}}function Yu(n,t){return t=(t-=n=+n)||1/t,function(e){return Math.max(0,Math.min(1,(e-n)/t))}}function Iu(n){for(var t=n.source,e=n.target,r=Vu(t,e),u=[t];t!==r;)t=t.parent,u.push(t);for(var i=u.length;e!==r;)u.splice(i,0,e),e=e.parent;return u}function Zu(n){for(var t=[],e=n.parent;null!=e;)t.push(n),n=e,e=e.parent;return t.push(n),t}function Vu(n,t){if(n===t)return n;for(var e=Zu(n),r=Zu(t),u=e.pop(),i=r.pop(),o=null;u===i;)o=u,u=e.pop(),i=r.pop();return o}function Xu(n){n.fixed|=2}function $u(n){n.fixed&=-7}function Bu(n){n.fixed|=4,n.px=n.x,n.py=n.y}function Wu(n){n.fixed&=-5}function Ju(n,t,e){var r=0,u=0;if(n.charge=0,!n.leaf)for(var i,o=n.nodes,a=o.length,c=-1;++c<a;)i=o[c],null!=i&&(Ju(i,t,e),n.charge+=i.charge,r+=i.charge*i.cx,u+=i.charge*i.cy);if(n.point){n.leaf||(n.point.x+=Math.random()-.5,n.point.y+=Math.random()-.5);var l=t*e[n.point.index];n.charge+=n.pointCharge=l,r+=l*n.point.x,u+=l*n.point.y}n.cx=r/n.charge,n.cy=u/n.charge}function Gu(n,t){return ta.rebind(n,t,"sort","children","value"),n.nodes=n,n.links=ri,n}function Ku(n,t){for(var e=[n];null!=(n=e.pop());)if(t(n),(u=n.children)&&(r=u.length))for(var r,u;--r>=0;)e.push(u[r])}function Qu(n,t){for(var e=[n],r=[];null!=(n=e.pop());)if(r.push(n),(i=n.children)&&(u=i.length))for(var u,i,o=-1;++o<u;)e.push(i[o]);for(;null!=(n=r.pop());)t(n)}function ni(n){return n.children}function ti(n){return n.value}function ei(n,t){return t.value-n.value}function ri(n){return ta.merge(n.map(function(n){return(n.children||[]).map(function(t){return{source:n,target:t}})}))}function ui(n){return n.x}function ii(n){return n.y}function oi(n,t,e){n.y0=t,n.y=e}function ai(n){return ta.range(n.length)}function ci(n){for(var t=-1,e=n[0].length,r=[];++t<e;)r[t]=0;return r}function li(n){for(var t,e=1,r=0,u=n[0][1],i=n.length;i>e;++e)(t=n[e][1])>u&&(r=e,u=t);return r}function si(n){return n.reduce(fi,0)}function fi(n,t){return n+t[1]}function hi(n,t){return gi(n,Math.ceil(Math.log(t.length)/Math.LN2+1))}function gi(n,t){for(var e=-1,r=+n[0],u=(n[1]-r)/t,i=[];++e<=t;)i[e]=u*e+r;return i}function pi(n){return[ta.min(n),ta.max(n)]}function vi(n,t){return n.value-t.value}function di(n,t){var e=n._pack_next;n._pack_next=t,t._pack_prev=n,t._pack_next=e,e._pack_prev=t}function mi(n,t){n._pack_next=t,t._pack_prev=n}function yi(n,t){var e=t.x-n.x,r=t.y-n.y,u=n.r+t.r;return.999*u*u>e*e+r*r}function Mi(n){function t(n){s=Math.min(n.x-n.r,s),f=Math.max(n.x+n.r,f),h=Math.min(n.y-n.r,h),g=Math.max(n.y+n.r,g)}if((e=n.children)&&(l=e.length)){var e,r,u,i,o,a,c,l,s=1/0,f=-1/0,h=1/0,g=-1/0;if(e.forEach(xi),r=e[0],r.x=-r.r,r.y=0,t(r),l>1&&(u=e[1],u.x=u.r,u.y=0,t(u),l>2))for(i=e[2],wi(r,u,i),t(i),di(r,i),r._pack_prev=i,di(i,u),u=r._pack_next,o=3;l>o;o++){wi(r,u,i=e[o]);var p=0,v=1,d=1;for(a=u._pack_next;a!==u;a=a._pack_next,v++)if(yi(a,i)){p=1;break}if(1==p)for(c=r._pack_prev;c!==a._pack_prev&&!yi(c,i);c=c._pack_prev,d++);p?(d>v||v==d&&u.r<r.r?mi(r,u=a):mi(r=c,u),o--):(di(r,i),u=i,t(i))}var m=(s+f)/2,y=(h+g)/2,M=0;for(o=0;l>o;o++)i=e[o],i.x-=m,i.y-=y,M=Math.max(M,i.r+Math.sqrt(i.x*i.x+i.y*i.y));n.r=M,e.forEach(bi)}}function xi(n){n._pack_next=n._pack_prev=n}function bi(n){delete n._pack_next,delete n._pack_prev}function _i(n,t,e,r){var u=n.children;if(n.x=t+=r*n.x,n.y=e+=r*n.y,n.r*=r,u)for(var i=-1,o=u.length;++i<o;)_i(u[i],t,e,r)}function wi(n,t,e){var r=n.r+e.r,u=t.x-n.x,i=t.y-n.y;if(r&&(u||i)){var o=t.r+e.r,a=u*u+i*i;o*=o,r*=r;var c=.5+(r-o)/(2*a),l=Math.sqrt(Math.max(0,2*o*(r+a)-(r-=a)*r-o*o))/(2*a);e.x=n.x+c*u+l*i,e.y=n.y+c*i-l*u}else e.x=n.x+r,e.y=n.y}function Si(n,t){return n.parent==t.parent?1:2}function ki(n){var t=n.children;return t.length?t[0]:n.t}function Ei(n){var t,e=n.children;return(t=e.length)?e[t-1]:n.t}function Ai(n,t,e){var r=e/(t.i-n.i);t.c-=r,t.s+=e,n.c+=r,t.z+=e,t.m+=e}function Ni(n){for(var t,e=0,r=0,u=n.children,i=u.length;--i>=0;)t=u[i],t.z+=e,t.m+=e,e+=t.s+(r+=t.c)}function Ci(n,t,e){return n.a.parent===t.parent?n.a:e}function zi(n){return 1+ta.max(n,function(n){return n.y})}function qi(n){return n.reduce(function(n,t){return n+t.x},0)/n.length}function Li(n){var t=n.children;return t&&t.length?Li(t[0]):n}function Ti(n){var t,e=n.children;return e&&(t=e.length)?Ti(e[t-1]):n}function Ri(n){return{x:n.x,y:n.y,dx:n.dx,dy:n.dy}}function Di(n,t){var e=n.x+t[3],r=n.y+t[0],u=n.dx-t[1]-t[3],i=n.dy-t[0]-t[2];return 0>u&&(e+=u/2,u=0),0>i&&(r+=i/2,i=0),{x:e,y:r,dx:u,dy:i}}function Pi(n){var t=n[0],e=n[n.length-1];return e>t?[t,e]:[e,t]}function Ui(n){return n.rangeExtent?n.rangeExtent():Pi(n.range())}function ji(n,t,e,r){var u=e(n[0],n[1]),i=r(t[0],t[1]);return function(n){return i(u(n))}}function Fi(n,t){var e,r=0,u=n.length-1,i=n[r],o=n[u];return i>o&&(e=r,r=u,u=e,e=i,i=o,o=e),n[r]=t.floor(i),n[u]=t.ceil(o),n}function Hi(n){return n?{floor:function(t){return Math.floor(t/n)*n},ceil:function(t){return Math.ceil(t/n)*n}}:bl}function Oi(n,t,e,r){var u=[],i=[],o=0,a=Math.min(n.length,t.length)-1;for(n[a]<n[0]&&(n=n.slice().reverse(),t=t.slice().reverse());++o<=a;)u.push(e(n[o-1],n[o])),i.push(r(t[o-1],t[o]));return function(t){var e=ta.bisect(n,t,1,a)-1;return i[e](u[e](t))}}function Yi(n,t,e,r){function u(){var u=Math.min(n.length,t.length)>2?Oi:ji,c=r?Yu:Ou;return o=u(n,t,c,e),a=u(t,n,c,mu),i}function i(n){return o(n)}var o,a;return i.invert=function(n){return a(n)},i.domain=function(t){return arguments.length?(n=t.map(Number),u()):n},i.range=function(n){return arguments.length?(t=n,u()):t},i.rangeRound=function(n){return i.range(n).interpolate(Du)},i.clamp=function(n){return arguments.length?(r=n,u()):r},i.interpolate=function(n){return arguments.length?(e=n,u()):e},i.ticks=function(t){return Xi(n,t)},i.tickFormat=function(t,e){return $i(n,t,e)},i.nice=function(t){return Zi(n,t),u()},i.copy=function(){return Yi(n,t,e,r)},u()}function Ii(n,t){return ta.rebind(n,t,"range","rangeRound","interpolate","clamp")}function Zi(n,t){return Fi(n,Hi(Vi(n,t)[2]))}function Vi(n,t){null==t&&(t=10);var e=Pi(n),r=e[1]-e[0],u=Math.pow(10,Math.floor(Math.log(r/t)/Math.LN10)),i=t/r*u;return.15>=i?u*=10:.35>=i?u*=5:.75>=i&&(u*=2),e[0]=Math.ceil(e[0]/u)*u,e[1]=Math.floor(e[1]/u)*u+.5*u,e[2]=u,e}function Xi(n,t){return ta.range.apply(ta,Vi(n,t))}function $i(n,t,e){var r=Vi(n,t);if(e){var u=lc.exec(e);if(u.shift(),"s"===u[8]){var i=ta.formatPrefix(Math.max(va(r[0]),va(r[1])));return u[7]||(u[7]="."+Bi(i.scale(r[2]))),u[8]="f",e=ta.format(u.join("")),function(n){return e(i.scale(n))+i.symbol}}u[7]||(u[7]="."+Wi(u[8],r)),e=u.join("")}else e=",."+Bi(r[2])+"f";return ta.format(e)}function Bi(n){return-Math.floor(Math.log(n)/Math.LN10+.01)}function Wi(n,t){var e=Bi(t[2]);return n in _l?Math.abs(e-Bi(Math.max(va(t[0]),va(t[1]))))+ +("e"!==n):e-2*("%"===n)}function Ji(n,t,e,r){function u(n){return(e?Math.log(0>n?0:n):-Math.log(n>0?0:-n))/Math.log(t)}function i(n){return e?Math.pow(t,n):-Math.pow(t,-n)}function o(t){return n(u(t))}return o.invert=function(t){return i(n.invert(t))},o.domain=function(t){return arguments.length?(e=t[0]>=0,n.domain((r=t.map(Number)).map(u)),o):r},o.base=function(e){return arguments.length?(t=+e,n.domain(r.map(u)),o):t},o.nice=function(){var t=Fi(r.map(u),e?Math:Sl);return n.domain(t),r=t.map(i),o},o.ticks=function(){var n=Pi(r),o=[],a=n[0],c=n[1],l=Math.floor(u(a)),s=Math.ceil(u(c)),f=t%1?2:t;if(isFinite(s-l)){if(e){for(;s>l;l++)for(var h=1;f>h;h++)o.push(i(l)*h);o.push(i(l))}else for(o.push(i(l));l++<s;)for(var h=f-1;h>0;h--)o.push(i(l)*h);for(l=0;o[l]<a;l++);for(s=o.length;o[s-1]>c;s--);o=o.slice(l,s)}return o},o.tickFormat=function(n,t){if(!arguments.length)return wl;arguments.length<2?t=wl:"function"!=typeof t&&(t=ta.format(t));var r,a=Math.max(.1,n/o.ticks().length),c=e?(r=1e-12,Math.ceil):(r=-1e-12,Math.floor);return function(n){return n/i(c(u(n)+r))<=a?t(n):""}},o.copy=function(){return Ji(n.copy(),t,e,r)},Ii(o,n)}function Gi(n,t,e){function r(t){return n(u(t))}var u=Ki(t),i=Ki(1/t);return r.invert=function(t){return i(n.invert(t))},r.domain=function(t){return arguments.length?(n.domain((e=t.map(Number)).map(u)),r):e},r.ticks=function(n){return Xi(e,n)},r.tickFormat=function(n,t){return $i(e,n,t)},r.nice=function(n){return r.domain(Zi(e,n))},r.exponent=function(o){return arguments.length?(u=Ki(t=o),i=Ki(1/t),n.domain(e.map(u)),r):t},r.copy=function(){return Gi(n.copy(),t,e)},Ii(r,n)}function Ki(n){return function(t){return 0>t?-Math.pow(-t,n):Math.pow(t,n)}}function Qi(n,t){function e(e){return i[((u.get(e)||("range"===t.t?u.set(e,n.push(e)):0/0))-1)%i.length]}function r(t,e){return ta.range(n.length).map(function(n){return t+e*n})}var u,i,o;return e.domain=function(r){if(!arguments.length)return n;n=[],u=new a;for(var i,o=-1,c=r.length;++o<c;)u.has(i=r[o])||u.set(i,n.push(i));return e[t.t].apply(e,t.a)},e.range=function(n){return arguments.length?(i=n,o=0,t={t:"range",a:arguments},e):i},e.rangePoints=function(u,a){arguments.length<2&&(a=0);var c=u[0],l=u[1],s=n.length<2?(c=(c+l)/2,0):(l-c)/(n.length-1+a);return i=r(c+s*a/2,s),o=0,t={t:"rangePoints",a:arguments},e},e.rangeRoundPoints=function(u,a){arguments.length<2&&(a=0);var c=u[0],l=u[1],s=n.length<2?(c=l=Math.round((c+l)/2),0):0|(l-c)/(n.length-1+a);return i=r(c+Math.round(s*a/2+(l-c-(n.length-1+a)*s)/2),s),o=0,t={t:"rangeRoundPoints",a:arguments},e},e.rangeBands=function(u,a,c){arguments.length<2&&(a=0),arguments.length<3&&(c=a);var l=u[1]<u[0],s=u[l-0],f=u[1-l],h=(f-s)/(n.length-a+2*c);return i=r(s+h*c,h),l&&i.reverse(),o=h*(1-a),t={t:"rangeBands",a:arguments},e},e.rangeRoundBands=function(u,a,c){arguments.length<2&&(a=0),arguments.length<3&&(c=a);var l=u[1]<u[0],s=u[l-0],f=u[1-l],h=Math.floor((f-s)/(n.length-a+2*c));return i=r(s+Math.round((f-s-(n.length-a)*h)/2),h),l&&i.reverse(),o=Math.round(h*(1-a)),t={t:"rangeRoundBands",a:arguments},e},e.rangeBand=function(){return o},e.rangeExtent=function(){return Pi(t.a[0])},e.copy=function(){return Qi(n,t)},e.domain(n)}function no(r,u){function i(){var n=0,t=u.length;for(a=[];++n<t;)a[n-1]=ta.quantile(r,n/t);return o}function o(n){return isNaN(n=+n)?void 0:u[ta.bisect(a,n)]}var a;return o.domain=function(u){return arguments.length?(r=u.map(t).filter(e).sort(n),i()):r},o.range=function(n){return arguments.length?(u=n,i()):u},o.quantiles=function(){return a},o.invertExtent=function(n){return n=u.indexOf(n),0>n?[0/0,0/0]:[n>0?a[n-1]:r[0],n<a.length?a[n]:r[r.length-1]]},o.copy=function(){return no(r,u)},i()}function to(n,t,e){function r(t){return e[Math.max(0,Math.min(o,Math.floor(i*(t-n))))]}function u(){return i=e.length/(t-n),o=e.length-1,r}var i,o;return r.domain=function(e){return arguments.length?(n=+e[0],t=+e[e.length-1],u()):[n,t]},r.range=function(n){return arguments.length?(e=n,u()):e},r.invertExtent=function(t){return t=e.indexOf(t),t=0>t?0/0:t/i+n,[t,t+1/i]},r.copy=function(){return to(n,t,e)},u()}function eo(n,t){function e(e){return e>=e?t[ta.bisect(n,e)]:void 0}return e.domain=function(t){return arguments.length?(n=t,e):n},e.range=function(n){return arguments.length?(t=n,e):t},e.invertExtent=function(e){return e=t.indexOf(e),[n[e-1],n[e]]},e.copy=function(){return eo(n,t)},e}function ro(n){function t(n){return+n}return t.invert=t,t.domain=t.range=function(e){return arguments.length?(n=e.map(t),t):n},t.ticks=function(t){return Xi(n,t)},t.tickFormat=function(t,e){return $i(n,t,e)},t.copy=function(){return ro(n)},t}function uo(){return 0}function io(n){return n.innerRadius}function oo(n){return n.outerRadius}function ao(n){return n.startAngle}function co(n){return n.endAngle}function lo(n){return n&&n.padAngle}function so(n,t,e,r){return(n-e)*t-(t-r)*n>0?0:1}function fo(n,t,e,r,u){var i=n[0]-t[0],o=n[1]-t[1],a=(u?r:-r)/Math.sqrt(i*i+o*o),c=a*o,l=-a*i,s=n[0]+c,f=n[1]+l,h=t[0]+c,g=t[1]+l,p=(s+h)/2,v=(f+g)/2,d=h-s,m=g-f,y=d*d+m*m,M=e-r,x=s*g-h*f,b=(0>m?-1:1)*Math.sqrt(M*M*y-x*x),_=(x*m-d*b)/y,w=(-x*d-m*b)/y,S=(x*m+d*b)/y,k=(-x*d+m*b)/y,E=_-p,A=w-v,N=S-p,C=k-v;return E*E+A*A>N*N+C*C&&(_=S,w=k),[[_-c,w-l],[_*e/M,w*e/M]]}function ho(n){function t(t){function o(){l.push("M",i(n(s),a))}for(var c,l=[],s=[],f=-1,h=t.length,g=kt(e),p=kt(r);++f<h;)u.call(this,c=t[f],f)?s.push([+g.call(this,c,f),+p.call(this,c,f)]):s.length&&(o(),s=[]);return s.length&&o(),l.length?l.join(""):null}var e=Ar,r=Nr,u=Ne,i=go,o=i.key,a=.7;return t.x=function(n){return arguments.length?(e=n,t):e},t.y=function(n){return arguments.length?(r=n,t):r},t.defined=function(n){return arguments.length?(u=n,t):u},t.interpolate=function(n){return arguments.length?(o="function"==typeof n?i=n:(i=zl.get(n)||go).key,t):o},t.tension=function(n){return arguments.length?(a=n,t):a},t}function go(n){return n.join("L")}function po(n){return go(n)+"Z"}function vo(n){for(var t=0,e=n.length,r=n[0],u=[r[0],",",r[1]];++t<e;)u.push("H",(r[0]+(r=n[t])[0])/2,"V",r[1]);return e>1&&u.push("H",r[0]),u.join("")}function mo(n){for(var t=0,e=n.length,r=n[0],u=[r[0],",",r[1]];++t<e;)u.push("V",(r=n[t])[1],"H",r[0]);return u.join("")}function yo(n){for(var t=0,e=n.length,r=n[0],u=[r[0],",",r[1]];++t<e;)u.push("H",(r=n[t])[0],"V",r[1]);return u.join("")}function Mo(n,t){return n.length<4?go(n):n[1]+_o(n.slice(1,-1),wo(n,t))}function xo(n,t){return n.length<3?go(n):n[0]+_o((n.push(n[0]),n),wo([n[n.length-2]].concat(n,[n[1]]),t))}function bo(n,t){return n.length<3?go(n):n[0]+_o(n,wo(n,t))}function _o(n,t){if(t.length<1||n.length!=t.length&&n.length!=t.length+2)return go(n);var e=n.length!=t.length,r="",u=n[0],i=n[1],o=t[0],a=o,c=1;if(e&&(r+="Q"+(i[0]-2*o[0]/3)+","+(i[1]-2*o[1]/3)+","+i[0]+","+i[1],u=n[1],c=2),t.length>1){a=t[1],i=n[c],c++,r+="C"+(u[0]+o[0])+","+(u[1]+o[1])+","+(i[0]-a[0])+","+(i[1]-a[1])+","+i[0]+","+i[1];for(var l=2;l<t.length;l++,c++)i=n[c],a=t[l],r+="S"+(i[0]-a[0])+","+(i[1]-a[1])+","+i[0]+","+i[1]}if(e){var s=n[c];r+="Q"+(i[0]+2*a[0]/3)+","+(i[1]+2*a[1]/3)+","+s[0]+","+s[1]}return r}function wo(n,t){for(var e,r=[],u=(1-t)/2,i=n[0],o=n[1],a=1,c=n.length;++a<c;)e=i,i=o,o=n[a],r.push([u*(o[0]-e[0]),u*(o[1]-e[1])]);return r}function So(n){if(n.length<3)return go(n);var t=1,e=n.length,r=n[0],u=r[0],i=r[1],o=[u,u,u,(r=n[1])[0]],a=[i,i,i,r[1]],c=[u,",",i,"L",No(Tl,o),",",No(Tl,a)];for(n.push(n[e-1]);++t<=e;)r=n[t],o.shift(),o.push(r[0]),a.shift(),a.push(r[1]),Co(c,o,a);return n.pop(),c.push("L",r),c.join("")}function ko(n){if(n.length<4)return go(n);for(var t,e=[],r=-1,u=n.length,i=[0],o=[0];++r<3;)t=n[r],i.push(t[0]),o.push(t[1]);for(e.push(No(Tl,i)+","+No(Tl,o)),--r;++r<u;)t=n[r],i.shift(),i.push(t[0]),o.shift(),o.push(t[1]),Co(e,i,o);return e.join("")}function Eo(n){for(var t,e,r=-1,u=n.length,i=u+4,o=[],a=[];++r<4;)e=n[r%u],o.push(e[0]),a.push(e[1]);for(t=[No(Tl,o),",",No(Tl,a)],--r;++r<i;)e=n[r%u],o.shift(),o.push(e[0]),a.shift(),a.push(e[1]),Co(t,o,a);return t.join("")}function Ao(n,t){var e=n.length-1;if(e)for(var r,u,i=n[0][0],o=n[0][1],a=n[e][0]-i,c=n[e][1]-o,l=-1;++l<=e;)r=n[l],u=l/e,r[0]=t*r[0]+(1-t)*(i+u*a),r[1]=t*r[1]+(1-t)*(o+u*c);return So(n)}function No(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]+n[3]*t[3]}function Co(n,t,e){n.push("C",No(ql,t),",",No(ql,e),",",No(Ll,t),",",No(Ll,e),",",No(Tl,t),",",No(Tl,e))}function zo(n,t){return(t[1]-n[1])/(t[0]-n[0])}function qo(n){for(var t=0,e=n.length-1,r=[],u=n[0],i=n[1],o=r[0]=zo(u,i);++t<e;)r[t]=(o+(o=zo(u=i,i=n[t+1])))/2;return r[t]=o,r}function Lo(n){for(var t,e,r,u,i=[],o=qo(n),a=-1,c=n.length-1;++a<c;)t=zo(n[a],n[a+1]),va(t)<Ta?o[a]=o[a+1]=0:(e=o[a]/t,r=o[a+1]/t,u=e*e+r*r,u>9&&(u=3*t/Math.sqrt(u),o[a]=u*e,o[a+1]=u*r));for(a=-1;++a<=c;)u=(n[Math.min(c,a+1)][0]-n[Math.max(0,a-1)][0])/(6*(1+o[a]*o[a])),i.push([u||0,o[a]*u||0]);return i}function To(n){return n.length<3?go(n):n[0]+_o(n,Lo(n))}function Ro(n){for(var t,e,r,u=-1,i=n.length;++u<i;)t=n[u],e=t[0],r=t[1]-ja,t[0]=e*Math.cos(r),t[1]=e*Math.sin(r);return n}function Do(n){function t(t){function c(){v.push("M",a(n(m),f),s,l(n(d.reverse()),f),"Z")}for(var h,g,p,v=[],d=[],m=[],y=-1,M=t.length,x=kt(e),b=kt(u),_=e===r?function(){return g}:kt(r),w=u===i?function(){return p}:kt(i);++y<M;)o.call(this,h=t[y],y)?(d.push([g=+x.call(this,h,y),p=+b.call(this,h,y)]),m.push([+_.call(this,h,y),+w.call(this,h,y)])):d.length&&(c(),d=[],m=[]);return d.length&&c(),v.length?v.join(""):null}var e=Ar,r=Ar,u=0,i=Nr,o=Ne,a=go,c=a.key,l=a,s="L",f=.7;return t.x=function(n){return arguments.length?(e=r=n,t):r},t.x0=function(n){return arguments.length?(e=n,t):e},t.x1=function(n){return arguments.length?(r=n,t):r},t.y=function(n){return arguments.length?(u=i=n,t):i},t.y0=function(n){return arguments.length?(u=n,t):u},t.y1=function(n){return arguments.length?(i=n,t):i},t.defined=function(n){return arguments.length?(o=n,t):o},t.interpolate=function(n){return arguments.length?(c="function"==typeof n?a=n:(a=zl.get(n)||go).key,l=a.reverse||a,s=a.closed?"M":"L",t):c
},t.tension=function(n){return arguments.length?(f=n,t):f},t}function Po(n){return n.radius}function Uo(n){return[n.x,n.y]}function jo(n){return function(){var t=n.apply(this,arguments),e=t[0],r=t[1]-ja;return[e*Math.cos(r),e*Math.sin(r)]}}function Fo(){return 64}function Ho(){return"circle"}function Oo(n){var t=Math.sqrt(n/Da);return"M0,"+t+"A"+t+","+t+" 0 1,1 0,"+-t+"A"+t+","+t+" 0 1,1 0,"+t+"Z"}function Yo(n){return function(){var t,e;(t=this[n])&&(e=t[t.active])&&(--t.count?delete t[t.active]:delete this[n],t.active+=.5,e.event&&e.event.interrupt.call(this,this.__data__,e.index))}}function Io(n,t,e){return xa(n,Hl),n.namespace=t,n.id=e,n}function Zo(n,t,e,r){var u=n.id,i=n.namespace;return H(n,"function"==typeof e?function(n,o,a){n[i][u].tween.set(t,r(e.call(n,n.__data__,o,a)))}:(e=r(e),function(n){n[i][u].tween.set(t,e)}))}function Vo(n){return null==n&&(n=""),function(){this.textContent=n}}function Xo(n){return null==n?"__transition__":"__transition_"+n+"__"}function $o(n,t,e,r,u){var i=n[e]||(n[e]={active:0,count:0}),o=i[r];if(!o){var c=u.time;o=i[r]={tween:new a,time:c,delay:u.delay,duration:u.duration,ease:u.ease,index:t},u=null,++i.count,ta.timer(function(u){function a(e){if(i.active>r)return s();var u=i[i.active];u&&(--i.count,delete i[i.active],u.event&&u.event.interrupt.call(n,n.__data__,u.index)),i.active=r,o.event&&o.event.start.call(n,n.__data__,t),o.tween.forEach(function(e,r){(r=r.call(n,n.__data__,t))&&v.push(r)}),h=o.ease,f=o.duration,ta.timer(function(){return p.c=l(e||1)?Ne:l,1},0,c)}function l(e){if(i.active!==r)return 1;for(var u=e/f,a=h(u),c=v.length;c>0;)v[--c].call(n,a);return u>=1?(o.event&&o.event.end.call(n,n.__data__,t),s()):void 0}function s(){return--i.count?delete i[r]:delete n[e],1}var f,h,g=o.delay,p=oc,v=[];return p.t=g+c,u>=g?a(u-g):(p.c=a,void 0)},0,c)}}function Bo(n,t,e){n.attr("transform",function(n){var r=t(n);return"translate("+(isFinite(r)?r:e(n))+",0)"})}function Wo(n,t,e){n.attr("transform",function(n){var r=t(n);return"translate(0,"+(isFinite(r)?r:e(n))+")"})}function Jo(n){return n.toISOString()}function Go(n,t,e){function r(t){return n(t)}function u(n,e){var r=n[1]-n[0],u=r/e,i=ta.bisect(Wl,u);return i==Wl.length?[t.year,Vi(n.map(function(n){return n/31536e6}),e)[2]]:i?t[u/Wl[i-1]<Wl[i]/u?i-1:i]:[Kl,Vi(n,e)[2]]}return r.invert=function(t){return Ko(n.invert(t))},r.domain=function(t){return arguments.length?(n.domain(t),r):n.domain().map(Ko)},r.nice=function(n,t){function e(e){return!isNaN(e)&&!n.range(e,Ko(+e+1),t).length}var i=r.domain(),o=Pi(i),a=null==n?u(o,10):"number"==typeof n&&u(o,n);return a&&(n=a[0],t=a[1]),r.domain(Fi(i,t>1?{floor:function(t){for(;e(t=n.floor(t));)t=Ko(t-1);return t},ceil:function(t){for(;e(t=n.ceil(t));)t=Ko(+t+1);return t}}:n))},r.ticks=function(n,t){var e=Pi(r.domain()),i=null==n?u(e,10):"number"==typeof n?u(e,n):!n.range&&[{range:n},t];return i&&(n=i[0],t=i[1]),n.range(e[0],Ko(+e[1]+1),1>t?1:t)},r.tickFormat=function(){return e},r.copy=function(){return Go(n.copy(),t,e)},Ii(r,n)}function Ko(n){return new Date(n)}function Qo(n){return JSON.parse(n.responseText)}function na(n){var t=ua.createRange();return t.selectNode(ua.body),t.createContextualFragment(n.responseText)}var ta={version:"3.5.3"};Date.now||(Date.now=function(){return+new Date});var ea=[].slice,ra=function(n){return ea.call(n)},ua=document,ia=ua.documentElement,oa=window;try{ra(ia.childNodes)[0].nodeType}catch(aa){ra=function(n){for(var t=n.length,e=new Array(t);t--;)e[t]=n[t];return e}}try{ua.createElement("div").style.setProperty("opacity",0,"")}catch(ca){var la=oa.Element.prototype,sa=la.setAttribute,fa=la.setAttributeNS,ha=oa.CSSStyleDeclaration.prototype,ga=ha.setProperty;la.setAttribute=function(n,t){sa.call(this,n,t+"")},la.setAttributeNS=function(n,t,e){fa.call(this,n,t,e+"")},ha.setProperty=function(n,t,e){ga.call(this,n,t+"",e)}}ta.ascending=n,ta.descending=function(n,t){return n>t?-1:t>n?1:t>=n?0:0/0},ta.min=function(n,t){var e,r,u=-1,i=n.length;if(1===arguments.length){for(;++u<i;)if(null!=(r=n[u])&&r>=r){e=r;break}for(;++u<i;)null!=(r=n[u])&&e>r&&(e=r)}else{for(;++u<i;)if(null!=(r=t.call(n,n[u],u))&&r>=r){e=r;break}for(;++u<i;)null!=(r=t.call(n,n[u],u))&&e>r&&(e=r)}return e},ta.max=function(n,t){var e,r,u=-1,i=n.length;if(1===arguments.length){for(;++u<i;)if(null!=(r=n[u])&&r>=r){e=r;break}for(;++u<i;)null!=(r=n[u])&&r>e&&(e=r)}else{for(;++u<i;)if(null!=(r=t.call(n,n[u],u))&&r>=r){e=r;break}for(;++u<i;)null!=(r=t.call(n,n[u],u))&&r>e&&(e=r)}return e},ta.extent=function(n,t){var e,r,u,i=-1,o=n.length;if(1===arguments.length){for(;++i<o;)if(null!=(r=n[i])&&r>=r){e=u=r;break}for(;++i<o;)null!=(r=n[i])&&(e>r&&(e=r),r>u&&(u=r))}else{for(;++i<o;)if(null!=(r=t.call(n,n[i],i))&&r>=r){e=u=r;break}for(;++i<o;)null!=(r=t.call(n,n[i],i))&&(e>r&&(e=r),r>u&&(u=r))}return[e,u]},ta.sum=function(n,t){var r,u=0,i=n.length,o=-1;if(1===arguments.length)for(;++o<i;)e(r=+n[o])&&(u+=r);else for(;++o<i;)e(r=+t.call(n,n[o],o))&&(u+=r);return u},ta.mean=function(n,r){var u,i=0,o=n.length,a=-1,c=o;if(1===arguments.length)for(;++a<o;)e(u=t(n[a]))?i+=u:--c;else for(;++a<o;)e(u=t(r.call(n,n[a],a)))?i+=u:--c;return c?i/c:void 0},ta.quantile=function(n,t){var e=(n.length-1)*t+1,r=Math.floor(e),u=+n[r-1],i=e-r;return i?u+i*(n[r]-u):u},ta.median=function(r,u){var i,o=[],a=r.length,c=-1;if(1===arguments.length)for(;++c<a;)e(i=t(r[c]))&&o.push(i);else for(;++c<a;)e(i=t(u.call(r,r[c],c)))&&o.push(i);return o.length?ta.quantile(o.sort(n),.5):void 0},ta.variance=function(n,r){var u,i,o=n.length,a=0,c=0,l=-1,s=0;if(1===arguments.length)for(;++l<o;)e(u=t(n[l]))&&(i=u-a,a+=i/++s,c+=i*(u-a));else for(;++l<o;)e(u=t(r.call(n,n[l],l)))&&(i=u-a,a+=i/++s,c+=i*(u-a));return s>1?c/(s-1):void 0},ta.deviation=function(){var n=ta.variance.apply(this,arguments);return n?Math.sqrt(n):n};var pa=r(n);ta.bisectLeft=pa.left,ta.bisect=ta.bisectRight=pa.right,ta.bisector=function(t){return r(1===t.length?function(e,r){return n(t(e),r)}:t)},ta.shuffle=function(n,t,e){(i=arguments.length)<3&&(e=n.length,2>i&&(t=0));for(var r,u,i=e-t;i;)u=0|Math.random()*i--,r=n[i+t],n[i+t]=n[u+t],n[u+t]=r;return n},ta.permute=function(n,t){for(var e=t.length,r=new Array(e);e--;)r[e]=n[t[e]];return r},ta.pairs=function(n){for(var t,e=0,r=n.length-1,u=n[0],i=new Array(0>r?0:r);r>e;)i[e]=[t=u,u=n[++e]];return i},ta.zip=function(){if(!(r=arguments.length))return[];for(var n=-1,t=ta.min(arguments,u),e=new Array(t);++n<t;)for(var r,i=-1,o=e[n]=new Array(r);++i<r;)o[i]=arguments[i][n];return e},ta.transpose=function(n){return ta.zip.apply(ta,n)},ta.keys=function(n){var t=[];for(var e in n)t.push(e);return t},ta.values=function(n){var t=[];for(var e in n)t.push(n[e]);return t},ta.entries=function(n){var t=[];for(var e in n)t.push({key:e,value:n[e]});return t},ta.merge=function(n){for(var t,e,r,u=n.length,i=-1,o=0;++i<u;)o+=n[i].length;for(e=new Array(o);--u>=0;)for(r=n[u],t=r.length;--t>=0;)e[--o]=r[t];return e};var va=Math.abs;ta.range=function(n,t,e){if(arguments.length<3&&(e=1,arguments.length<2&&(t=n,n=0)),1/0===(t-n)/e)throw new Error("infinite range");var r,u=[],o=i(va(e)),a=-1;if(n*=o,t*=o,e*=o,0>e)for(;(r=n+e*++a)>t;)u.push(r/o);else for(;(r=n+e*++a)<t;)u.push(r/o);return u},ta.map=function(n,t){var e=new a;if(n instanceof a)n.forEach(function(n,t){e.set(n,t)});else if(Array.isArray(n)){var r,u=-1,i=n.length;if(1===arguments.length)for(;++u<i;)e.set(u,n[u]);else for(;++u<i;)e.set(t.call(n,r=n[u],u),r)}else for(var o in n)e.set(o,n[o]);return e};var da="__proto__",ma="\x00";o(a,{has:s,get:function(n){return this._[c(n)]},set:function(n,t){return this._[c(n)]=t},remove:f,keys:h,values:function(){var n=[];for(var t in this._)n.push(this._[t]);return n},entries:function(){var n=[];for(var t in this._)n.push({key:l(t),value:this._[t]});return n},size:g,empty:p,forEach:function(n){for(var t in this._)n.call(this,l(t),this._[t])}}),ta.nest=function(){function n(t,o,c){if(c>=i.length)return r?r.call(u,o):e?o.sort(e):o;for(var l,s,f,h,g=-1,p=o.length,v=i[c++],d=new a;++g<p;)(h=d.get(l=v(s=o[g])))?h.push(s):d.set(l,[s]);return t?(s=t(),f=function(e,r){s.set(e,n(t,r,c))}):(s={},f=function(e,r){s[e]=n(t,r,c)}),d.forEach(f),s}function t(n,e){if(e>=i.length)return n;var r=[],u=o[e++];return n.forEach(function(n,u){r.push({key:n,values:t(u,e)})}),u?r.sort(function(n,t){return u(n.key,t.key)}):r}var e,r,u={},i=[],o=[];return u.map=function(t,e){return n(e,t,0)},u.entries=function(e){return t(n(ta.map,e,0),0)},u.key=function(n){return i.push(n),u},u.sortKeys=function(n){return o[i.length-1]=n,u},u.sortValues=function(n){return e=n,u},u.rollup=function(n){return r=n,u},u},ta.set=function(n){var t=new v;if(n)for(var e=0,r=n.length;r>e;++e)t.add(n[e]);return t},o(v,{has:s,add:function(n){return this._[c(n+="")]=!0,n},remove:f,values:h,size:g,empty:p,forEach:function(n){for(var t in this._)n.call(this,l(t))}}),ta.behavior={},ta.rebind=function(n,t){for(var e,r=1,u=arguments.length;++r<u;)n[e=arguments[r]]=d(n,t,t[e]);return n};var ya=["webkit","ms","moz","Moz","o","O"];ta.dispatch=function(){for(var n=new M,t=-1,e=arguments.length;++t<e;)n[arguments[t]]=x(n);return n},M.prototype.on=function(n,t){var e=n.indexOf("."),r="";if(e>=0&&(r=n.slice(e+1),n=n.slice(0,e)),n)return arguments.length<2?this[n].on(r):this[n].on(r,t);if(2===arguments.length){if(null==t)for(n in this)this.hasOwnProperty(n)&&this[n].on(r,null);return this}},ta.event=null,ta.requote=function(n){return n.replace(Ma,"\\$&")};var Ma=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g,xa={}.__proto__?function(n,t){n.__proto__=t}:function(n,t){for(var e in t)n[e]=t[e]},ba=function(n,t){return t.querySelector(n)},_a=function(n,t){return t.querySelectorAll(n)},wa=ia.matches||ia[m(ia,"matchesSelector")],Sa=function(n,t){return wa.call(n,t)};"function"==typeof Sizzle&&(ba=function(n,t){return Sizzle(n,t)[0]||null},_a=Sizzle,Sa=Sizzle.matchesSelector),ta.selection=function(){return Na};var ka=ta.selection.prototype=[];ka.select=function(n){var t,e,r,u,i=[];n=k(n);for(var o=-1,a=this.length;++o<a;){i.push(t=[]),t.parentNode=(r=this[o]).parentNode;for(var c=-1,l=r.length;++c<l;)(u=r[c])?(t.push(e=n.call(u,u.__data__,c,o)),e&&"__data__"in u&&(e.__data__=u.__data__)):t.push(null)}return S(i)},ka.selectAll=function(n){var t,e,r=[];n=E(n);for(var u=-1,i=this.length;++u<i;)for(var o=this[u],a=-1,c=o.length;++a<c;)(e=o[a])&&(r.push(t=ra(n.call(e,e.__data__,a,u))),t.parentNode=e);return S(r)};var Ea={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};ta.ns={prefix:Ea,qualify:function(n){var t=n.indexOf(":"),e=n;return t>=0&&(e=n.slice(0,t),n=n.slice(t+1)),Ea.hasOwnProperty(e)?{space:Ea[e],local:n}:n}},ka.attr=function(n,t){if(arguments.length<2){if("string"==typeof n){var e=this.node();return n=ta.ns.qualify(n),n.local?e.getAttributeNS(n.space,n.local):e.getAttribute(n)}for(t in n)this.each(A(t,n[t]));return this}return this.each(A(n,t))},ka.classed=function(n,t){if(arguments.length<2){if("string"==typeof n){var e=this.node(),r=(n=z(n)).length,u=-1;if(t=e.classList){for(;++u<r;)if(!t.contains(n[u]))return!1}else for(t=e.getAttribute("class");++u<r;)if(!C(n[u]).test(t))return!1;return!0}for(t in n)this.each(q(t,n[t]));return this}return this.each(q(n,t))},ka.style=function(n,t,e){var r=arguments.length;if(3>r){if("string"!=typeof n){2>r&&(t="");for(e in n)this.each(T(e,n[e],t));return this}if(2>r)return oa.getComputedStyle(this.node(),null).getPropertyValue(n);e=""}return this.each(T(n,t,e))},ka.property=function(n,t){if(arguments.length<2){if("string"==typeof n)return this.node()[n];for(t in n)this.each(R(t,n[t]));return this}return this.each(R(n,t))},ka.text=function(n){return arguments.length?this.each("function"==typeof n?function(){var t=n.apply(this,arguments);this.textContent=null==t?"":t}:null==n?function(){this.textContent=""}:function(){this.textContent=n}):this.node().textContent},ka.html=function(n){return arguments.length?this.each("function"==typeof n?function(){var t=n.apply(this,arguments);this.innerHTML=null==t?"":t}:null==n?function(){this.innerHTML=""}:function(){this.innerHTML=n}):this.node().innerHTML},ka.append=function(n){return n=D(n),this.select(function(){return this.appendChild(n.apply(this,arguments))})},ka.insert=function(n,t){return n=D(n),t=k(t),this.select(function(){return this.insertBefore(n.apply(this,arguments),t.apply(this,arguments)||null)})},ka.remove=function(){return this.each(P)},ka.data=function(n,t){function e(n,e){var r,u,i,o=n.length,f=e.length,h=Math.min(o,f),g=new Array(f),p=new Array(f),v=new Array(o);if(t){var d,m=new a,y=new Array(o);for(r=-1;++r<o;)m.has(d=t.call(u=n[r],u.__data__,r))?v[r]=u:m.set(d,u),y[r]=d;for(r=-1;++r<f;)(u=m.get(d=t.call(e,i=e[r],r)))?u!==!0&&(g[r]=u,u.__data__=i):p[r]=U(i),m.set(d,!0);for(r=-1;++r<o;)m.get(y[r])!==!0&&(v[r]=n[r])}else{for(r=-1;++r<h;)u=n[r],i=e[r],u?(u.__data__=i,g[r]=u):p[r]=U(i);for(;f>r;++r)p[r]=U(e[r]);for(;o>r;++r)v[r]=n[r]}p.update=g,p.parentNode=g.parentNode=v.parentNode=n.parentNode,c.push(p),l.push(g),s.push(v)}var r,u,i=-1,o=this.length;if(!arguments.length){for(n=new Array(o=(r=this[0]).length);++i<o;)(u=r[i])&&(n[i]=u.__data__);return n}var c=O([]),l=S([]),s=S([]);if("function"==typeof n)for(;++i<o;)e(r=this[i],n.call(r,r.parentNode.__data__,i));else for(;++i<o;)e(r=this[i],n);return l.enter=function(){return c},l.exit=function(){return s},l},ka.datum=function(n){return arguments.length?this.property("__data__",n):this.property("__data__")},ka.filter=function(n){var t,e,r,u=[];"function"!=typeof n&&(n=j(n));for(var i=0,o=this.length;o>i;i++){u.push(t=[]),t.parentNode=(e=this[i]).parentNode;for(var a=0,c=e.length;c>a;a++)(r=e[a])&&n.call(r,r.__data__,a,i)&&t.push(r)}return S(u)},ka.order=function(){for(var n=-1,t=this.length;++n<t;)for(var e,r=this[n],u=r.length-1,i=r[u];--u>=0;)(e=r[u])&&(i&&i!==e.nextSibling&&i.parentNode.insertBefore(e,i),i=e);return this},ka.sort=function(n){n=F.apply(this,arguments);for(var t=-1,e=this.length;++t<e;)this[t].sort(n);return this.order()},ka.each=function(n){return H(this,function(t,e,r){n.call(t,t.__data__,e,r)})},ka.call=function(n){var t=ra(arguments);return n.apply(t[0]=this,t),this},ka.empty=function(){return!this.node()},ka.node=function(){for(var n=0,t=this.length;t>n;n++)for(var e=this[n],r=0,u=e.length;u>r;r++){var i=e[r];if(i)return i}return null},ka.size=function(){var n=0;return H(this,function(){++n}),n};var Aa=[];ta.selection.enter=O,ta.selection.enter.prototype=Aa,Aa.append=ka.append,Aa.empty=ka.empty,Aa.node=ka.node,Aa.call=ka.call,Aa.size=ka.size,Aa.select=function(n){for(var t,e,r,u,i,o=[],a=-1,c=this.length;++a<c;){r=(u=this[a]).update,o.push(t=[]),t.parentNode=u.parentNode;for(var l=-1,s=u.length;++l<s;)(i=u[l])?(t.push(r[l]=e=n.call(u.parentNode,i.__data__,l,a)),e.__data__=i.__data__):t.push(null)}return S(o)},Aa.insert=function(n,t){return arguments.length<2&&(t=Y(this)),ka.insert.call(this,n,t)},ta.select=function(n){var t=["string"==typeof n?ba(n,ua):n];return t.parentNode=ia,S([t])},ta.selectAll=function(n){var t=ra("string"==typeof n?_a(n,ua):n);return t.parentNode=ia,S([t])};var Na=ta.select(ia);ka.on=function(n,t,e){var r=arguments.length;if(3>r){if("string"!=typeof n){2>r&&(t=!1);for(e in n)this.each(I(e,n[e],t));return this}if(2>r)return(r=this.node()["__on"+n])&&r._;e=!1}return this.each(I(n,t,e))};var Ca=ta.map({mouseenter:"mouseover",mouseleave:"mouseout"});Ca.forEach(function(n){"on"+n in ua&&Ca.remove(n)});var za="onselectstart"in ua?null:m(ia.style,"userSelect"),qa=0;ta.mouse=function(n){return $(n,_())};var La=/WebKit/.test(oa.navigator.userAgent)?-1:0;ta.touch=function(n,t,e){if(arguments.length<3&&(e=t,t=_().changedTouches),t)for(var r,u=0,i=t.length;i>u;++u)if((r=t[u]).identifier===e)return $(n,r)},ta.behavior.drag=function(){function n(){this.on("mousedown.drag",u).on("touchstart.drag",i)}function t(n,t,u,i,o){return function(){function a(){var n,e,r=t(h,v);r&&(n=r[0]-M[0],e=r[1]-M[1],p|=n|e,M=r,g({type:"drag",x:r[0]+l[0],y:r[1]+l[1],dx:n,dy:e}))}function c(){t(h,v)&&(m.on(i+d,null).on(o+d,null),y(p&&ta.event.target===f),g({type:"dragend"}))}var l,s=this,f=ta.event.target,h=s.parentNode,g=e.of(s,arguments),p=0,v=n(),d=".drag"+(null==v?"":"-"+v),m=ta.select(u()).on(i+d,a).on(o+d,c),y=X(),M=t(h,v);r?(l=r.apply(s,arguments),l=[l.x-M[0],l.y-M[1]]):l=[0,0],g({type:"dragstart"})}}var e=w(n,"drag","dragstart","dragend"),r=null,u=t(y,ta.mouse,J,"mousemove","mouseup"),i=t(B,ta.touch,W,"touchmove","touchend");return n.origin=function(t){return arguments.length?(r=t,n):r},ta.rebind(n,e,"on")},ta.touches=function(n,t){return arguments.length<2&&(t=_().touches),t?ra(t).map(function(t){var e=$(n,t);return e.identifier=t.identifier,e}):[]};var Ta=1e-6,Ra=Ta*Ta,Da=Math.PI,Pa=2*Da,Ua=Pa-Ta,ja=Da/2,Fa=Da/180,Ha=180/Da,Oa=Math.SQRT2,Ya=2,Ia=4;ta.interpolateZoom=function(n,t){function e(n){var t=n*y;if(m){var e=et(v),o=i/(Ya*h)*(e*rt(Oa*t+v)-tt(v));return[r+o*l,u+o*s,i*e/et(Oa*t+v)]}return[r+n*l,u+n*s,i*Math.exp(Oa*t)]}var r=n[0],u=n[1],i=n[2],o=t[0],a=t[1],c=t[2],l=o-r,s=a-u,f=l*l+s*s,h=Math.sqrt(f),g=(c*c-i*i+Ia*f)/(2*i*Ya*h),p=(c*c-i*i-Ia*f)/(2*c*Ya*h),v=Math.log(Math.sqrt(g*g+1)-g),d=Math.log(Math.sqrt(p*p+1)-p),m=d-v,y=(m||Math.log(c/i))/Oa;return e.duration=1e3*y,e},ta.behavior.zoom=function(){function n(n){n.on(z,s).on(Xa+".zoom",h).on("dblclick.zoom",g).on(T,f)}function t(n){return[(n[0]-k.x)/k.k,(n[1]-k.y)/k.k]}function e(n){return[n[0]*k.k+k.x,n[1]*k.k+k.y]}function r(n){k.k=Math.max(A[0],Math.min(A[1],n))}function u(n,t){t=e(t),k.x+=n[0]-t[0],k.y+=n[1]-t[1]}function i(t,e,i,o){t.__chart__={x:k.x,y:k.y,k:k.k},r(Math.pow(2,o)),u(v=e,i),t=ta.select(t),N>0&&(t=t.transition().duration(N)),t.call(n.event)}function o(){x&&x.domain(M.range().map(function(n){return(n-k.x)/k.k}).map(M.invert)),S&&S.domain(_.range().map(function(n){return(n-k.y)/k.k}).map(_.invert))}function a(n){C++||n({type:"zoomstart"})}function c(n){o(),n({type:"zoom",scale:k.k,translate:[k.x,k.y]})}function l(n){--C||n({type:"zoomend"}),v=null}function s(){function n(){s=1,u(ta.mouse(r),h),c(o)}function e(){f.on(q,null).on(L,null),g(s&&ta.event.target===i),l(o)}var r=this,i=ta.event.target,o=R.of(r,arguments),s=0,f=ta.select(oa).on(q,n).on(L,e),h=t(ta.mouse(r)),g=X();Fl.call(r),a(o)}function f(){function n(){var n=ta.touches(p);return g=k.k,n.forEach(function(n){n.identifier in d&&(d[n.identifier]=t(n))}),n}function e(){var t=ta.event.target;ta.select(t).on(x,o).on(_,h),w.push(t);for(var e=ta.event.changedTouches,r=0,u=e.length;u>r;++r)d[e[r].identifier]=null;var a=n(),c=Date.now();if(1===a.length){if(500>c-y){var l=a[0];i(p,l,d[l.identifier],Math.floor(Math.log(k.k)/Math.LN2)+1),b()}y=c}else if(a.length>1){var l=a[0],s=a[1],f=l[0]-s[0],g=l[1]-s[1];m=f*f+g*g}}function o(){var n,t,e,i,o=ta.touches(p);Fl.call(p);for(var a=0,l=o.length;l>a;++a,i=null)if(e=o[a],i=d[e.identifier]){if(t)break;n=e,t=i}if(i){var s=(s=e[0]-n[0])*s+(s=e[1]-n[1])*s,f=m&&Math.sqrt(s/m);n=[(n[0]+e[0])/2,(n[1]+e[1])/2],t=[(t[0]+i[0])/2,(t[1]+i[1])/2],r(f*g)}y=null,u(n,t),c(v)}function h(){if(ta.event.touches.length){for(var t=ta.event.changedTouches,e=0,r=t.length;r>e;++e)delete d[t[e].identifier];for(var u in d)return void n()}ta.selectAll(w).on(M,null),S.on(z,s).on(T,f),E(),l(v)}var g,p=this,v=R.of(p,arguments),d={},m=0,M=".zoom-"+ta.event.changedTouches[0].identifier,x="touchmove"+M,_="touchend"+M,w=[],S=ta.select(p),E=X();e(),a(v),S.on(z,null).on(T,e)}function h(){var n=R.of(this,arguments);m?clearTimeout(m):(p=t(v=d||ta.mouse(this)),Fl.call(this),a(n)),m=setTimeout(function(){m=null,l(n)},50),b(),r(Math.pow(2,.002*Za())*k.k),u(v,p),c(n)}function g(){var n=ta.mouse(this),e=Math.log(k.k)/Math.LN2;i(this,n,t(n),ta.event.shiftKey?Math.ceil(e)-1:Math.floor(e)+1)}var p,v,d,m,y,M,x,_,S,k={x:0,y:0,k:1},E=[960,500],A=Va,N=250,C=0,z="mousedown.zoom",q="mousemove.zoom",L="mouseup.zoom",T="touchstart.zoom",R=w(n,"zoomstart","zoom","zoomend");return n.event=function(n){n.each(function(){var n=R.of(this,arguments),t=k;Ul?ta.select(this).transition().each("start.zoom",function(){k=this.__chart__||{x:0,y:0,k:1},a(n)}).tween("zoom:zoom",function(){var e=E[0],r=E[1],u=v?v[0]:e/2,i=v?v[1]:r/2,o=ta.interpolateZoom([(u-k.x)/k.k,(i-k.y)/k.k,e/k.k],[(u-t.x)/t.k,(i-t.y)/t.k,e/t.k]);return function(t){var r=o(t),a=e/r[2];this.__chart__=k={x:u-r[0]*a,y:i-r[1]*a,k:a},c(n)}}).each("interrupt.zoom",function(){l(n)}).each("end.zoom",function(){l(n)}):(this.__chart__=k,a(n),c(n),l(n))})},n.translate=function(t){return arguments.length?(k={x:+t[0],y:+t[1],k:k.k},o(),n):[k.x,k.y]},n.scale=function(t){return arguments.length?(k={x:k.x,y:k.y,k:+t},o(),n):k.k},n.scaleExtent=function(t){return arguments.length?(A=null==t?Va:[+t[0],+t[1]],n):A},n.center=function(t){return arguments.length?(d=t&&[+t[0],+t[1]],n):d},n.size=function(t){return arguments.length?(E=t&&[+t[0],+t[1]],n):E},n.duration=function(t){return arguments.length?(N=+t,n):N},n.x=function(t){return arguments.length?(x=t,M=t.copy(),k={x:0,y:0,k:1},n):x},n.y=function(t){return arguments.length?(S=t,_=t.copy(),k={x:0,y:0,k:1},n):S},ta.rebind(n,R,"on")};var Za,Va=[0,1/0],Xa="onwheel"in ua?(Za=function(){return-ta.event.deltaY*(ta.event.deltaMode?120:1)},"wheel"):"onmousewheel"in ua?(Za=function(){return ta.event.wheelDelta},"mousewheel"):(Za=function(){return-ta.event.detail},"MozMousePixelScroll");ta.color=it,it.prototype.toString=function(){return this.rgb()+""},ta.hsl=ot;var $a=ot.prototype=new it;$a.brighter=function(n){return n=Math.pow(.7,arguments.length?n:1),new ot(this.h,this.s,this.l/n)},$a.darker=function(n){return n=Math.pow(.7,arguments.length?n:1),new ot(this.h,this.s,n*this.l)},$a.rgb=function(){return at(this.h,this.s,this.l)},ta.hcl=ct;var Ba=ct.prototype=new it;Ba.brighter=function(n){return new ct(this.h,this.c,Math.min(100,this.l+Wa*(arguments.length?n:1)))},Ba.darker=function(n){return new ct(this.h,this.c,Math.max(0,this.l-Wa*(arguments.length?n:1)))},Ba.rgb=function(){return lt(this.h,this.c,this.l).rgb()},ta.lab=st;var Wa=18,Ja=.95047,Ga=1,Ka=1.08883,Qa=st.prototype=new it;Qa.brighter=function(n){return new st(Math.min(100,this.l+Wa*(arguments.length?n:1)),this.a,this.b)},Qa.darker=function(n){return new st(Math.max(0,this.l-Wa*(arguments.length?n:1)),this.a,this.b)},Qa.rgb=function(){return ft(this.l,this.a,this.b)},ta.rgb=dt;var nc=dt.prototype=new it;nc.brighter=function(n){n=Math.pow(.7,arguments.length?n:1);var t=this.r,e=this.g,r=this.b,u=30;return t||e||r?(t&&u>t&&(t=u),e&&u>e&&(e=u),r&&u>r&&(r=u),new dt(Math.min(255,t/n),Math.min(255,e/n),Math.min(255,r/n))):new dt(u,u,u)},nc.darker=function(n){return n=Math.pow(.7,arguments.length?n:1),new dt(n*this.r,n*this.g,n*this.b)},nc.hsl=function(){return bt(this.r,this.g,this.b)},nc.toString=function(){return"#"+Mt(this.r)+Mt(this.g)+Mt(this.b)};var tc=ta.map({aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074});tc.forEach(function(n,t){tc.set(n,mt(t))}),ta.functor=kt,ta.xhr=At(Et),ta.dsv=function(n,t){function e(n,e,i){arguments.length<3&&(i=e,e=null);var o=Nt(n,t,null==e?r:u(e),i);return o.row=function(n){return arguments.length?o.response(null==(e=n)?r:u(n)):e},o}function r(n){return e.parse(n.responseText)}function u(n){return function(t){return e.parse(t.responseText,n)}}function i(t){return t.map(o).join(n)}function o(n){return a.test(n)?'"'+n.replace(/\"/g,'""')+'"':n}var a=new RegExp('["'+n+"\n]"),c=n.charCodeAt(0);return e.parse=function(n,t){var r;return e.parseRows(n,function(n,e){if(r)return r(n,e-1);var u=new Function("d","return {"+n.map(function(n,t){return JSON.stringify(n)+": d["+t+"]"}).join(",")+"}");r=t?function(n,e){return t(u(n),e)}:u})},e.parseRows=function(n,t){function e(){if(s>=l)return o;if(u)return u=!1,i;var t=s;if(34===n.charCodeAt(t)){for(var e=t;e++<l;)if(34===n.charCodeAt(e)){if(34!==n.charCodeAt(e+1))break;++e}s=e+2;var r=n.charCodeAt(e+1);return 13===r?(u=!0,10===n.charCodeAt(e+2)&&++s):10===r&&(u=!0),n.slice(t+1,e).replace(/""/g,'"')}for(;l>s;){var r=n.charCodeAt(s++),a=1;if(10===r)u=!0;else if(13===r)u=!0,10===n.charCodeAt(s)&&(++s,++a);else if(r!==c)continue;return n.slice(t,s-a)}return n.slice(t)}for(var r,u,i={},o={},a=[],l=n.length,s=0,f=0;(r=e())!==o;){for(var h=[];r!==i&&r!==o;)h.push(r),r=e();t&&null==(h=t(h,f++))||a.push(h)}return a},e.format=function(t){if(Array.isArray(t[0]))return e.formatRows(t);var r=new v,u=[];return t.forEach(function(n){for(var t in n)r.has(t)||u.push(r.add(t))}),[u.map(o).join(n)].concat(t.map(function(t){return u.map(function(n){return o(t[n])}).join(n)})).join("\n")},e.formatRows=function(n){return n.map(i).join("\n")},e},ta.csv=ta.dsv(",","text/csv"),ta.tsv=ta.dsv("	","text/tab-separated-values");var ec,rc,uc,ic,oc,ac=oa[m(oa,"requestAnimationFrame")]||function(n){setTimeout(n,17)};ta.timer=function(n,t,e){var r=arguments.length;2>r&&(t=0),3>r&&(e=Date.now());var u=e+t,i={c:n,t:u,f:!1,n:null};rc?rc.n=i:ec=i,rc=i,uc||(ic=clearTimeout(ic),uc=1,ac(qt))},ta.timer.flush=function(){Lt(),Tt()},ta.round=function(n,t){return t?Math.round(n*(t=Math.pow(10,t)))/t:Math.round(n)};var cc=["y","z","a","f","p","n","\xb5","m","","k","M","G","T","P","E","Z","Y"].map(Dt);ta.formatPrefix=function(n,t){var e=0;return n&&(0>n&&(n*=-1),t&&(n=ta.round(n,Rt(n,t))),e=1+Math.floor(1e-12+Math.log(n)/Math.LN10),e=Math.max(-24,Math.min(24,3*Math.floor((e-1)/3)))),cc[8+e/3]};var lc=/(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,sc=ta.map({b:function(n){return n.toString(2)},c:function(n){return String.fromCharCode(n)},o:function(n){return n.toString(8)},x:function(n){return n.toString(16)},X:function(n){return n.toString(16).toUpperCase()},g:function(n,t){return n.toPrecision(t)},e:function(n,t){return n.toExponential(t)},f:function(n,t){return n.toFixed(t)},r:function(n,t){return(n=ta.round(n,Rt(n,t))).toFixed(Math.max(0,Math.min(20,Rt(n*(1+1e-15),t))))}}),fc=ta.time={},hc=Date;jt.prototype={getDate:function(){return this._.getUTCDate()},getDay:function(){return this._.getUTCDay()},getFullYear:function(){return this._.getUTCFullYear()},getHours:function(){return this._.getUTCHours()},getMilliseconds:function(){return this._.getUTCMilliseconds()},getMinutes:function(){return this._.getUTCMinutes()},getMonth:function(){return this._.getUTCMonth()},getSeconds:function(){return this._.getUTCSeconds()},getTime:function(){return this._.getTime()},getTimezoneOffset:function(){return 0},valueOf:function(){return this._.valueOf()},setDate:function(){gc.setUTCDate.apply(this._,arguments)},setDay:function(){gc.setUTCDay.apply(this._,arguments)},setFullYear:function(){gc.setUTCFullYear.apply(this._,arguments)},setHours:function(){gc.setUTCHours.apply(this._,arguments)},setMilliseconds:function(){gc.setUTCMilliseconds.apply(this._,arguments)},setMinutes:function(){gc.setUTCMinutes.apply(this._,arguments)},setMonth:function(){gc.setUTCMonth.apply(this._,arguments)},setSeconds:function(){gc.setUTCSeconds.apply(this._,arguments)},setTime:function(){gc.setTime.apply(this._,arguments)}};var gc=Date.prototype;fc.year=Ft(function(n){return n=fc.day(n),n.setMonth(0,1),n},function(n,t){n.setFullYear(n.getFullYear()+t)},function(n){return n.getFullYear()}),fc.years=fc.year.range,fc.years.utc=fc.year.utc.range,fc.day=Ft(function(n){var t=new hc(2e3,0);return t.setFullYear(n.getFullYear(),n.getMonth(),n.getDate()),t},function(n,t){n.setDate(n.getDate()+t)},function(n){return n.getDate()-1}),fc.days=fc.day.range,fc.days.utc=fc.day.utc.range,fc.dayOfYear=function(n){var t=fc.year(n);return Math.floor((n-t-6e4*(n.getTimezoneOffset()-t.getTimezoneOffset()))/864e5)},["sunday","monday","tuesday","wednesday","thursday","friday","saturday"].forEach(function(n,t){t=7-t;var e=fc[n]=Ft(function(n){return(n=fc.day(n)).setDate(n.getDate()-(n.getDay()+t)%7),n},function(n,t){n.setDate(n.getDate()+7*Math.floor(t))},function(n){var e=fc.year(n).getDay();return Math.floor((fc.dayOfYear(n)+(e+t)%7)/7)-(e!==t)});fc[n+"s"]=e.range,fc[n+"s"].utc=e.utc.range,fc[n+"OfYear"]=function(n){var e=fc.year(n).getDay();return Math.floor((fc.dayOfYear(n)+(e+t)%7)/7)}}),fc.week=fc.sunday,fc.weeks=fc.sunday.range,fc.weeks.utc=fc.sunday.utc.range,fc.weekOfYear=fc.sundayOfYear;var pc={"-":"",_:" ",0:"0"},vc=/^\s*\d+/,dc=/^%/;ta.locale=function(n){return{numberFormat:Pt(n),timeFormat:Ot(n)}};var mc=ta.locale({decimal:".",thousands:",",grouping:[3],currency:["$",""],dateTime:"%a %b %e %X %Y",date:"%m/%d/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});ta.format=mc.numberFormat,ta.geo={},ce.prototype={s:0,t:0,add:function(n){le(n,this.t,yc),le(yc.s,this.s,this),this.s?this.t+=yc.t:this.s=yc.t},reset:function(){this.s=this.t=0},valueOf:function(){return this.s}};var yc=new ce;ta.geo.stream=function(n,t){n&&Mc.hasOwnProperty(n.type)?Mc[n.type](n,t):se(n,t)};var Mc={Feature:function(n,t){se(n.geometry,t)},FeatureCollection:function(n,t){for(var e=n.features,r=-1,u=e.length;++r<u;)se(e[r].geometry,t)}},xc={Sphere:function(n,t){t.sphere()},Point:function(n,t){n=n.coordinates,t.point(n[0],n[1],n[2])},MultiPoint:function(n,t){for(var e=n.coordinates,r=-1,u=e.length;++r<u;)n=e[r],t.point(n[0],n[1],n[2])
},LineString:function(n,t){fe(n.coordinates,t,0)},MultiLineString:function(n,t){for(var e=n.coordinates,r=-1,u=e.length;++r<u;)fe(e[r],t,0)},Polygon:function(n,t){he(n.coordinates,t)},MultiPolygon:function(n,t){for(var e=n.coordinates,r=-1,u=e.length;++r<u;)he(e[r],t)},GeometryCollection:function(n,t){for(var e=n.geometries,r=-1,u=e.length;++r<u;)se(e[r],t)}};ta.geo.area=function(n){return bc=0,ta.geo.stream(n,wc),bc};var bc,_c=new ce,wc={sphere:function(){bc+=4*Da},point:y,lineStart:y,lineEnd:y,polygonStart:function(){_c.reset(),wc.lineStart=ge},polygonEnd:function(){var n=2*_c;bc+=0>n?4*Da+n:n,wc.lineStart=wc.lineEnd=wc.point=y}};ta.geo.bounds=function(){function n(n,t){M.push(x=[s=n,h=n]),f>t&&(f=t),t>g&&(g=t)}function t(t,e){var r=pe([t*Fa,e*Fa]);if(m){var u=de(m,r),i=[u[1],-u[0],0],o=de(i,u);Me(o),o=xe(o);var c=t-p,l=c>0?1:-1,v=o[0]*Ha*l,d=va(c)>180;if(d^(v>l*p&&l*t>v)){var y=o[1]*Ha;y>g&&(g=y)}else if(v=(v+360)%360-180,d^(v>l*p&&l*t>v)){var y=-o[1]*Ha;f>y&&(f=y)}else f>e&&(f=e),e>g&&(g=e);d?p>t?a(s,t)>a(s,h)&&(h=t):a(t,h)>a(s,h)&&(s=t):h>=s?(s>t&&(s=t),t>h&&(h=t)):t>p?a(s,t)>a(s,h)&&(h=t):a(t,h)>a(s,h)&&(s=t)}else n(t,e);m=r,p=t}function e(){b.point=t}function r(){x[0]=s,x[1]=h,b.point=n,m=null}function u(n,e){if(m){var r=n-p;y+=va(r)>180?r+(r>0?360:-360):r}else v=n,d=e;wc.point(n,e),t(n,e)}function i(){wc.lineStart()}function o(){u(v,d),wc.lineEnd(),va(y)>Ta&&(s=-(h=180)),x[0]=s,x[1]=h,m=null}function a(n,t){return(t-=n)<0?t+360:t}function c(n,t){return n[0]-t[0]}function l(n,t){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var s,f,h,g,p,v,d,m,y,M,x,b={point:n,lineStart:e,lineEnd:r,polygonStart:function(){b.point=u,b.lineStart=i,b.lineEnd=o,y=0,wc.polygonStart()},polygonEnd:function(){wc.polygonEnd(),b.point=n,b.lineStart=e,b.lineEnd=r,0>_c?(s=-(h=180),f=-(g=90)):y>Ta?g=90:-Ta>y&&(f=-90),x[0]=s,x[1]=h}};return function(n){g=h=-(s=f=1/0),M=[],ta.geo.stream(n,b);var t=M.length;if(t){M.sort(c);for(var e,r=1,u=M[0],i=[u];t>r;++r)e=M[r],l(e[0],u)||l(e[1],u)?(a(u[0],e[1])>a(u[0],u[1])&&(u[1]=e[1]),a(e[0],u[1])>a(u[0],u[1])&&(u[0]=e[0])):i.push(u=e);for(var o,e,p=-1/0,t=i.length-1,r=0,u=i[t];t>=r;u=e,++r)e=i[r],(o=a(u[1],e[0]))>p&&(p=o,s=e[0],h=u[1])}return M=x=null,1/0===s||1/0===f?[[0/0,0/0],[0/0,0/0]]:[[s,f],[h,g]]}}(),ta.geo.centroid=function(n){Sc=kc=Ec=Ac=Nc=Cc=zc=qc=Lc=Tc=Rc=0,ta.geo.stream(n,Dc);var t=Lc,e=Tc,r=Rc,u=t*t+e*e+r*r;return Ra>u&&(t=Cc,e=zc,r=qc,Ta>kc&&(t=Ec,e=Ac,r=Nc),u=t*t+e*e+r*r,Ra>u)?[0/0,0/0]:[Math.atan2(e,t)*Ha,nt(r/Math.sqrt(u))*Ha]};var Sc,kc,Ec,Ac,Nc,Cc,zc,qc,Lc,Tc,Rc,Dc={sphere:y,point:_e,lineStart:Se,lineEnd:ke,polygonStart:function(){Dc.lineStart=Ee},polygonEnd:function(){Dc.lineStart=Se}},Pc=Le(Ne,Pe,je,[-Da,-Da/2]),Uc=1e9;ta.geo.clipExtent=function(){var n,t,e,r,u,i,o={stream:function(n){return u&&(u.valid=!1),u=i(n),u.valid=!0,u},extent:function(a){return arguments.length?(i=Ye(n=+a[0][0],t=+a[0][1],e=+a[1][0],r=+a[1][1]),u&&(u.valid=!1,u=null),o):[[n,t],[e,r]]}};return o.extent([[0,0],[960,500]])},(ta.geo.conicEqualArea=function(){return Ie(Ze)}).raw=Ze,ta.geo.albers=function(){return ta.geo.conicEqualArea().rotate([96,0]).center([-.6,38.7]).parallels([29.5,45.5]).scale(1070)},ta.geo.albersUsa=function(){function n(n){var i=n[0],o=n[1];return t=null,e(i,o),t||(r(i,o),t)||u(i,o),t}var t,e,r,u,i=ta.geo.albers(),o=ta.geo.conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),a=ta.geo.conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),c={point:function(n,e){t=[n,e]}};return n.invert=function(n){var t=i.scale(),e=i.translate(),r=(n[0]-e[0])/t,u=(n[1]-e[1])/t;return(u>=.12&&.234>u&&r>=-.425&&-.214>r?o:u>=.166&&.234>u&&r>=-.214&&-.115>r?a:i).invert(n)},n.stream=function(n){var t=i.stream(n),e=o.stream(n),r=a.stream(n);return{point:function(n,u){t.point(n,u),e.point(n,u),r.point(n,u)},sphere:function(){t.sphere(),e.sphere(),r.sphere()},lineStart:function(){t.lineStart(),e.lineStart(),r.lineStart()},lineEnd:function(){t.lineEnd(),e.lineEnd(),r.lineEnd()},polygonStart:function(){t.polygonStart(),e.polygonStart(),r.polygonStart()},polygonEnd:function(){t.polygonEnd(),e.polygonEnd(),r.polygonEnd()}}},n.precision=function(t){return arguments.length?(i.precision(t),o.precision(t),a.precision(t),n):i.precision()},n.scale=function(t){return arguments.length?(i.scale(t),o.scale(.35*t),a.scale(t),n.translate(i.translate())):i.scale()},n.translate=function(t){if(!arguments.length)return i.translate();var l=i.scale(),s=+t[0],f=+t[1];return e=i.translate(t).clipExtent([[s-.455*l,f-.238*l],[s+.455*l,f+.238*l]]).stream(c).point,r=o.translate([s-.307*l,f+.201*l]).clipExtent([[s-.425*l+Ta,f+.12*l+Ta],[s-.214*l-Ta,f+.234*l-Ta]]).stream(c).point,u=a.translate([s-.205*l,f+.212*l]).clipExtent([[s-.214*l+Ta,f+.166*l+Ta],[s-.115*l-Ta,f+.234*l-Ta]]).stream(c).point,n},n.scale(1070)};var jc,Fc,Hc,Oc,Yc,Ic,Zc={point:y,lineStart:y,lineEnd:y,polygonStart:function(){Fc=0,Zc.lineStart=Ve},polygonEnd:function(){Zc.lineStart=Zc.lineEnd=Zc.point=y,jc+=va(Fc/2)}},Vc={point:Xe,lineStart:y,lineEnd:y,polygonStart:y,polygonEnd:y},Xc={point:We,lineStart:Je,lineEnd:Ge,polygonStart:function(){Xc.lineStart=Ke},polygonEnd:function(){Xc.point=We,Xc.lineStart=Je,Xc.lineEnd=Ge}};ta.geo.path=function(){function n(n){return n&&("function"==typeof a&&i.pointRadius(+a.apply(this,arguments)),o&&o.valid||(o=u(i)),ta.geo.stream(n,o)),i.result()}function t(){return o=null,n}var e,r,u,i,o,a=4.5;return n.area=function(n){return jc=0,ta.geo.stream(n,u(Zc)),jc},n.centroid=function(n){return Ec=Ac=Nc=Cc=zc=qc=Lc=Tc=Rc=0,ta.geo.stream(n,u(Xc)),Rc?[Lc/Rc,Tc/Rc]:qc?[Cc/qc,zc/qc]:Nc?[Ec/Nc,Ac/Nc]:[0/0,0/0]},n.bounds=function(n){return Yc=Ic=-(Hc=Oc=1/0),ta.geo.stream(n,u(Vc)),[[Hc,Oc],[Yc,Ic]]},n.projection=function(n){return arguments.length?(u=(e=n)?n.stream||tr(n):Et,t()):e},n.context=function(n){return arguments.length?(i=null==(r=n)?new $e:new Qe(n),"function"!=typeof a&&i.pointRadius(a),t()):r},n.pointRadius=function(t){return arguments.length?(a="function"==typeof t?t:(i.pointRadius(+t),+t),n):a},n.projection(ta.geo.albersUsa()).context(null)},ta.geo.transform=function(n){return{stream:function(t){var e=new er(t);for(var r in n)e[r]=n[r];return e}}},er.prototype={point:function(n,t){this.stream.point(n,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}},ta.geo.projection=ur,ta.geo.projectionMutator=ir,(ta.geo.equirectangular=function(){return ur(ar)}).raw=ar.invert=ar,ta.geo.rotation=function(n){function t(t){return t=n(t[0]*Fa,t[1]*Fa),t[0]*=Ha,t[1]*=Ha,t}return n=lr(n[0]%360*Fa,n[1]*Fa,n.length>2?n[2]*Fa:0),t.invert=function(t){return t=n.invert(t[0]*Fa,t[1]*Fa),t[0]*=Ha,t[1]*=Ha,t},t},cr.invert=ar,ta.geo.circle=function(){function n(){var n="function"==typeof r?r.apply(this,arguments):r,t=lr(-n[0]*Fa,-n[1]*Fa,0).invert,u=[];return e(null,null,1,{point:function(n,e){u.push(n=t(n,e)),n[0]*=Ha,n[1]*=Ha}}),{type:"Polygon",coordinates:[u]}}var t,e,r=[0,0],u=6;return n.origin=function(t){return arguments.length?(r=t,n):r},n.angle=function(r){return arguments.length?(e=gr((t=+r)*Fa,u*Fa),n):t},n.precision=function(r){return arguments.length?(e=gr(t*Fa,(u=+r)*Fa),n):u},n.angle(90)},ta.geo.distance=function(n,t){var e,r=(t[0]-n[0])*Fa,u=n[1]*Fa,i=t[1]*Fa,o=Math.sin(r),a=Math.cos(r),c=Math.sin(u),l=Math.cos(u),s=Math.sin(i),f=Math.cos(i);return Math.atan2(Math.sqrt((e=f*o)*e+(e=l*s-c*f*a)*e),c*s+l*f*a)},ta.geo.graticule=function(){function n(){return{type:"MultiLineString",coordinates:t()}}function t(){return ta.range(Math.ceil(i/d)*d,u,d).map(h).concat(ta.range(Math.ceil(l/m)*m,c,m).map(g)).concat(ta.range(Math.ceil(r/p)*p,e,p).filter(function(n){return va(n%d)>Ta}).map(s)).concat(ta.range(Math.ceil(a/v)*v,o,v).filter(function(n){return va(n%m)>Ta}).map(f))}var e,r,u,i,o,a,c,l,s,f,h,g,p=10,v=p,d=90,m=360,y=2.5;return n.lines=function(){return t().map(function(n){return{type:"LineString",coordinates:n}})},n.outline=function(){return{type:"Polygon",coordinates:[h(i).concat(g(c).slice(1),h(u).reverse().slice(1),g(l).reverse().slice(1))]}},n.extent=function(t){return arguments.length?n.majorExtent(t).minorExtent(t):n.minorExtent()},n.majorExtent=function(t){return arguments.length?(i=+t[0][0],u=+t[1][0],l=+t[0][1],c=+t[1][1],i>u&&(t=i,i=u,u=t),l>c&&(t=l,l=c,c=t),n.precision(y)):[[i,l],[u,c]]},n.minorExtent=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],a=+t[0][1],o=+t[1][1],r>e&&(t=r,r=e,e=t),a>o&&(t=a,a=o,o=t),n.precision(y)):[[r,a],[e,o]]},n.step=function(t){return arguments.length?n.majorStep(t).minorStep(t):n.minorStep()},n.majorStep=function(t){return arguments.length?(d=+t[0],m=+t[1],n):[d,m]},n.minorStep=function(t){return arguments.length?(p=+t[0],v=+t[1],n):[p,v]},n.precision=function(t){return arguments.length?(y=+t,s=vr(a,o,90),f=dr(r,e,y),h=vr(l,c,90),g=dr(i,u,y),n):y},n.majorExtent([[-180,-90+Ta],[180,90-Ta]]).minorExtent([[-180,-80-Ta],[180,80+Ta]])},ta.geo.greatArc=function(){function n(){return{type:"LineString",coordinates:[t||r.apply(this,arguments),e||u.apply(this,arguments)]}}var t,e,r=mr,u=yr;return n.distance=function(){return ta.geo.distance(t||r.apply(this,arguments),e||u.apply(this,arguments))},n.source=function(e){return arguments.length?(r=e,t="function"==typeof e?null:e,n):r},n.target=function(t){return arguments.length?(u=t,e="function"==typeof t?null:t,n):u},n.precision=function(){return arguments.length?n:0},n},ta.geo.interpolate=function(n,t){return Mr(n[0]*Fa,n[1]*Fa,t[0]*Fa,t[1]*Fa)},ta.geo.length=function(n){return $c=0,ta.geo.stream(n,Bc),$c};var $c,Bc={sphere:y,point:y,lineStart:xr,lineEnd:y,polygonStart:y,polygonEnd:y},Wc=br(function(n){return Math.sqrt(2/(1+n))},function(n){return 2*Math.asin(n/2)});(ta.geo.azimuthalEqualArea=function(){return ur(Wc)}).raw=Wc;var Jc=br(function(n){var t=Math.acos(n);return t&&t/Math.sin(t)},Et);(ta.geo.azimuthalEquidistant=function(){return ur(Jc)}).raw=Jc,(ta.geo.conicConformal=function(){return Ie(_r)}).raw=_r,(ta.geo.conicEquidistant=function(){return Ie(wr)}).raw=wr;var Gc=br(function(n){return 1/n},Math.atan);(ta.geo.gnomonic=function(){return ur(Gc)}).raw=Gc,Sr.invert=function(n,t){return[n,2*Math.atan(Math.exp(t))-ja]},(ta.geo.mercator=function(){return kr(Sr)}).raw=Sr;var Kc=br(function(){return 1},Math.asin);(ta.geo.orthographic=function(){return ur(Kc)}).raw=Kc;var Qc=br(function(n){return 1/(1+n)},function(n){return 2*Math.atan(n)});(ta.geo.stereographic=function(){return ur(Qc)}).raw=Qc,Er.invert=function(n,t){return[-t,2*Math.atan(Math.exp(n))-ja]},(ta.geo.transverseMercator=function(){var n=kr(Er),t=n.center,e=n.rotate;return n.center=function(n){return n?t([-n[1],n[0]]):(n=t(),[n[1],-n[0]])},n.rotate=function(n){return n?e([n[0],n[1],n.length>2?n[2]+90:90]):(n=e(),[n[0],n[1],n[2]-90])},e([0,0,90])}).raw=Er,ta.geom={},ta.geom.hull=function(n){function t(n){if(n.length<3)return[];var t,u=kt(e),i=kt(r),o=n.length,a=[],c=[];for(t=0;o>t;t++)a.push([+u.call(this,n[t],t),+i.call(this,n[t],t),t]);for(a.sort(zr),t=0;o>t;t++)c.push([a[t][0],-a[t][1]]);var l=Cr(a),s=Cr(c),f=s[0]===l[0],h=s[s.length-1]===l[l.length-1],g=[];for(t=l.length-1;t>=0;--t)g.push(n[a[l[t]][2]]);for(t=+f;t<s.length-h;++t)g.push(n[a[s[t]][2]]);return g}var e=Ar,r=Nr;return arguments.length?t(n):(t.x=function(n){return arguments.length?(e=n,t):e},t.y=function(n){return arguments.length?(r=n,t):r},t)},ta.geom.polygon=function(n){return xa(n,nl),n};var nl=ta.geom.polygon.prototype=[];nl.area=function(){for(var n,t=-1,e=this.length,r=this[e-1],u=0;++t<e;)n=r,r=this[t],u+=n[1]*r[0]-n[0]*r[1];return.5*u},nl.centroid=function(n){var t,e,r=-1,u=this.length,i=0,o=0,a=this[u-1];for(arguments.length||(n=-1/(6*this.area()));++r<u;)t=a,a=this[r],e=t[0]*a[1]-a[0]*t[1],i+=(t[0]+a[0])*e,o+=(t[1]+a[1])*e;return[i*n,o*n]},nl.clip=function(n){for(var t,e,r,u,i,o,a=Tr(n),c=-1,l=this.length-Tr(this),s=this[l-1];++c<l;){for(t=n.slice(),n.length=0,u=this[c],i=t[(r=t.length-a)-1],e=-1;++e<r;)o=t[e],qr(o,s,u)?(qr(i,s,u)||n.push(Lr(i,o,s,u)),n.push(o)):qr(i,s,u)&&n.push(Lr(i,o,s,u)),i=o;a&&n.push(n[0]),s=u}return n};var tl,el,rl,ul,il,ol=[],al=[];Or.prototype.prepare=function(){for(var n,t=this.edges,e=t.length;e--;)n=t[e].edge,n.b&&n.a||t.splice(e,1);return t.sort(Ir),t.length},Qr.prototype={start:function(){return this.edge.l===this.site?this.edge.a:this.edge.b},end:function(){return this.edge.l===this.site?this.edge.b:this.edge.a}},nu.prototype={insert:function(n,t){var e,r,u;if(n){if(t.P=n,t.N=n.N,n.N&&(n.N.P=t),n.N=t,n.R){for(n=n.R;n.L;)n=n.L;n.L=t}else n.R=t;e=n}else this._?(n=uu(this._),t.P=null,t.N=n,n.P=n.L=t,e=n):(t.P=t.N=null,this._=t,e=null);for(t.L=t.R=null,t.U=e,t.C=!0,n=t;e&&e.C;)r=e.U,e===r.L?(u=r.R,u&&u.C?(e.C=u.C=!1,r.C=!0,n=r):(n===e.R&&(eu(this,e),n=e,e=n.U),e.C=!1,r.C=!0,ru(this,r))):(u=r.L,u&&u.C?(e.C=u.C=!1,r.C=!0,n=r):(n===e.L&&(ru(this,e),n=e,e=n.U),e.C=!1,r.C=!0,eu(this,r))),e=n.U;this._.C=!1},remove:function(n){n.N&&(n.N.P=n.P),n.P&&(n.P.N=n.N),n.N=n.P=null;var t,e,r,u=n.U,i=n.L,o=n.R;if(e=i?o?uu(o):i:o,u?u.L===n?u.L=e:u.R=e:this._=e,i&&o?(r=e.C,e.C=n.C,e.L=i,i.U=e,e!==o?(u=e.U,e.U=n.U,n=e.R,u.L=n,e.R=o,o.U=e):(e.U=u,u=e,n=e.R)):(r=n.C,n=e),n&&(n.U=u),!r){if(n&&n.C)return n.C=!1,void 0;do{if(n===this._)break;if(n===u.L){if(t=u.R,t.C&&(t.C=!1,u.C=!0,eu(this,u),t=u.R),t.L&&t.L.C||t.R&&t.R.C){t.R&&t.R.C||(t.L.C=!1,t.C=!0,ru(this,t),t=u.R),t.C=u.C,u.C=t.R.C=!1,eu(this,u),n=this._;break}}else if(t=u.L,t.C&&(t.C=!1,u.C=!0,ru(this,u),t=u.L),t.L&&t.L.C||t.R&&t.R.C){t.L&&t.L.C||(t.R.C=!1,t.C=!0,eu(this,t),t=u.L),t.C=u.C,u.C=t.L.C=!1,ru(this,u),n=this._;break}t.C=!0,n=u,u=u.U}while(!n.C);n&&(n.C=!1)}}},ta.geom.voronoi=function(n){function t(n){var t=new Array(n.length),r=a[0][0],u=a[0][1],i=a[1][0],o=a[1][1];return iu(e(n),a).cells.forEach(function(e,a){var c=e.edges,l=e.site,s=t[a]=c.length?c.map(function(n){var t=n.start();return[t.x,t.y]}):l.x>=r&&l.x<=i&&l.y>=u&&l.y<=o?[[r,o],[i,o],[i,u],[r,u]]:[];s.point=n[a]}),t}function e(n){return n.map(function(n,t){return{x:Math.round(i(n,t)/Ta)*Ta,y:Math.round(o(n,t)/Ta)*Ta,i:t}})}var r=Ar,u=Nr,i=r,o=u,a=cl;return n?t(n):(t.links=function(n){return iu(e(n)).edges.filter(function(n){return n.l&&n.r}).map(function(t){return{source:n[t.l.i],target:n[t.r.i]}})},t.triangles=function(n){var t=[];return iu(e(n)).cells.forEach(function(e,r){for(var u,i,o=e.site,a=e.edges.sort(Ir),c=-1,l=a.length,s=a[l-1].edge,f=s.l===o?s.r:s.l;++c<l;)u=s,i=f,s=a[c].edge,f=s.l===o?s.r:s.l,r<i.i&&r<f.i&&au(o,i,f)<0&&t.push([n[r],n[i.i],n[f.i]])}),t},t.x=function(n){return arguments.length?(i=kt(r=n),t):r},t.y=function(n){return arguments.length?(o=kt(u=n),t):u},t.clipExtent=function(n){return arguments.length?(a=null==n?cl:n,t):a===cl?null:a},t.size=function(n){return arguments.length?t.clipExtent(n&&[[0,0],n]):a===cl?null:a&&a[1]},t)};var cl=[[-1e6,-1e6],[1e6,1e6]];ta.geom.delaunay=function(n){return ta.geom.voronoi().triangles(n)},ta.geom.quadtree=function(n,t,e,r,u){function i(n){function i(n,t,e,r,u,i,o,a){if(!isNaN(e)&&!isNaN(r))if(n.leaf){var c=n.x,s=n.y;if(null!=c)if(va(c-e)+va(s-r)<.01)l(n,t,e,r,u,i,o,a);else{var f=n.point;n.x=n.y=n.point=null,l(n,f,c,s,u,i,o,a),l(n,t,e,r,u,i,o,a)}else n.x=e,n.y=r,n.point=t}else l(n,t,e,r,u,i,o,a)}function l(n,t,e,r,u,o,a,c){var l=.5*(u+a),s=.5*(o+c),f=e>=l,h=r>=s,g=h<<1|f;n.leaf=!1,n=n.nodes[g]||(n.nodes[g]=su()),f?u=l:a=l,h?o=s:c=s,i(n,t,e,r,u,o,a,c)}var s,f,h,g,p,v,d,m,y,M=kt(a),x=kt(c);if(null!=t)v=t,d=e,m=r,y=u;else if(m=y=-(v=d=1/0),f=[],h=[],p=n.length,o)for(g=0;p>g;++g)s=n[g],s.x<v&&(v=s.x),s.y<d&&(d=s.y),s.x>m&&(m=s.x),s.y>y&&(y=s.y),f.push(s.x),h.push(s.y);else for(g=0;p>g;++g){var b=+M(s=n[g],g),_=+x(s,g);v>b&&(v=b),d>_&&(d=_),b>m&&(m=b),_>y&&(y=_),f.push(b),h.push(_)}var w=m-v,S=y-d;w>S?y=d+w:m=v+S;var k=su();if(k.add=function(n){i(k,n,+M(n,++g),+x(n,g),v,d,m,y)},k.visit=function(n){fu(n,k,v,d,m,y)},k.find=function(n){return hu(k,n[0],n[1],v,d,m,y)},g=-1,null==t){for(;++g<p;)i(k,n[g],f[g],h[g],v,d,m,y);--g}else n.forEach(k.add);return f=h=n=s=null,k}var o,a=Ar,c=Nr;return(o=arguments.length)?(a=cu,c=lu,3===o&&(u=e,r=t,e=t=0),i(n)):(i.x=function(n){return arguments.length?(a=n,i):a},i.y=function(n){return arguments.length?(c=n,i):c},i.extent=function(n){return arguments.length?(null==n?t=e=r=u=null:(t=+n[0][0],e=+n[0][1],r=+n[1][0],u=+n[1][1]),i):null==t?null:[[t,e],[r,u]]},i.size=function(n){return arguments.length?(null==n?t=e=r=u=null:(t=e=0,r=+n[0],u=+n[1]),i):null==t?null:[r-t,u-e]},i)},ta.interpolateRgb=gu,ta.interpolateObject=pu,ta.interpolateNumber=vu,ta.interpolateString=du;var ll=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,sl=new RegExp(ll.source,"g");ta.interpolate=mu,ta.interpolators=[function(n,t){var e=typeof t;return("string"===e?tc.has(t)||/^(#|rgb\(|hsl\()/.test(t)?gu:du:t instanceof it?gu:Array.isArray(t)?yu:"object"===e&&isNaN(t)?pu:vu)(n,t)}],ta.interpolateArray=yu;var fl=function(){return Et},hl=ta.map({linear:fl,poly:ku,quad:function(){return _u},cubic:function(){return wu},sin:function(){return Eu},exp:function(){return Au},circle:function(){return Nu},elastic:Cu,back:zu,bounce:function(){return qu}}),gl=ta.map({"in":Et,out:xu,"in-out":bu,"out-in":function(n){return bu(xu(n))}});ta.ease=function(n){var t=n.indexOf("-"),e=t>=0?n.slice(0,t):n,r=t>=0?n.slice(t+1):"in";return e=hl.get(e)||fl,r=gl.get(r)||Et,Mu(r(e.apply(null,ea.call(arguments,1))))},ta.interpolateHcl=Lu,ta.interpolateHsl=Tu,ta.interpolateLab=Ru,ta.interpolateRound=Du,ta.transform=function(n){var t=ua.createElementNS(ta.ns.prefix.svg,"g");return(ta.transform=function(n){if(null!=n){t.setAttribute("transform",n);var e=t.transform.baseVal.consolidate()}return new Pu(e?e.matrix:pl)})(n)},Pu.prototype.toString=function(){return"translate("+this.translate+")rotate("+this.rotate+")skewX("+this.skew+")scale("+this.scale+")"};var pl={a:1,b:0,c:0,d:1,e:0,f:0};ta.interpolateTransform=Hu,ta.layout={},ta.layout.bundle=function(){return function(n){for(var t=[],e=-1,r=n.length;++e<r;)t.push(Iu(n[e]));return t}},ta.layout.chord=function(){function n(){var n,l,f,h,g,p={},v=[],d=ta.range(i),m=[];for(e=[],r=[],n=0,h=-1;++h<i;){for(l=0,g=-1;++g<i;)l+=u[h][g];v.push(l),m.push(ta.range(i)),n+=l}for(o&&d.sort(function(n,t){return o(v[n],v[t])}),a&&m.forEach(function(n,t){n.sort(function(n,e){return a(u[t][n],u[t][e])})}),n=(Pa-s*i)/n,l=0,h=-1;++h<i;){for(f=l,g=-1;++g<i;){var y=d[h],M=m[y][g],x=u[y][M],b=l,_=l+=x*n;p[y+"-"+M]={index:y,subindex:M,startAngle:b,endAngle:_,value:x}}r[y]={index:y,startAngle:f,endAngle:l,value:(l-f)/n},l+=s}for(h=-1;++h<i;)for(g=h-1;++g<i;){var w=p[h+"-"+g],S=p[g+"-"+h];(w.value||S.value)&&e.push(w.value<S.value?{source:S,target:w}:{source:w,target:S})}c&&t()}function t(){e.sort(function(n,t){return c((n.source.value+n.target.value)/2,(t.source.value+t.target.value)/2)})}var e,r,u,i,o,a,c,l={},s=0;return l.matrix=function(n){return arguments.length?(i=(u=n)&&u.length,e=r=null,l):u},l.padding=function(n){return arguments.length?(s=n,e=r=null,l):s},l.sortGroups=function(n){return arguments.length?(o=n,e=r=null,l):o},l.sortSubgroups=function(n){return arguments.length?(a=n,e=null,l):a},l.sortChords=function(n){return arguments.length?(c=n,e&&t(),l):c},l.chords=function(){return e||n(),e},l.groups=function(){return r||n(),r},l},ta.layout.force=function(){function n(n){return function(t,e,r,u){if(t.point!==n){var i=t.cx-n.x,o=t.cy-n.y,a=u-e,c=i*i+o*o;if(c>a*a/d){if(p>c){var l=t.charge/c;n.px-=i*l,n.py-=o*l}return!0}if(t.point&&c&&p>c){var l=t.pointCharge/c;n.px-=i*l,n.py-=o*l}}return!t.charge}}function t(n){n.px=ta.event.x,n.py=ta.event.y,a.resume()}var e,r,u,i,o,a={},c=ta.dispatch("start","tick","end"),l=[1,1],s=.9,f=vl,h=dl,g=-30,p=ml,v=.1,d=.64,m=[],y=[];return a.tick=function(){if((r*=.99)<.005)return c.end({type:"end",alpha:r=0}),!0;var t,e,a,f,h,p,d,M,x,b=m.length,_=y.length;for(e=0;_>e;++e)a=y[e],f=a.source,h=a.target,M=h.x-f.x,x=h.y-f.y,(p=M*M+x*x)&&(p=r*i[e]*((p=Math.sqrt(p))-u[e])/p,M*=p,x*=p,h.x-=M*(d=f.weight/(h.weight+f.weight)),h.y-=x*d,f.x+=M*(d=1-d),f.y+=x*d);if((d=r*v)&&(M=l[0]/2,x=l[1]/2,e=-1,d))for(;++e<b;)a=m[e],a.x+=(M-a.x)*d,a.y+=(x-a.y)*d;if(g)for(Ju(t=ta.geom.quadtree(m),r,o),e=-1;++e<b;)(a=m[e]).fixed||t.visit(n(a));for(e=-1;++e<b;)a=m[e],a.fixed?(a.x=a.px,a.y=a.py):(a.x-=(a.px-(a.px=a.x))*s,a.y-=(a.py-(a.py=a.y))*s);c.tick({type:"tick",alpha:r})},a.nodes=function(n){return arguments.length?(m=n,a):m},a.links=function(n){return arguments.length?(y=n,a):y},a.size=function(n){return arguments.length?(l=n,a):l},a.linkDistance=function(n){return arguments.length?(f="function"==typeof n?n:+n,a):f},a.distance=a.linkDistance,a.linkStrength=function(n){return arguments.length?(h="function"==typeof n?n:+n,a):h},a.friction=function(n){return arguments.length?(s=+n,a):s},a.charge=function(n){return arguments.length?(g="function"==typeof n?n:+n,a):g},a.chargeDistance=function(n){return arguments.length?(p=n*n,a):Math.sqrt(p)},a.gravity=function(n){return arguments.length?(v=+n,a):v},a.theta=function(n){return arguments.length?(d=n*n,a):Math.sqrt(d)},a.alpha=function(n){return arguments.length?(n=+n,r?r=n>0?n:0:n>0&&(c.start({type:"start",alpha:r=n}),ta.timer(a.tick)),a):r},a.start=function(){function n(n,r){if(!e){for(e=new Array(c),a=0;c>a;++a)e[a]=[];for(a=0;l>a;++a){var u=y[a];e[u.source.index].push(u.target),e[u.target.index].push(u.source)}}for(var i,o=e[t],a=-1,l=o.length;++a<l;)if(!isNaN(i=o[a][n]))return i;return Math.random()*r}var t,e,r,c=m.length,s=y.length,p=l[0],v=l[1];for(t=0;c>t;++t)(r=m[t]).index=t,r.weight=0;for(t=0;s>t;++t)r=y[t],"number"==typeof r.source&&(r.source=m[r.source]),"number"==typeof r.target&&(r.target=m[r.target]),++r.source.weight,++r.target.weight;for(t=0;c>t;++t)r=m[t],isNaN(r.x)&&(r.x=n("x",p)),isNaN(r.y)&&(r.y=n("y",v)),isNaN(r.px)&&(r.px=r.x),isNaN(r.py)&&(r.py=r.y);if(u=[],"function"==typeof f)for(t=0;s>t;++t)u[t]=+f.call(this,y[t],t);else for(t=0;s>t;++t)u[t]=f;if(i=[],"function"==typeof h)for(t=0;s>t;++t)i[t]=+h.call(this,y[t],t);else for(t=0;s>t;++t)i[t]=h;if(o=[],"function"==typeof g)for(t=0;c>t;++t)o[t]=+g.call(this,m[t],t);else for(t=0;c>t;++t)o[t]=g;return a.resume()},a.resume=function(){return a.alpha(.1)},a.stop=function(){return a.alpha(0)},a.drag=function(){return e||(e=ta.behavior.drag().origin(Et).on("dragstart.force",Xu).on("drag.force",t).on("dragend.force",$u)),arguments.length?(this.on("mouseover.force",Bu).on("mouseout.force",Wu).call(e),void 0):e},ta.rebind(a,c,"on")};var vl=20,dl=1,ml=1/0;ta.layout.hierarchy=function(){function n(u){var i,o=[u],a=[];for(u.depth=0;null!=(i=o.pop());)if(a.push(i),(l=e.call(n,i,i.depth))&&(c=l.length)){for(var c,l,s;--c>=0;)o.push(s=l[c]),s.parent=i,s.depth=i.depth+1;r&&(i.value=0),i.children=l}else r&&(i.value=+r.call(n,i,i.depth)||0),delete i.children;return Qu(u,function(n){var e,u;t&&(e=n.children)&&e.sort(t),r&&(u=n.parent)&&(u.value+=n.value)}),a}var t=ei,e=ni,r=ti;return n.sort=function(e){return arguments.length?(t=e,n):t},n.children=function(t){return arguments.length?(e=t,n):e},n.value=function(t){return arguments.length?(r=t,n):r},n.revalue=function(t){return r&&(Ku(t,function(n){n.children&&(n.value=0)}),Qu(t,function(t){var e;t.children||(t.value=+r.call(n,t,t.depth)||0),(e=t.parent)&&(e.value+=t.value)})),t},n},ta.layout.partition=function(){function n(t,e,r,u){var i=t.children;if(t.x=e,t.y=t.depth*u,t.dx=r,t.dy=u,i&&(o=i.length)){var o,a,c,l=-1;for(r=t.value?r/t.value:0;++l<o;)n(a=i[l],e,c=a.value*r,u),e+=c}}function t(n){var e=n.children,r=0;if(e&&(u=e.length))for(var u,i=-1;++i<u;)r=Math.max(r,t(e[i]));return 1+r}function e(e,i){var o=r.call(this,e,i);return n(o[0],0,u[0],u[1]/t(o[0])),o}var r=ta.layout.hierarchy(),u=[1,1];return e.size=function(n){return arguments.length?(u=n,e):u},Gu(e,r)},ta.layout.pie=function(){function n(o){var a,c=o.length,l=o.map(function(e,r){return+t.call(n,e,r)}),s=+("function"==typeof r?r.apply(this,arguments):r),f=("function"==typeof u?u.apply(this,arguments):u)-s,h=Math.min(Math.abs(f)/c,+("function"==typeof i?i.apply(this,arguments):i)),g=h*(0>f?-1:1),p=(f-c*g)/ta.sum(l),v=ta.range(c),d=[];return null!=e&&v.sort(e===yl?function(n,t){return l[t]-l[n]}:function(n,t){return e(o[n],o[t])}),v.forEach(function(n){d[n]={data:o[n],value:a=l[n],startAngle:s,endAngle:s+=a*p+g,padAngle:h}}),d}var t=Number,e=yl,r=0,u=Pa,i=0;return n.value=function(e){return arguments.length?(t=e,n):t},n.sort=function(t){return arguments.length?(e=t,n):e},n.startAngle=function(t){return arguments.length?(r=t,n):r},n.endAngle=function(t){return arguments.length?(u=t,n):u},n.padAngle=function(t){return arguments.length?(i=t,n):i},n};var yl={};ta.layout.stack=function(){function n(a,c){if(!(h=a.length))return a;var l=a.map(function(e,r){return t.call(n,e,r)}),s=l.map(function(t){return t.map(function(t,e){return[i.call(n,t,e),o.call(n,t,e)]})}),f=e.call(n,s,c);l=ta.permute(l,f),s=ta.permute(s,f);var h,g,p,v,d=r.call(n,s,c),m=l[0].length;for(p=0;m>p;++p)for(u.call(n,l[0][p],v=d[p],s[0][p][1]),g=1;h>g;++g)u.call(n,l[g][p],v+=s[g-1][p][1],s[g][p][1]);return a}var t=Et,e=ai,r=ci,u=oi,i=ui,o=ii;return n.values=function(e){return arguments.length?(t=e,n):t},n.order=function(t){return arguments.length?(e="function"==typeof t?t:Ml.get(t)||ai,n):e},n.offset=function(t){return arguments.length?(r="function"==typeof t?t:xl.get(t)||ci,n):r},n.x=function(t){return arguments.length?(i=t,n):i},n.y=function(t){return arguments.length?(o=t,n):o},n.out=function(t){return arguments.length?(u=t,n):u},n};var Ml=ta.map({"inside-out":function(n){var t,e,r=n.length,u=n.map(li),i=n.map(si),o=ta.range(r).sort(function(n,t){return u[n]-u[t]}),a=0,c=0,l=[],s=[];for(t=0;r>t;++t)e=o[t],c>a?(a+=i[e],l.push(e)):(c+=i[e],s.push(e));return s.reverse().concat(l)},reverse:function(n){return ta.range(n.length).reverse()},"default":ai}),xl=ta.map({silhouette:function(n){var t,e,r,u=n.length,i=n[0].length,o=[],a=0,c=[];for(e=0;i>e;++e){for(t=0,r=0;u>t;t++)r+=n[t][e][1];r>a&&(a=r),o.push(r)}for(e=0;i>e;++e)c[e]=(a-o[e])/2;return c},wiggle:function(n){var t,e,r,u,i,o,a,c,l,s=n.length,f=n[0],h=f.length,g=[];for(g[0]=c=l=0,e=1;h>e;++e){for(t=0,u=0;s>t;++t)u+=n[t][e][1];for(t=0,i=0,a=f[e][0]-f[e-1][0];s>t;++t){for(r=0,o=(n[t][e][1]-n[t][e-1][1])/(2*a);t>r;++r)o+=(n[r][e][1]-n[r][e-1][1])/a;i+=o*n[t][e][1]}g[e]=c-=u?i/u*a:0,l>c&&(l=c)}for(e=0;h>e;++e)g[e]-=l;return g},expand:function(n){var t,e,r,u=n.length,i=n[0].length,o=1/u,a=[];for(e=0;i>e;++e){for(t=0,r=0;u>t;t++)r+=n[t][e][1];if(r)for(t=0;u>t;t++)n[t][e][1]/=r;else for(t=0;u>t;t++)n[t][e][1]=o}for(e=0;i>e;++e)a[e]=0;return a},zero:ci});ta.layout.histogram=function(){function n(n,i){for(var o,a,c=[],l=n.map(e,this),s=r.call(this,l,i),f=u.call(this,s,l,i),i=-1,h=l.length,g=f.length-1,p=t?1:1/h;++i<g;)o=c[i]=[],o.dx=f[i+1]-(o.x=f[i]),o.y=0;if(g>0)for(i=-1;++i<h;)a=l[i],a>=s[0]&&a<=s[1]&&(o=c[ta.bisect(f,a,1,g)-1],o.y+=p,o.push(n[i]));return c}var t=!0,e=Number,r=pi,u=hi;return n.value=function(t){return arguments.length?(e=t,n):e},n.range=function(t){return arguments.length?(r=kt(t),n):r},n.bins=function(t){return arguments.length?(u="number"==typeof t?function(n){return gi(n,t)}:kt(t),n):u},n.frequency=function(e){return arguments.length?(t=!!e,n):t},n},ta.layout.pack=function(){function n(n,i){var o=e.call(this,n,i),a=o[0],c=u[0],l=u[1],s=null==t?Math.sqrt:"function"==typeof t?t:function(){return t};if(a.x=a.y=0,Qu(a,function(n){n.r=+s(n.value)}),Qu(a,Mi),r){var f=r*(t?1:Math.max(2*a.r/c,2*a.r/l))/2;Qu(a,function(n){n.r+=f}),Qu(a,Mi),Qu(a,function(n){n.r-=f})}return _i(a,c/2,l/2,t?1:1/Math.max(2*a.r/c,2*a.r/l)),o}var t,e=ta.layout.hierarchy().sort(vi),r=0,u=[1,1];return n.size=function(t){return arguments.length?(u=t,n):u},n.radius=function(e){return arguments.length?(t=null==e||"function"==typeof e?e:+e,n):t},n.padding=function(t){return arguments.length?(r=+t,n):r},Gu(n,e)},ta.layout.tree=function(){function n(n,u){var s=o.call(this,n,u),f=s[0],h=t(f);if(Qu(h,e),h.parent.m=-h.z,Ku(h,r),l)Ku(f,i);else{var g=f,p=f,v=f;Ku(f,function(n){n.x<g.x&&(g=n),n.x>p.x&&(p=n),n.depth>v.depth&&(v=n)});var d=a(g,p)/2-g.x,m=c[0]/(p.x+a(p,g)/2+d),y=c[1]/(v.depth||1);Ku(f,function(n){n.x=(n.x+d)*m,n.y=n.depth*y})}return s}function t(n){for(var t,e={A:null,children:[n]},r=[e];null!=(t=r.pop());)for(var u,i=t.children,o=0,a=i.length;a>o;++o)r.push((i[o]=u={_:i[o],parent:t,children:(u=i[o].children)&&u.slice()||[],A:null,a:null,z:0,m:0,c:0,s:0,t:null,i:o}).a=u);return e.children[0]}function e(n){var t=n.children,e=n.parent.children,r=n.i?e[n.i-1]:null;if(t.length){Ni(n);var i=(t[0].z+t[t.length-1].z)/2;r?(n.z=r.z+a(n._,r._),n.m=n.z-i):n.z=i}else r&&(n.z=r.z+a(n._,r._));n.parent.A=u(n,r,n.parent.A||e[0])}function r(n){n._.x=n.z+n.parent.m,n.m+=n.parent.m}function u(n,t,e){if(t){for(var r,u=n,i=n,o=t,c=u.parent.children[0],l=u.m,s=i.m,f=o.m,h=c.m;o=Ei(o),u=ki(u),o&&u;)c=ki(c),i=Ei(i),i.a=n,r=o.z+f-u.z-l+a(o._,u._),r>0&&(Ai(Ci(o,n,e),n,r),l+=r,s+=r),f+=o.m,l+=u.m,h+=c.m,s+=i.m;o&&!Ei(i)&&(i.t=o,i.m+=f-s),u&&!ki(c)&&(c.t=u,c.m+=l-h,e=n)}return e}function i(n){n.x*=c[0],n.y=n.depth*c[1]}var o=ta.layout.hierarchy().sort(null).value(null),a=Si,c=[1,1],l=null;return n.separation=function(t){return arguments.length?(a=t,n):a},n.size=function(t){return arguments.length?(l=null==(c=t)?i:null,n):l?null:c},n.nodeSize=function(t){return arguments.length?(l=null==(c=t)?null:i,n):l?c:null},Gu(n,o)},ta.layout.cluster=function(){function n(n,i){var o,a=t.call(this,n,i),c=a[0],l=0;Qu(c,function(n){var t=n.children;t&&t.length?(n.x=qi(t),n.y=zi(t)):(n.x=o?l+=e(n,o):0,n.y=0,o=n)});var s=Li(c),f=Ti(c),h=s.x-e(s,f)/2,g=f.x+e(f,s)/2;return Qu(c,u?function(n){n.x=(n.x-c.x)*r[0],n.y=(c.y-n.y)*r[1]}:function(n){n.x=(n.x-h)/(g-h)*r[0],n.y=(1-(c.y?n.y/c.y:1))*r[1]}),a}var t=ta.layout.hierarchy().sort(null).value(null),e=Si,r=[1,1],u=!1;return n.separation=function(t){return arguments.length?(e=t,n):e},n.size=function(t){return arguments.length?(u=null==(r=t),n):u?null:r},n.nodeSize=function(t){return arguments.length?(u=null!=(r=t),n):u?r:null},Gu(n,t)},ta.layout.treemap=function(){function n(n,t){for(var e,r,u=-1,i=n.length;++u<i;)r=(e=n[u]).value*(0>t?0:t),e.area=isNaN(r)||0>=r?0:r}function t(e){var i=e.children;if(i&&i.length){var o,a,c,l=f(e),s=[],h=i.slice(),p=1/0,v="slice"===g?l.dx:"dice"===g?l.dy:"slice-dice"===g?1&e.depth?l.dy:l.dx:Math.min(l.dx,l.dy);for(n(h,l.dx*l.dy/e.value),s.area=0;(c=h.length)>0;)s.push(o=h[c-1]),s.area+=o.area,"squarify"!==g||(a=r(s,v))<=p?(h.pop(),p=a):(s.area-=s.pop().area,u(s,v,l,!1),v=Math.min(l.dx,l.dy),s.length=s.area=0,p=1/0);s.length&&(u(s,v,l,!0),s.length=s.area=0),i.forEach(t)}}function e(t){var r=t.children;if(r&&r.length){var i,o=f(t),a=r.slice(),c=[];for(n(a,o.dx*o.dy/t.value),c.area=0;i=a.pop();)c.push(i),c.area+=i.area,null!=i.z&&(u(c,i.z?o.dx:o.dy,o,!a.length),c.length=c.area=0);r.forEach(e)}}function r(n,t){for(var e,r=n.area,u=0,i=1/0,o=-1,a=n.length;++o<a;)(e=n[o].area)&&(i>e&&(i=e),e>u&&(u=e));return r*=r,t*=t,r?Math.max(t*u*p/r,r/(t*i*p)):1/0}function u(n,t,e,r){var u,i=-1,o=n.length,a=e.x,l=e.y,s=t?c(n.area/t):0;if(t==e.dx){for((r||s>e.dy)&&(s=e.dy);++i<o;)u=n[i],u.x=a,u.y=l,u.dy=s,a+=u.dx=Math.min(e.x+e.dx-a,s?c(u.area/s):0);u.z=!0,u.dx+=e.x+e.dx-a,e.y+=s,e.dy-=s}else{for((r||s>e.dx)&&(s=e.dx);++i<o;)u=n[i],u.x=a,u.y=l,u.dx=s,l+=u.dy=Math.min(e.y+e.dy-l,s?c(u.area/s):0);u.z=!1,u.dy+=e.y+e.dy-l,e.x+=s,e.dx-=s}}function i(r){var u=o||a(r),i=u[0];return i.x=0,i.y=0,i.dx=l[0],i.dy=l[1],o&&a.revalue(i),n([i],i.dx*i.dy/i.value),(o?e:t)(i),h&&(o=u),u}var o,a=ta.layout.hierarchy(),c=Math.round,l=[1,1],s=null,f=Ri,h=!1,g="squarify",p=.5*(1+Math.sqrt(5));return i.size=function(n){return arguments.length?(l=n,i):l},i.padding=function(n){function t(t){var e=n.call(i,t,t.depth);return null==e?Ri(t):Di(t,"number"==typeof e?[e,e,e,e]:e)}function e(t){return Di(t,n)}if(!arguments.length)return s;var r;return f=null==(s=n)?Ri:"function"==(r=typeof n)?t:"number"===r?(n=[n,n,n,n],e):e,i},i.round=function(n){return arguments.length?(c=n?Math.round:Number,i):c!=Number},i.sticky=function(n){return arguments.length?(h=n,o=null,i):h
},i.ratio=function(n){return arguments.length?(p=n,i):p},i.mode=function(n){return arguments.length?(g=n+"",i):g},Gu(i,a)},ta.random={normal:function(n,t){var e=arguments.length;return 2>e&&(t=1),1>e&&(n=0),function(){var e,r,u;do e=2*Math.random()-1,r=2*Math.random()-1,u=e*e+r*r;while(!u||u>1);return n+t*e*Math.sqrt(-2*Math.log(u)/u)}},logNormal:function(){var n=ta.random.normal.apply(ta,arguments);return function(){return Math.exp(n())}},bates:function(n){var t=ta.random.irwinHall(n);return function(){return t()/n}},irwinHall:function(n){return function(){for(var t=0,e=0;n>e;e++)t+=Math.random();return t}}},ta.scale={};var bl={floor:Et,ceil:Et};ta.scale.linear=function(){return Yi([0,1],[0,1],mu,!1)};var _l={s:1,g:1,p:1,r:1,e:1};ta.scale.log=function(){return Ji(ta.scale.linear().domain([0,1]),10,!0,[1,10])};var wl=ta.format(".0e"),Sl={floor:function(n){return-Math.ceil(-n)},ceil:function(n){return-Math.floor(-n)}};ta.scale.pow=function(){return Gi(ta.scale.linear(),1,[0,1])},ta.scale.sqrt=function(){return ta.scale.pow().exponent(.5)},ta.scale.ordinal=function(){return Qi([],{t:"range",a:[[]]})},ta.scale.category10=function(){return ta.scale.ordinal().range(kl)},ta.scale.category20=function(){return ta.scale.ordinal().range(El)},ta.scale.category20b=function(){return ta.scale.ordinal().range(Al)},ta.scale.category20c=function(){return ta.scale.ordinal().range(Nl)};var kl=[2062260,16744206,2924588,14034728,9725885,9197131,14907330,8355711,12369186,1556175].map(yt),El=[2062260,11454440,16744206,16759672,2924588,10018698,14034728,16750742,9725885,12955861,9197131,12885140,14907330,16234194,8355711,13092807,12369186,14408589,1556175,10410725].map(yt),Al=[3750777,5395619,7040719,10264286,6519097,9216594,11915115,13556636,9202993,12426809,15186514,15190932,8666169,11356490,14049643,15177372,8077683,10834324,13528509,14589654].map(yt),Nl=[3244733,7057110,10406625,13032431,15095053,16616764,16625259,16634018,3253076,7652470,10607003,13101504,7695281,10394312,12369372,14342891,6513507,9868950,12434877,14277081].map(yt);ta.scale.quantile=function(){return no([],[])},ta.scale.quantize=function(){return to(0,1,[0,1])},ta.scale.threshold=function(){return eo([.5],[0,1])},ta.scale.identity=function(){return ro([0,1])},ta.svg={},ta.svg.arc=function(){function n(){var n=Math.max(0,+e.apply(this,arguments)),l=Math.max(0,+r.apply(this,arguments)),s=o.apply(this,arguments)-ja,f=a.apply(this,arguments)-ja,h=Math.abs(f-s),g=s>f?0:1;if(n>l&&(p=l,l=n,n=p),h>=Ua)return t(l,g)+(n?t(n,1-g):"")+"Z";var p,v,d,m,y,M,x,b,_,w,S,k,E=0,A=0,N=[];if((m=(+c.apply(this,arguments)||0)/2)&&(d=i===Cl?Math.sqrt(n*n+l*l):+i.apply(this,arguments),g||(A*=-1),l&&(A=nt(d/l*Math.sin(m))),n&&(E=nt(d/n*Math.sin(m)))),l){y=l*Math.cos(s+A),M=l*Math.sin(s+A),x=l*Math.cos(f-A),b=l*Math.sin(f-A);var C=Math.abs(f-s-2*A)<=Da?0:1;if(A&&so(y,M,x,b)===g^C){var z=(s+f)/2;y=l*Math.cos(z),M=l*Math.sin(z),x=b=null}}else y=M=0;if(n){_=n*Math.cos(f-E),w=n*Math.sin(f-E),S=n*Math.cos(s+E),k=n*Math.sin(s+E);var q=Math.abs(s-f+2*E)<=Da?0:1;if(E&&so(_,w,S,k)===1-g^q){var L=(s+f)/2;_=n*Math.cos(L),w=n*Math.sin(L),S=k=null}}else _=w=0;if((p=Math.min(Math.abs(l-n)/2,+u.apply(this,arguments)))>.001){v=l>n^g?0:1;var T=null==S?[_,w]:null==x?[y,M]:Lr([y,M],[S,k],[x,b],[_,w]),R=y-T[0],D=M-T[1],P=x-T[0],U=b-T[1],j=1/Math.sin(Math.acos((R*P+D*U)/(Math.sqrt(R*R+D*D)*Math.sqrt(P*P+U*U)))/2),F=Math.sqrt(T[0]*T[0]+T[1]*T[1]);if(null!=x){var H=Math.min(p,(l-F)/(j+1)),O=fo(null==S?[_,w]:[S,k],[y,M],l,H,g),Y=fo([x,b],[_,w],l,H,g);p===H?N.push("M",O[0],"A",H,",",H," 0 0,",v," ",O[1],"A",l,",",l," 0 ",1-g^so(O[1][0],O[1][1],Y[1][0],Y[1][1]),",",g," ",Y[1],"A",H,",",H," 0 0,",v," ",Y[0]):N.push("M",O[0],"A",H,",",H," 0 1,",v," ",Y[0])}else N.push("M",y,",",M);if(null!=S){var I=Math.min(p,(n-F)/(j-1)),Z=fo([y,M],[S,k],n,-I,g),V=fo([_,w],null==x?[y,M]:[x,b],n,-I,g);p===I?N.push("L",V[0],"A",I,",",I," 0 0,",v," ",V[1],"A",n,",",n," 0 ",g^so(V[1][0],V[1][1],Z[1][0],Z[1][1]),",",1-g," ",Z[1],"A",I,",",I," 0 0,",v," ",Z[0]):N.push("L",V[0],"A",I,",",I," 0 0,",v," ",Z[0])}else N.push("L",_,",",w)}else N.push("M",y,",",M),null!=x&&N.push("A",l,",",l," 0 ",C,",",g," ",x,",",b),N.push("L",_,",",w),null!=S&&N.push("A",n,",",n," 0 ",q,",",1-g," ",S,",",k);return N.push("Z"),N.join("")}function t(n,t){return"M0,"+n+"A"+n+","+n+" 0 1,"+t+" 0,"+-n+"A"+n+","+n+" 0 1,"+t+" 0,"+n}var e=io,r=oo,u=uo,i=Cl,o=ao,a=co,c=lo;return n.innerRadius=function(t){return arguments.length?(e=kt(t),n):e},n.outerRadius=function(t){return arguments.length?(r=kt(t),n):r},n.cornerRadius=function(t){return arguments.length?(u=kt(t),n):u},n.padRadius=function(t){return arguments.length?(i=t==Cl?Cl:kt(t),n):i},n.startAngle=function(t){return arguments.length?(o=kt(t),n):o},n.endAngle=function(t){return arguments.length?(a=kt(t),n):a},n.padAngle=function(t){return arguments.length?(c=kt(t),n):c},n.centroid=function(){var n=(+e.apply(this,arguments)+ +r.apply(this,arguments))/2,t=(+o.apply(this,arguments)+ +a.apply(this,arguments))/2-ja;return[Math.cos(t)*n,Math.sin(t)*n]},n};var Cl="auto";ta.svg.line=function(){return ho(Et)};var zl=ta.map({linear:go,"linear-closed":po,step:vo,"step-before":mo,"step-after":yo,basis:So,"basis-open":ko,"basis-closed":Eo,bundle:Ao,cardinal:bo,"cardinal-open":Mo,"cardinal-closed":xo,monotone:To});zl.forEach(function(n,t){t.key=n,t.closed=/-closed$/.test(n)});var ql=[0,2/3,1/3,0],Ll=[0,1/3,2/3,0],Tl=[0,1/6,2/3,1/6];ta.svg.line.radial=function(){var n=ho(Ro);return n.radius=n.x,delete n.x,n.angle=n.y,delete n.y,n},mo.reverse=yo,yo.reverse=mo,ta.svg.area=function(){return Do(Et)},ta.svg.area.radial=function(){var n=Do(Ro);return n.radius=n.x,delete n.x,n.innerRadius=n.x0,delete n.x0,n.outerRadius=n.x1,delete n.x1,n.angle=n.y,delete n.y,n.startAngle=n.y0,delete n.y0,n.endAngle=n.y1,delete n.y1,n},ta.svg.chord=function(){function n(n,a){var c=t(this,i,n,a),l=t(this,o,n,a);return"M"+c.p0+r(c.r,c.p1,c.a1-c.a0)+(e(c,l)?u(c.r,c.p1,c.r,c.p0):u(c.r,c.p1,l.r,l.p0)+r(l.r,l.p1,l.a1-l.a0)+u(l.r,l.p1,c.r,c.p0))+"Z"}function t(n,t,e,r){var u=t.call(n,e,r),i=a.call(n,u,r),o=c.call(n,u,r)-ja,s=l.call(n,u,r)-ja;return{r:i,a0:o,a1:s,p0:[i*Math.cos(o),i*Math.sin(o)],p1:[i*Math.cos(s),i*Math.sin(s)]}}function e(n,t){return n.a0==t.a0&&n.a1==t.a1}function r(n,t,e){return"A"+n+","+n+" 0 "+ +(e>Da)+",1 "+t}function u(n,t,e,r){return"Q 0,0 "+r}var i=mr,o=yr,a=Po,c=ao,l=co;return n.radius=function(t){return arguments.length?(a=kt(t),n):a},n.source=function(t){return arguments.length?(i=kt(t),n):i},n.target=function(t){return arguments.length?(o=kt(t),n):o},n.startAngle=function(t){return arguments.length?(c=kt(t),n):c},n.endAngle=function(t){return arguments.length?(l=kt(t),n):l},n},ta.svg.diagonal=function(){function n(n,u){var i=t.call(this,n,u),o=e.call(this,n,u),a=(i.y+o.y)/2,c=[i,{x:i.x,y:a},{x:o.x,y:a},o];return c=c.map(r),"M"+c[0]+"C"+c[1]+" "+c[2]+" "+c[3]}var t=mr,e=yr,r=Uo;return n.source=function(e){return arguments.length?(t=kt(e),n):t},n.target=function(t){return arguments.length?(e=kt(t),n):e},n.projection=function(t){return arguments.length?(r=t,n):r},n},ta.svg.diagonal.radial=function(){var n=ta.svg.diagonal(),t=Uo,e=n.projection;return n.projection=function(n){return arguments.length?e(jo(t=n)):t},n},ta.svg.symbol=function(){function n(n,r){return(Rl.get(t.call(this,n,r))||Oo)(e.call(this,n,r))}var t=Ho,e=Fo;return n.type=function(e){return arguments.length?(t=kt(e),n):t},n.size=function(t){return arguments.length?(e=kt(t),n):e},n};var Rl=ta.map({circle:Oo,cross:function(n){var t=Math.sqrt(n/5)/2;return"M"+-3*t+","+-t+"H"+-t+"V"+-3*t+"H"+t+"V"+-t+"H"+3*t+"V"+t+"H"+t+"V"+3*t+"H"+-t+"V"+t+"H"+-3*t+"Z"},diamond:function(n){var t=Math.sqrt(n/(2*Pl)),e=t*Pl;return"M0,"+-t+"L"+e+",0"+" 0,"+t+" "+-e+",0"+"Z"},square:function(n){var t=Math.sqrt(n)/2;return"M"+-t+","+-t+"L"+t+","+-t+" "+t+","+t+" "+-t+","+t+"Z"},"triangle-down":function(n){var t=Math.sqrt(n/Dl),e=t*Dl/2;return"M0,"+e+"L"+t+","+-e+" "+-t+","+-e+"Z"},"triangle-up":function(n){var t=Math.sqrt(n/Dl),e=t*Dl/2;return"M0,"+-e+"L"+t+","+e+" "+-t+","+e+"Z"}});ta.svg.symbolTypes=Rl.keys();var Dl=Math.sqrt(3),Pl=Math.tan(30*Fa);ka.transition=function(n){for(var t,e,r=Ul||++Ol,u=Xo(n),i=[],o=jl||{time:Date.now(),ease:Su,delay:0,duration:250},a=-1,c=this.length;++a<c;){i.push(t=[]);for(var l=this[a],s=-1,f=l.length;++s<f;)(e=l[s])&&$o(e,s,u,r,o),t.push(e)}return Io(i,u,r)},ka.interrupt=function(n){return this.each(null==n?Fl:Yo(Xo(n)))};var Ul,jl,Fl=Yo(Xo()),Hl=[],Ol=0;Hl.call=ka.call,Hl.empty=ka.empty,Hl.node=ka.node,Hl.size=ka.size,ta.transition=function(n,t){return n&&n.transition?Ul?n.transition(t):n:Na.transition(n)},ta.transition.prototype=Hl,Hl.select=function(n){var t,e,r,u=this.id,i=this.namespace,o=[];n=k(n);for(var a=-1,c=this.length;++a<c;){o.push(t=[]);for(var l=this[a],s=-1,f=l.length;++s<f;)(r=l[s])&&(e=n.call(r,r.__data__,s,a))?("__data__"in r&&(e.__data__=r.__data__),$o(e,s,i,u,r[i][u]),t.push(e)):t.push(null)}return Io(o,i,u)},Hl.selectAll=function(n){var t,e,r,u,i,o=this.id,a=this.namespace,c=[];n=E(n);for(var l=-1,s=this.length;++l<s;)for(var f=this[l],h=-1,g=f.length;++h<g;)if(r=f[h]){i=r[a][o],e=n.call(r,r.__data__,h,l),c.push(t=[]);for(var p=-1,v=e.length;++p<v;)(u=e[p])&&$o(u,p,a,o,i),t.push(u)}return Io(c,a,o)},Hl.filter=function(n){var t,e,r,u=[];"function"!=typeof n&&(n=j(n));for(var i=0,o=this.length;o>i;i++){u.push(t=[]);for(var e=this[i],a=0,c=e.length;c>a;a++)(r=e[a])&&n.call(r,r.__data__,a,i)&&t.push(r)}return Io(u,this.namespace,this.id)},Hl.tween=function(n,t){var e=this.id,r=this.namespace;return arguments.length<2?this.node()[r][e].tween.get(n):H(this,null==t?function(t){t[r][e].tween.remove(n)}:function(u){u[r][e].tween.set(n,t)})},Hl.attr=function(n,t){function e(){this.removeAttribute(a)}function r(){this.removeAttributeNS(a.space,a.local)}function u(n){return null==n?e:(n+="",function(){var t,e=this.getAttribute(a);return e!==n&&(t=o(e,n),function(n){this.setAttribute(a,t(n))})})}function i(n){return null==n?r:(n+="",function(){var t,e=this.getAttributeNS(a.space,a.local);return e!==n&&(t=o(e,n),function(n){this.setAttributeNS(a.space,a.local,t(n))})})}if(arguments.length<2){for(t in n)this.attr(t,n[t]);return this}var o="transform"==n?Hu:mu,a=ta.ns.qualify(n);return Zo(this,"attr."+n,t,a.local?i:u)},Hl.attrTween=function(n,t){function e(n,e){var r=t.call(this,n,e,this.getAttribute(u));return r&&function(n){this.setAttribute(u,r(n))}}function r(n,e){var r=t.call(this,n,e,this.getAttributeNS(u.space,u.local));return r&&function(n){this.setAttributeNS(u.space,u.local,r(n))}}var u=ta.ns.qualify(n);return this.tween("attr."+n,u.local?r:e)},Hl.style=function(n,t,e){function r(){this.style.removeProperty(n)}function u(t){return null==t?r:(t+="",function(){var r,u=oa.getComputedStyle(this,null).getPropertyValue(n);return u!==t&&(r=mu(u,t),function(t){this.style.setProperty(n,r(t),e)})})}var i=arguments.length;if(3>i){if("string"!=typeof n){2>i&&(t="");for(e in n)this.style(e,n[e],t);return this}e=""}return Zo(this,"style."+n,t,u)},Hl.styleTween=function(n,t,e){function r(r,u){var i=t.call(this,r,u,oa.getComputedStyle(this,null).getPropertyValue(n));return i&&function(t){this.style.setProperty(n,i(t),e)}}return arguments.length<3&&(e=""),this.tween("style."+n,r)},Hl.text=function(n){return Zo(this,"text",n,Vo)},Hl.remove=function(){var n=this.namespace;return this.each("end.transition",function(){var t;this[n].count<2&&(t=this.parentNode)&&t.removeChild(this)})},Hl.ease=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].ease:("function"!=typeof n&&(n=ta.ease.apply(ta,arguments)),H(this,function(r){r[e][t].ease=n}))},Hl.delay=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].delay:H(this,"function"==typeof n?function(r,u,i){r[e][t].delay=+n.call(r,r.__data__,u,i)}:(n=+n,function(r){r[e][t].delay=n}))},Hl.duration=function(n){var t=this.id,e=this.namespace;return arguments.length<1?this.node()[e][t].duration:H(this,"function"==typeof n?function(r,u,i){r[e][t].duration=Math.max(1,n.call(r,r.__data__,u,i))}:(n=Math.max(1,n),function(r){r[e][t].duration=n}))},Hl.each=function(n,t){var e=this.id,r=this.namespace;if(arguments.length<2){var u=jl,i=Ul;try{Ul=e,H(this,function(t,u,i){jl=t[r][e],n.call(t,t.__data__,u,i)})}finally{jl=u,Ul=i}}else H(this,function(u){var i=u[r][e];(i.event||(i.event=ta.dispatch("start","end","interrupt"))).on(n,t)});return this},Hl.transition=function(){for(var n,t,e,r,u=this.id,i=++Ol,o=this.namespace,a=[],c=0,l=this.length;l>c;c++){a.push(n=[]);for(var t=this[c],s=0,f=t.length;f>s;s++)(e=t[s])&&(r=e[o][u],$o(e,s,o,i,{time:r.time,ease:r.ease,delay:r.delay+r.duration,duration:r.duration})),n.push(e)}return Io(a,o,i)},ta.svg.axis=function(){function n(n){n.each(function(){var n,l=ta.select(this),s=this.__chart__||e,f=this.__chart__=e.copy(),h=null==c?f.ticks?f.ticks.apply(f,a):f.domain():c,g=null==t?f.tickFormat?f.tickFormat.apply(f,a):Et:t,p=l.selectAll(".tick").data(h,f),v=p.enter().insert("g",".domain").attr("class","tick").style("opacity",Ta),d=ta.transition(p.exit()).style("opacity",Ta).remove(),m=ta.transition(p.order()).style("opacity",1),y=Math.max(u,0)+o,M=Ui(f),x=l.selectAll(".domain").data([0]),b=(x.enter().append("path").attr("class","domain"),ta.transition(x));v.append("line"),v.append("text");var _,w,S,k,E=v.select("line"),A=m.select("line"),N=p.select("text").text(g),C=v.select("text"),z=m.select("text"),q="top"===r||"left"===r?-1:1;if("bottom"===r||"top"===r?(n=Bo,_="x",S="y",w="x2",k="y2",N.attr("dy",0>q?"0em":".71em").style("text-anchor","middle"),b.attr("d","M"+M[0]+","+q*i+"V0H"+M[1]+"V"+q*i)):(n=Wo,_="y",S="x",w="y2",k="x2",N.attr("dy",".32em").style("text-anchor",0>q?"end":"start"),b.attr("d","M"+q*i+","+M[0]+"H0V"+M[1]+"H"+q*i)),E.attr(k,q*u),C.attr(S,q*y),A.attr(w,0).attr(k,q*u),z.attr(_,0).attr(S,q*y),f.rangeBand){var L=f,T=L.rangeBand()/2;s=f=function(n){return L(n)+T}}else s.rangeBand?s=f:d.call(n,f,s);v.call(n,s,f),m.call(n,f,f)})}var t,e=ta.scale.linear(),r=Yl,u=6,i=6,o=3,a=[10],c=null;return n.scale=function(t){return arguments.length?(e=t,n):e},n.orient=function(t){return arguments.length?(r=t in Il?t+"":Yl,n):r},n.ticks=function(){return arguments.length?(a=arguments,n):a},n.tickValues=function(t){return arguments.length?(c=t,n):c},n.tickFormat=function(e){return arguments.length?(t=e,n):t},n.tickSize=function(t){var e=arguments.length;return e?(u=+t,i=+arguments[e-1],n):u},n.innerTickSize=function(t){return arguments.length?(u=+t,n):u},n.outerTickSize=function(t){return arguments.length?(i=+t,n):i},n.tickPadding=function(t){return arguments.length?(o=+t,n):o},n.tickSubdivide=function(){return arguments.length&&n},n};var Yl="bottom",Il={top:1,right:1,bottom:1,left:1};ta.svg.brush=function(){function n(i){i.each(function(){var i=ta.select(this).style("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush",u).on("touchstart.brush",u),o=i.selectAll(".background").data([0]);o.enter().append("rect").attr("class","background").style("visibility","hidden").style("cursor","crosshair"),i.selectAll(".extent").data([0]).enter().append("rect").attr("class","extent").style("cursor","move");var a=i.selectAll(".resize").data(p,Et);a.exit().remove(),a.enter().append("g").attr("class",function(n){return"resize "+n}).style("cursor",function(n){return Zl[n]}).append("rect").attr("x",function(n){return/[ew]$/.test(n)?-3:null}).attr("y",function(n){return/^[ns]/.test(n)?-3:null}).attr("width",6).attr("height",6).style("visibility","hidden"),a.style("display",n.empty()?"none":null);var s,f=ta.transition(i),h=ta.transition(o);c&&(s=Ui(c),h.attr("x",s[0]).attr("width",s[1]-s[0]),e(f)),l&&(s=Ui(l),h.attr("y",s[0]).attr("height",s[1]-s[0]),r(f)),t(f)})}function t(n){n.selectAll(".resize").attr("transform",function(n){return"translate("+s[+/e$/.test(n)]+","+f[+/^s/.test(n)]+")"})}function e(n){n.select(".extent").attr("x",s[0]),n.selectAll(".extent,.n>rect,.s>rect").attr("width",s[1]-s[0])}function r(n){n.select(".extent").attr("y",f[0]),n.selectAll(".extent,.e>rect,.w>rect").attr("height",f[1]-f[0])}function u(){function u(){32==ta.event.keyCode&&(N||(y=null,z[0]-=s[1],z[1]-=f[1],N=2),b())}function p(){32==ta.event.keyCode&&2==N&&(z[0]+=s[1],z[1]+=f[1],N=0,b())}function v(){var n=ta.mouse(x),u=!1;M&&(n[0]+=M[0],n[1]+=M[1]),N||(ta.event.altKey?(y||(y=[(s[0]+s[1])/2,(f[0]+f[1])/2]),z[0]=s[+(n[0]<y[0])],z[1]=f[+(n[1]<y[1])]):y=null),E&&d(n,c,0)&&(e(S),u=!0),A&&d(n,l,1)&&(r(S),u=!0),u&&(t(S),w({type:"brush",mode:N?"move":"resize"}))}function d(n,t,e){var r,u,a=Ui(t),c=a[0],l=a[1],p=z[e],v=e?f:s,d=v[1]-v[0];return N&&(c-=p,l-=d+p),r=(e?g:h)?Math.max(c,Math.min(l,n[e])):n[e],N?u=(r+=p)+d:(y&&(p=Math.max(c,Math.min(l,2*y[e]-r))),r>p?(u=r,r=p):u=p),v[0]!=r||v[1]!=u?(e?o=null:i=null,v[0]=r,v[1]=u,!0):void 0}function m(){v(),S.style("pointer-events","all").selectAll(".resize").style("display",n.empty()?"none":null),ta.select("body").style("cursor",null),q.on("mousemove.brush",null).on("mouseup.brush",null).on("touchmove.brush",null).on("touchend.brush",null).on("keydown.brush",null).on("keyup.brush",null),C(),w({type:"brushend"})}var y,M,x=this,_=ta.select(ta.event.target),w=a.of(x,arguments),S=ta.select(x),k=_.datum(),E=!/^(n|s)$/.test(k)&&c,A=!/^(e|w)$/.test(k)&&l,N=_.classed("extent"),C=X(),z=ta.mouse(x),q=ta.select(oa).on("keydown.brush",u).on("keyup.brush",p);if(ta.event.changedTouches?q.on("touchmove.brush",v).on("touchend.brush",m):q.on("mousemove.brush",v).on("mouseup.brush",m),S.interrupt().selectAll("*").interrupt(),N)z[0]=s[0]-z[0],z[1]=f[0]-z[1];else if(k){var L=+/w$/.test(k),T=+/^n/.test(k);M=[s[1-L]-z[0],f[1-T]-z[1]],z[0]=s[L],z[1]=f[T]}else ta.event.altKey&&(y=z.slice());S.style("pointer-events","none").selectAll(".resize").style("display",null),ta.select("body").style("cursor",_.style("cursor")),w({type:"brushstart"}),v()}var i,o,a=w(n,"brushstart","brush","brushend"),c=null,l=null,s=[0,0],f=[0,0],h=!0,g=!0,p=Vl[0];return n.event=function(n){n.each(function(){var n=a.of(this,arguments),t={x:s,y:f,i:i,j:o},e=this.__chart__||t;this.__chart__=t,Ul?ta.select(this).transition().each("start.brush",function(){i=e.i,o=e.j,s=e.x,f=e.y,n({type:"brushstart"})}).tween("brush:brush",function(){var e=yu(s,t.x),r=yu(f,t.y);return i=o=null,function(u){s=t.x=e(u),f=t.y=r(u),n({type:"brush",mode:"resize"})}}).each("end.brush",function(){i=t.i,o=t.j,n({type:"brush",mode:"resize"}),n({type:"brushend"})}):(n({type:"brushstart"}),n({type:"brush",mode:"resize"}),n({type:"brushend"}))})},n.x=function(t){return arguments.length?(c=t,p=Vl[!c<<1|!l],n):c},n.y=function(t){return arguments.length?(l=t,p=Vl[!c<<1|!l],n):l},n.clamp=function(t){return arguments.length?(c&&l?(h=!!t[0],g=!!t[1]):c?h=!!t:l&&(g=!!t),n):c&&l?[h,g]:c?h:l?g:null},n.extent=function(t){var e,r,u,a,h;return arguments.length?(c&&(e=t[0],r=t[1],l&&(e=e[0],r=r[0]),i=[e,r],c.invert&&(e=c(e),r=c(r)),e>r&&(h=e,e=r,r=h),(e!=s[0]||r!=s[1])&&(s=[e,r])),l&&(u=t[0],a=t[1],c&&(u=u[1],a=a[1]),o=[u,a],l.invert&&(u=l(u),a=l(a)),u>a&&(h=u,u=a,a=h),(u!=f[0]||a!=f[1])&&(f=[u,a])),n):(c&&(i?(e=i[0],r=i[1]):(e=s[0],r=s[1],c.invert&&(e=c.invert(e),r=c.invert(r)),e>r&&(h=e,e=r,r=h))),l&&(o?(u=o[0],a=o[1]):(u=f[0],a=f[1],l.invert&&(u=l.invert(u),a=l.invert(a)),u>a&&(h=u,u=a,a=h))),c&&l?[[e,u],[r,a]]:c?[e,r]:l&&[u,a])},n.clear=function(){return n.empty()||(s=[0,0],f=[0,0],i=o=null),n},n.empty=function(){return!!c&&s[0]==s[1]||!!l&&f[0]==f[1]},ta.rebind(n,a,"on")};var Zl={n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Vl=[["n","e","s","w","nw","ne","se","sw"],["e","w"],["n","s"],[]],Xl=fc.format=mc.timeFormat,$l=Xl.utc,Bl=$l("%Y-%m-%dT%H:%M:%S.%LZ");Xl.iso=Date.prototype.toISOString&&+new Date("2000-01-01T00:00:00.000Z")?Jo:Bl,Jo.parse=function(n){var t=new Date(n);return isNaN(t)?null:t},Jo.toString=Bl.toString,fc.second=Ft(function(n){return new hc(1e3*Math.floor(n/1e3))},function(n,t){n.setTime(n.getTime()+1e3*Math.floor(t))},function(n){return n.getSeconds()}),fc.seconds=fc.second.range,fc.seconds.utc=fc.second.utc.range,fc.minute=Ft(function(n){return new hc(6e4*Math.floor(n/6e4))},function(n,t){n.setTime(n.getTime()+6e4*Math.floor(t))},function(n){return n.getMinutes()}),fc.minutes=fc.minute.range,fc.minutes.utc=fc.minute.utc.range,fc.hour=Ft(function(n){var t=n.getTimezoneOffset()/60;return new hc(36e5*(Math.floor(n/36e5-t)+t))},function(n,t){n.setTime(n.getTime()+36e5*Math.floor(t))},function(n){return n.getHours()}),fc.hours=fc.hour.range,fc.hours.utc=fc.hour.utc.range,fc.month=Ft(function(n){return n=fc.day(n),n.setDate(1),n},function(n,t){n.setMonth(n.getMonth()+t)},function(n){return n.getMonth()}),fc.months=fc.month.range,fc.months.utc=fc.month.utc.range;var Wl=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5,1728e5,6048e5,2592e6,7776e6,31536e6],Jl=[[fc.second,1],[fc.second,5],[fc.second,15],[fc.second,30],[fc.minute,1],[fc.minute,5],[fc.minute,15],[fc.minute,30],[fc.hour,1],[fc.hour,3],[fc.hour,6],[fc.hour,12],[fc.day,1],[fc.day,2],[fc.week,1],[fc.month,1],[fc.month,3],[fc.year,1]],Gl=Xl.multi([[".%L",function(n){return n.getMilliseconds()}],[":%S",function(n){return n.getSeconds()}],["%I:%M",function(n){return n.getMinutes()}],["%I %p",function(n){return n.getHours()}],["%a %d",function(n){return n.getDay()&&1!=n.getDate()}],["%b %d",function(n){return 1!=n.getDate()}],["%B",function(n){return n.getMonth()}],["%Y",Ne]]),Kl={range:function(n,t,e){return ta.range(Math.ceil(n/e)*e,+t,e).map(Ko)},floor:Et,ceil:Et};Jl.year=fc.year,fc.scale=function(){return Go(ta.scale.linear(),Jl,Gl)};var Ql=Jl.map(function(n){return[n[0].utc,n[1]]}),ns=$l.multi([[".%L",function(n){return n.getUTCMilliseconds()}],[":%S",function(n){return n.getUTCSeconds()}],["%I:%M",function(n){return n.getUTCMinutes()}],["%I %p",function(n){return n.getUTCHours()}],["%a %d",function(n){return n.getUTCDay()&&1!=n.getUTCDate()}],["%b %d",function(n){return 1!=n.getUTCDate()}],["%B",function(n){return n.getUTCMonth()}],["%Y",Ne]]);Ql.year=fc.year.utc,fc.scale.utc=function(){return Go(ta.scale.linear(),Ql,ns)},ta.text=At(function(n){return n.responseText}),ta.json=function(n,t){return Nt(n,"application/json",Qo,t)},ta.html=function(n,t){return Nt(n,"text/html",na,t)},ta.xml=At(function(n){return n.responseXML}),"function"==typeof define&&define.amd?define(ta):"object"==typeof module&&module.exports&&(module.exports=ta),this.d3=ta}();
var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.writeScripts_(path);
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModuleFromUrl = function(url) {
    goog.retrieveAndExecModule_(url);
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined, declareLegacyNamespace:false};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function() {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = (doc.createElement("script"));
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function(pathToLoad) {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    visitNode(pathToLoad);
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in (obj)) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = (doc.createElement("SCRIPT"));
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "" && ch <= "�";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0;i < s.length;i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in (obj)) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in (obj) ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1;i < arguments.length;i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0;i < minLen;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.8.40";
cljs.core._STAR_unchecked_if_STAR_ = false;
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__13061__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__13061 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__13062__i = 0, G__13062__a = new Array(arguments.length - 0);
        while (G__13062__i < G__13062__a.length) {
          G__13062__a[G__13062__i] = arguments[G__13062__i + 0];
          ++G__13062__i;
        }
        args = new cljs.core.IndexedSeq(G__13062__a, 0);
      }
      return G__13061__delegate.call(this, args);
    };
    G__13061.cljs$lang$maxFixedArity = 0;
    G__13061.cljs$lang$applyTo = function(arglist__13063) {
      var args = cljs.core.seq(arglist__13063);
      return G__13061__delegate(args);
    };
    G__13061.cljs$core$IFn$_invoke$arity$variadic = G__13061__delegate;
    return G__13061;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__13064__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__13064 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__13065__i = 0, G__13065__a = new Array(arguments.length - 0);
        while (G__13065__i < G__13065__a.length) {
          G__13065__a[G__13065__i] = arguments[G__13065__i + 0];
          ++G__13065__i;
        }
        args = new cljs.core.IndexedSeq(G__13065__a, 0);
      }
      return G__13064__delegate.call(this, args);
    };
    G__13064.cljs$lang$maxFixedArity = 0;
    G__13064.cljs$lang$applyTo = function(arglist__13066) {
      var args = cljs.core.seq(arglist__13066);
      return G__13064__delegate(args);
    };
    G__13064.cljs$core$IFn$_invoke$arity$variadic = G__13064__delegate;
    return G__13064;
  }();
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__6198__auto__ = ty;
    if (cljs.core.truth_(and__6198__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__6198__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4655__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4655__auto__)) {
    var s = temp__4655__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1E9 + t[1]) / 1E6;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var args13067 = [];
  var len__7279__auto___13073 = arguments.length;
  var i__7280__auto___13074 = 0;
  while (true) {
    if (i__7280__auto___13074 < len__7279__auto___13073) {
      args13067.push(arguments[i__7280__auto___13074]);
      var G__13075 = i__7280__auto___13074 + 1;
      i__7280__auto___13074 = G__13075;
      continue;
    } else {
    }
    break;
  }
  var G__13072 = args13067.length;
  switch(G__13072) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13067.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(type, size, more_sizes) {
  var dims = more_sizes;
  var dimarray = new Array(size);
  var n__7124__auto___13077 = dimarray.length;
  var i_13078 = 0;
  while (true) {
    if (i_13078 < n__7124__auto___13077) {
      dimarray[i_13078] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, dims) : cljs.core.apply.call(null, cljs.core.make_array, null, dims);
      var G__13079 = i_13078 + 1;
      i_13078 = G__13079;
      continue;
    } else {
    }
    break;
  }
  return dimarray;
};
cljs.core.make_array.cljs$lang$applyTo = function(seq13068) {
  var G__13069 = cljs.core.first(seq13068);
  var seq13068__$1 = cljs.core.next(seq13068);
  var G__13070 = cljs.core.first(seq13068__$1);
  var seq13068__$2 = cljs.core.next(seq13068__$1);
  return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(G__13069, G__13070, seq13068__$2);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__7124__auto___13080 = len;
  var i_13081 = 0;
  while (true) {
    if (i_13081 < n__7124__auto___13080) {
      new_arr[i_13081] = arr[i_13081];
      var G__13082 = i_13081 + 1;
      i_13081 = G__13082;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__13083 = i + 1;
      i = G__13083;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget(var_args) {
  var args13084 = [];
  var len__7279__auto___13093 = arguments.length;
  var i__7280__auto___13094 = 0;
  while (true) {
    if (i__7280__auto___13094 < len__7279__auto___13093) {
      args13084.push(arguments[i__7280__auto___13094]);
      var G__13095 = i__7280__auto___13094 + 1;
      i__7280__auto___13094 = G__13095;
      continue;
    } else {
    }
    break;
  }
  var G__13089 = args13084.length;
  switch(G__13089) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13084.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__13090 = cljs.core.aget;
  var G__13091 = array[i];
  var G__13092 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__13090, G__13091, G__13092) : cljs.core.apply.call(null, G__13090, G__13091, G__13092);
};
cljs.core.aget.cljs$lang$applyTo = function(seq13085) {
  var G__13086 = cljs.core.first(seq13085);
  var seq13085__$1 = cljs.core.next(seq13085);
  var G__13087 = cljs.core.first(seq13085__$1);
  var seq13085__$2 = cljs.core.next(seq13085__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__13086, G__13087, seq13085__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var args13097 = [];
  var len__7279__auto___13108 = arguments.length;
  var i__7280__auto___13109 = 0;
  while (true) {
    if (i__7280__auto___13109 < len__7279__auto___13108) {
      args13097.push(arguments[i__7280__auto___13109]);
      var G__13110 = i__7280__auto___13109 + 1;
      i__7280__auto___13109 = G__13110;
      continue;
    } else {
    }
    break;
  }
  var G__13103 = args13097.length;
  switch(G__13103) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13097.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__13104 = cljs.core.aset;
  var G__13105 = array[idx];
  var G__13106 = idx2;
  var G__13107 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__13104, G__13105, G__13106, G__13107) : cljs.core.apply.call(null, G__13104, G__13105, G__13106, G__13107);
};
cljs.core.aset.cljs$lang$applyTo = function(seq13098) {
  var G__13099 = cljs.core.first(seq13098);
  var seq13098__$1 = cljs.core.next(seq13098);
  var G__13100 = cljs.core.first(seq13098__$1);
  var seq13098__$2 = cljs.core.next(seq13098__$1);
  var G__13101 = cljs.core.first(seq13098__$2);
  var seq13098__$3 = cljs.core.next(seq13098__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__13099, G__13100, G__13101, seq13098__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var args13112 = [];
  var len__7279__auto___13118 = arguments.length;
  var i__7280__auto___13119 = 0;
  while (true) {
    if (i__7280__auto___13119 < len__7279__auto___13118) {
      args13112.push(arguments[i__7280__auto___13119]);
      var G__13120 = i__7280__auto___13119 + 1;
      i__7280__auto___13119 = G__13120;
      continue;
    } else {
    }
    break;
  }
  var G__13114 = args13112.length;
  switch(G__13114) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13112.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__13115 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__13116 = [];
  var G__13117 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__13115, G__13116, G__13117) : cljs.core.reduce.call(null, G__13115, G__13116, G__13117);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___13125 = arguments.length;
  var i__7280__auto___13126 = 0;
  while (true) {
    if (i__7280__auto___13126 < len__7279__auto___13125) {
      args__7286__auto__.push(arguments[i__7280__auto___13126]);
      var G__13127 = i__7280__auto___13126 + 1;
      i__7280__auto___13126 = G__13127;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 2 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7287__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq13122) {
  var G__13123 = cljs.core.first(seq13122);
  var seq13122__$1 = cljs.core.next(seq13122);
  var G__13124 = cljs.core.first(seq13122__$1);
  var seq13122__$2 = cljs.core.next(seq13122__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__13123, G__13124, seq13122__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var args13128 = [];
  var len__7279__auto___13131 = arguments.length;
  var i__7280__auto___13132 = 0;
  while (true) {
    if (i__7280__auto___13132 < len__7279__auto___13131) {
      args13128.push(arguments[i__7280__auto___13132]);
      var G__13133 = i__7280__auto___13132 + 1;
      i__7280__auto___13132 = G__13133;
      continue;
    } else {
    }
    break;
  }
  var G__13130 = args13128.length;
  switch(G__13130) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13128.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__6874__auto__.call(null, this$);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__6874__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__6874__auto__.call(null, this$, a);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__6874__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__6874__auto__.call(null, this$, a, b);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__6874__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$4 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__6874__auto__.call(null, this$, a, b, c);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__6874__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$5 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__6874__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__6874__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$6 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__6874__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__6874__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$7 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__6874__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$8 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$9 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$10 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$11 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$12 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$13 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$14 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$15 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$16 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$17 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$18 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$19 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$20 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$21 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$22 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__6873__auto__ = value == null ? null : value;
    var m__6874__auto__ = cljs.core._clone[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__6874__auto__.call(null, value);
    } else {
      var m__6874__auto____$1 = cljs.core._clone["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__6874__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._count[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._count["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._empty[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._empty["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._conj[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__6874__auto__.call(null, coll, o);
    } else {
      var m__6874__auto____$1 = cljs.core._conj["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__6874__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var args13135 = [];
  var len__7279__auto___13138 = arguments.length;
  var i__7280__auto___13139 = 0;
  while (true) {
    if (i__7280__auto___13139 < len__7279__auto___13138) {
      args13135.push(arguments[i__7280__auto___13139]);
      var G__13140 = i__7280__auto___13139 + 1;
      i__7280__auto___13139 = G__13140;
      continue;
    } else {
    }
    break;
  }
  var G__13137 = args13135.length;
  switch(G__13137) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13135.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._nth[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__6874__auto__.call(null, coll, n);
    } else {
      var m__6874__auto____$1 = cljs.core._nth["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__6874__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._nth[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__6874__auto__.call(null, coll, n, not_found);
    } else {
      var m__6874__auto____$1 = cljs.core._nth["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__6874__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._first[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._first["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._rest[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._rest["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._next[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._next["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var args13142 = [];
  var len__7279__auto___13145 = arguments.length;
  var i__7280__auto___13146 = 0;
  while (true) {
    if (i__7280__auto___13146 < len__7279__auto___13145) {
      args13142.push(arguments[i__7280__auto___13146]);
      var G__13147 = i__7280__auto___13146 + 1;
      i__7280__auto___13146 = G__13147;
      continue;
    } else {
    }
    break;
  }
  var G__13144 = args13142.length;
  switch(G__13144) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13142.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._lookup[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__6874__auto__.call(null, o, k);
    } else {
      var m__6874__auto____$1 = cljs.core._lookup["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__6874__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._lookup[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__6874__auto__.call(null, o, k, not_found);
    } else {
      var m__6874__auto____$1 = cljs.core._lookup["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__6874__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__6874__auto__.call(null, coll, k);
    } else {
      var m__6874__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__6874__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._assoc[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__6874__auto__.call(null, coll, k, v);
    } else {
      var m__6874__auto____$1 = cljs.core._assoc["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__6874__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._dissoc[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__6874__auto__.call(null, coll, k);
    } else {
      var m__6874__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__6874__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._key[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._key["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._val[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._val["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._disjoin[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__6874__auto__.call(null, coll, v);
    } else {
      var m__6874__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__6874__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._peek[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._peek["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._pop[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._pop["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._assoc_n[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__6874__auto__.call(null, coll, n, val);
    } else {
      var m__6874__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__6874__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._deref[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto__.call(null, o);
    } else {
      var m__6874__auto____$1 = cljs.core._deref["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__6874__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__6874__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__6874__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._meta[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto__.call(null, o);
    } else {
      var m__6874__auto____$1 = cljs.core._meta["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._with_meta[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__6874__auto__.call(null, o, meta);
    } else {
      var m__6874__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__6874__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var args13149 = [];
  var len__7279__auto___13152 = arguments.length;
  var i__7280__auto___13153 = 0;
  while (true) {
    if (i__7280__auto___13153 < len__7279__auto___13152) {
      args13149.push(arguments[i__7280__auto___13153]);
      var G__13154 = i__7280__auto___13153 + 1;
      i__7280__auto___13153 = G__13154;
      continue;
    } else {
    }
    break;
  }
  var G__13151 = args13149.length;
  switch(G__13151) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13149.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._reduce[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__6874__auto__.call(null, coll, f);
    } else {
      var m__6874__auto____$1 = cljs.core._reduce["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__6874__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._reduce[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__6874__auto__.call(null, coll, f, start);
    } else {
      var m__6874__auto____$1 = cljs.core._reduce["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__6874__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._kv_reduce[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__6874__auto__.call(null, coll, f, init);
    } else {
      var m__6874__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__6874__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._equiv[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__6874__auto__.call(null, o, other);
    } else {
      var m__6874__auto____$1 = cljs.core._equiv["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__6874__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._hash[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto__.call(null, o);
    } else {
      var m__6874__auto____$1 = cljs.core._hash["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._seq[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto__.call(null, o);
    } else {
      var m__6874__auto____$1 = cljs.core._seq["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._rseq[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._rseq["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._sorted_seq[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__6874__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__6874__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__6874__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__6874__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__6874__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__6874__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._entry_key[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__6874__auto__.call(null, coll, entry);
    } else {
      var m__6874__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__6874__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._comparator[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._comparator["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__6873__auto__ = writer == null ? null : writer;
    var m__6874__auto__ = cljs.core._write[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__6874__auto__.call(null, writer, s);
    } else {
      var m__6874__auto____$1 = cljs.core._write["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__6874__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__6873__auto__ = writer == null ? null : writer;
    var m__6874__auto__ = cljs.core._flush[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__6874__auto__.call(null, writer);
    } else {
      var m__6874__auto____$1 = cljs.core._flush["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__6874__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._pr_writer[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__6874__auto__.call(null, o, writer, opts);
    } else {
      var m__6874__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__6874__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(x) {
  if (!(x == null) && !(x.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto__.call(null, x);
    } else {
      var m__6874__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", x);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._notify_watches[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__6874__auto__.call(null, this$, oldval, newval);
    } else {
      var m__6874__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__6874__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._add_watch[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__6874__auto__.call(null, this$, key, f);
    } else {
      var m__6874__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__6874__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._remove_watch[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__6874__auto__.call(null, this$, key);
    } else {
      var m__6874__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__6874__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._as_transient[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__6874__auto__.call(null, tcoll, val);
    } else {
      var m__6874__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__6874__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__6874__auto__.call(null, tcoll);
    } else {
      var m__6874__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__6874__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__6874__auto__.call(null, tcoll, key, val);
    } else {
      var m__6874__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__6874__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__6874__auto__.call(null, tcoll, key);
    } else {
      var m__6874__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__6874__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__6874__auto__.call(null, tcoll, n, val);
    } else {
      var m__6874__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__6874__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__6874__auto__.call(null, tcoll);
    } else {
      var m__6874__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__6874__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__6874__auto__.call(null, tcoll, v);
    } else {
      var m__6874__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__6874__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._compare[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__6874__auto__.call(null, x, y);
    } else {
      var m__6874__auto____$1 = cljs.core._compare["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__6874__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._drop_first[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._chunked_first[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._chunked_rest[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._chunked_next[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._name[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto__.call(null, x);
    } else {
      var m__6874__auto____$1 = cljs.core._name["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._namespace[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto__.call(null, x);
    } else {
      var m__6874__auto____$1 = cljs.core._namespace["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__6874__auto__.call(null, o, new_value);
    } else {
      var m__6874__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__6874__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var args13156 = [];
  var len__7279__auto___13159 = arguments.length;
  var i__7280__auto___13160 = 0;
  while (true) {
    if (i__7280__auto___13160 < len__7279__auto___13159) {
      args13156.push(arguments[i__7280__auto___13160]);
      var G__13161 = i__7280__auto___13160 + 1;
      i__7280__auto___13160 = G__13161;
      continue;
    } else {
    }
    break;
  }
  var G__13158 = args13156.length;
  switch(G__13158) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13156.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__6874__auto__.call(null, o, f);
    } else {
      var m__6874__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__6874__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__6874__auto__.call(null, o, f, a);
    } else {
      var m__6874__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__6874__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$4 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__6874__auto__.call(null, o, f, a, b);
    } else {
      var m__6874__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__6874__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$5 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__6874__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__6874__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__6874__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__6874__auto__.call(null, o, new_value);
    } else {
      var m__6874__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__6874__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._iterator[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._iterator["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  return h1__$6 ^ h1__$6 >>> 16;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__13163 = i + 2;
        var G__13164 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__13163;
        h1 = G__13164;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__13167 = i + 1;
          var G__13168 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__13167;
          hash = G__13168;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      if (cljs.core.truth_(isFinite(o))) {
        return Math.floor(o) % 2147483647;
      } else {
        var G__13176 = o;
        switch(G__13176) {
          case Infinity:
            return 2146435072;
            break;
          case -Infinity:
            return -1048576;
            break;
          default:
            return 2146959360;
        }
      }
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(c, x) {
  return x instanceof c;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = cljs.core.not(a.ns);
      if (and__6198__auto__) {
        return b.ns;
      } else {
        return and__6198__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__13184 = a.ns;
            var G__13185 = b.ns;
            return goog.array.defaultCompare(G__13184, G__13185);
          }();
          if (0 === nsc) {
            var G__13186 = a.name;
            var G__13187 = b.name;
            return goog.array.defaultCompare(G__13186, G__13187);
          } else {
            return nsc;
          }
        }
      } else {
        var G__13188 = a.name;
        var G__13189 = b.name;
        return goog.array.defaultCompare(G__13188, G__13189);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__13191 = null;
  var G__13191__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__13191__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__13191 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13191__2.call(this, self__, coll);
      case 3:
        return G__13191__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13191.cljs$core$IFn$_invoke$arity$2 = G__13191__2;
  G__13191.cljs$core$IFn$_invoke$arity$3 = G__13191__3;
  return G__13191;
}();
cljs.core.Symbol.prototype.apply = function(self__, args13190) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13190)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__6645__auto__ = self__._hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var args13192 = [];
  var len__7279__auto___13195 = arguments.length;
  var i__7280__auto___13196 = 0;
  while (true) {
    if (i__7280__auto___13196 < len__7279__auto___13195) {
      args13192.push(arguments[i__7280__auto___13196]);
      var G__13197 = i__7280__auto___13196 + 1;
      i__7280__auto___13196 = G__13197;
      continue;
    } else {
    }
    break;
  }
  var G__13194 = args13192.length;
  switch(G__13194) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13192.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx < 1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2523137;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__13200 = this$__$1.sym;
    var G__13201 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__13200, G__13201) : cljs.core._EQ_.call(null, G__13200, G__13201);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__13246 = null;
  var G__13246__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__13246__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__13246__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__13246__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__13246__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__13246__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__13246__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__13246__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__13246__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__13246__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__13246__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__13246__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__13246__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__13246__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__13246__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__13246__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__13246__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__13246__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__13246__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__13246__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__13246__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__13246__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13202 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__13203 = a;
    var G__13204 = b;
    var G__13205 = c;
    var G__13206 = d;
    var G__13207 = e;
    var G__13208 = f;
    var G__13209 = g;
    var G__13210 = h;
    var G__13211 = i;
    var G__13212 = j;
    var G__13213 = k;
    var G__13214 = l;
    var G__13215 = m;
    var G__13216 = n;
    var G__13217 = o;
    var G__13218 = p;
    var G__13219 = q;
    var G__13220 = r;
    var G__13221 = s;
    var G__13222 = t;
    var G__13223 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13202, G__13203, G__13204, G__13205, G__13206, G__13207, G__13208, G__13209, G__13210, G__13211, G__13212, G__13213, G__13214, G__13215, G__13216, G__13217, G__13218, G__13219, G__13220, G__13221, G__13222, G__13223) : cljs.core.apply.call(null, G__13202, G__13203, G__13204, G__13205, G__13206, G__13207, G__13208, G__13209, G__13210, G__13211, G__13212, G__13213, G__13214, G__13215, G__13216, 
    G__13217, G__13218, G__13219, G__13220, G__13221, G__13222, G__13223);
  };
  G__13246 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__13246__1.call(this, self__);
      case 2:
        return G__13246__2.call(this, self__, a);
      case 3:
        return G__13246__3.call(this, self__, a, b);
      case 4:
        return G__13246__4.call(this, self__, a, b, c);
      case 5:
        return G__13246__5.call(this, self__, a, b, c, d);
      case 6:
        return G__13246__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__13246__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__13246__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__13246__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__13246__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__13246__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__13246__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__13246__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__13246__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__13246__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__13246__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__13246__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__13246__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__13246__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__13246__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__13246__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__13246__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13246.cljs$core$IFn$_invoke$arity$1 = G__13246__1;
  G__13246.cljs$core$IFn$_invoke$arity$2 = G__13246__2;
  G__13246.cljs$core$IFn$_invoke$arity$3 = G__13246__3;
  G__13246.cljs$core$IFn$_invoke$arity$4 = G__13246__4;
  G__13246.cljs$core$IFn$_invoke$arity$5 = G__13246__5;
  G__13246.cljs$core$IFn$_invoke$arity$6 = G__13246__6;
  G__13246.cljs$core$IFn$_invoke$arity$7 = G__13246__7;
  G__13246.cljs$core$IFn$_invoke$arity$8 = G__13246__8;
  G__13246.cljs$core$IFn$_invoke$arity$9 = G__13246__9;
  G__13246.cljs$core$IFn$_invoke$arity$10 = G__13246__10;
  G__13246.cljs$core$IFn$_invoke$arity$11 = G__13246__11;
  G__13246.cljs$core$IFn$_invoke$arity$12 = G__13246__12;
  G__13246.cljs$core$IFn$_invoke$arity$13 = G__13246__13;
  G__13246.cljs$core$IFn$_invoke$arity$14 = G__13246__14;
  G__13246.cljs$core$IFn$_invoke$arity$15 = G__13246__15;
  G__13246.cljs$core$IFn$_invoke$arity$16 = G__13246__16;
  G__13246.cljs$core$IFn$_invoke$arity$17 = G__13246__17;
  G__13246.cljs$core$IFn$_invoke$arity$18 = G__13246__18;
  G__13246.cljs$core$IFn$_invoke$arity$19 = G__13246__19;
  G__13246.cljs$core$IFn$_invoke$arity$20 = G__13246__20;
  G__13246.cljs$core$IFn$_invoke$arity$21 = G__13246__21;
  G__13246.cljs$core$IFn$_invoke$arity$22 = G__13246__22;
  return G__13246;
}();
cljs.core.Var.prototype.apply = function(self__, args13199) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13199)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__13224 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__13225 = a;
  var G__13226 = b;
  var G__13227 = c;
  var G__13228 = d;
  var G__13229 = e;
  var G__13230 = f;
  var G__13231 = g;
  var G__13232 = h;
  var G__13233 = i;
  var G__13234 = j;
  var G__13235 = k;
  var G__13236 = l;
  var G__13237 = m;
  var G__13238 = n;
  var G__13239 = o;
  var G__13240 = p;
  var G__13241 = q;
  var G__13242 = r;
  var G__13243 = s;
  var G__13244 = t;
  var G__13245 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13224, G__13225, G__13226, G__13227, G__13228, G__13229, G__13230, G__13231, G__13232, G__13233, G__13234, G__13235, G__13236, G__13237, G__13238, G__13239, G__13240, G__13241, G__13242, G__13243, G__13244, G__13245) : cljs.core.apply.call(null, G__13224, G__13225, G__13226, G__13227, G__13228, G__13229, G__13230, G__13231, G__13232, G__13233, G__13234, G__13235, G__13236, G__13237, G__13238, 
  G__13239, G__13240, G__13241, G__13242, G__13243, G__13244, G__13245);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0, null);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0, null);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var args13259 = [];
  var len__7279__auto___13265 = arguments.length;
  var i__7280__auto___13266 = 0;
  while (true) {
    if (i__7280__auto___13266 < len__7279__auto___13265) {
      args13259.push(arguments[i__7280__auto___13266]);
      var G__13267 = i__7280__auto___13266 + 1;
      i__7280__auto___13266 = G__13267;
      continue;
    } else {
    }
    break;
  }
  var G__13264 = args13259.length;
  switch(G__13264) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13259.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__13269 = y;
        var G__13270 = cljs.core.first(more);
        var G__13271 = cljs.core.next(more);
        x = G__13269;
        y = G__13270;
        more = G__13271;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq13260) {
  var G__13261 = cljs.core.first(seq13260);
  var seq13260__$1 = cljs.core.next(seq13260);
  var G__13262 = cljs.core.first(seq13260__$1);
  var seq13260__$2 = cljs.core.next(seq13260__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__13261, G__13262, seq13260__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__13272 = n + 1;
      var G__13273 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__13274 = cljs.core.next(coll__$1);
      n = G__13272;
      hash_code = G__13273;
      coll__$1 = G__13274;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__13275 = n + 1;
      var G__13276 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__13277 = cljs.core.next(coll__$1);
      n = G__13275;
      hash_code = G__13276;
      coll__$1 = G__13277;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__13278 = this$__$1.valueOf();
    var G__13279 = other.valueOf();
    return goog.array.defaultCompare(G__13278, G__13279);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var args13280 = [];
  var len__7279__auto___13289 = arguments.length;
  var i__7280__auto___13290 = 0;
  while (true) {
    if (i__7280__auto___13290 < len__7279__auto___13289) {
      args13280.push(arguments[i__7280__auto___13290]);
      var G__13291 = i__7280__auto___13290 + 1;
      i__7280__auto___13290 = G__13291;
      continue;
    } else {
    }
    break;
  }
  var G__13282 = args13280.length;
  switch(G__13282) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13280.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__13283 = val;
          var G__13284 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13283, G__13284) : f.call(null, G__13283, G__13284);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__13293 = nval;
          var G__13294 = n + 1;
          val = G__13293;
          n = G__13294;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__13285 = val__$1;
        var G__13286 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13285, G__13286) : f.call(null, G__13285, G__13286);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__13295 = nval;
        var G__13296 = n + 1;
        val__$1 = G__13295;
        n = G__13296;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__13287 = val__$1;
        var G__13288 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13287, G__13288) : f.call(null, G__13287, G__13288);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__13297 = nval;
        var G__13298 = n + 1;
        val__$1 = G__13297;
        n = G__13298;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var args13299 = [];
  var len__7279__auto___13308 = arguments.length;
  var i__7280__auto___13309 = 0;
  while (true) {
    if (i__7280__auto___13309 < len__7279__auto___13308) {
      args13299.push(arguments[i__7280__auto___13309]);
      var G__13310 = i__7280__auto___13309 + 1;
      i__7280__auto___13309 = G__13310;
      continue;
    } else {
    }
    break;
  }
  var G__13301 = args13299.length;
  switch(G__13301) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13299.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__13302 = val;
          var G__13303 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13302, G__13303) : f.call(null, G__13302, G__13303);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__13312 = nval;
          var G__13313 = n + 1;
          val = G__13312;
          n = G__13313;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__13304 = val__$1;
        var G__13305 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13304, G__13305) : f.call(null, G__13304, G__13305);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__13314 = nval;
        var G__13315 = n + 1;
        val__$1 = G__13314;
        n = G__13315;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__13306 = val__$1;
        var G__13307 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13306, G__13307) : f.call(null, G__13306, G__13307);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__13316 = nval;
        var G__13317 = n + 1;
        val__$1 = G__13316;
        n = G__13317;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core._indexOf = function cljs$core$_indexOf(var_args) {
  var args13322 = [];
  var len__7279__auto___13325 = arguments.length;
  var i__7280__auto___13326 = 0;
  while (true) {
    if (i__7280__auto___13326 < len__7279__auto___13325) {
      args13322.push(arguments[i__7280__auto___13326]);
      var G__13327 = i__7280__auto___13326 + 1;
      i__7280__auto___13326 = G__13327;
      continue;
    } else {
    }
    break;
  }
  var G__13324 = args13322.length;
  switch(G__13324) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13322.length)].join(""));;
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (start >= len) {
    return -1;
  } else {
    var idx = start > 0 ? start : start < 0 ? function() {
      var x__6541__auto__ = 0;
      var y__6542__auto__ = start + len;
      return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
    }() : start;
    while (true) {
      if (idx < len) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__13329 = idx + 1;
          idx = G__13329;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function cljs$core$_lastIndexOf(var_args) {
  var args13330 = [];
  var len__7279__auto___13333 = arguments.length;
  var i__7280__auto___13334 = 0;
  while (true) {
    if (i__7280__auto___13334 < len__7279__auto___13333) {
      args13330.push(arguments[i__7280__auto___13334]);
      var G__13335 = i__7280__auto___13334 + 1;
      i__7280__auto___13334 = G__13335;
      continue;
    } else {
    }
    break;
  }
  var G__13332 = args13330.length;
  switch(G__13332) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13330.length)].join(""));;
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (len === 0) {
    return -1;
  } else {
    var idx = start > 0 ? function() {
      var x__6548__auto__ = len - 1;
      var y__6549__auto__ = start;
      return x__6548__auto__ < y__6549__auto__ ? x__6548__auto__ : y__6549__auto__;
    }() : start < 0 ? len + start : start;
    while (true) {
      if (idx >= 0) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__13337 = idx - 1;
          idx = G__13337;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i, meta) {
  this.arr = arr;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var G__13338 = null;
  var G__13338__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13338__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13338 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13338__1.call(this, x);
      case 2:
        return G__13338__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13338.cljs$core$IFn$_invoke$arity$1 = G__13338__1;
  G__13338.cljs$core$IFn$_invoke$arity$2 = G__13338__2;
  return G__13338;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var G__13339 = null;
  var G__13339__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__13339__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13339 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13339__1.call(this, x);
      case 2:
        return G__13339__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13339.cljs$core$IFn$_invoke$arity$1 = G__13339__1;
  G__13339.cljs$core$IFn$_invoke$arity$2 = G__13339__2;
  return G__13339;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, self__.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__6541__auto__ = 0;
  var y__6542__auto__ = self__.arr.length - self__.i;
  return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, new_meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i, meta) {
  return new cljs.core.IndexedSeq(arr, i, meta);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var args13340 = [];
  var len__7279__auto___13343 = arguments.length;
  var i__7280__auto___13344 = 0;
  while (true) {
    if (i__7280__auto___13344 < len__7279__auto___13343) {
      args13340.push(arguments[i__7280__auto___13344]);
      var G__13345 = i__7280__auto___13344 + 1;
      i__7280__auto___13344 = G__13345;
      continue;
    } else {
    }
    break;
  }
  var G__13342 = args13340.length;
  switch(G__13342) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13340.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i, null);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var args13347 = [];
  var len__7279__auto___13350 = arguments.length;
  var i__7280__auto___13351 = 0;
  while (true) {
    if (i__7280__auto___13351 < len__7279__auto___13350) {
      args13347.push(arguments[i__7280__auto___13351]);
      var G__13352 = i__7280__auto___13351 + 1;
      i__7280__auto___13351 = G__13352;
      continue;
    } else {
    }
    break;
  }
  var G__13349 = args13347.length;
  switch(G__13349) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13347.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var G__13356 = null;
  var G__13356__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13356__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13356 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13356__1.call(this, x);
      case 2:
        return G__13356__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13356.cljs$core$IFn$_invoke$arity$1 = G__13356__1;
  G__13356.cljs$core$IFn$_invoke$arity$2 = G__13356__2;
  return G__13356;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var G__13357 = null;
  var G__13357__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__13357__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13357 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13357__1.call(this, x);
      case 2:
        return G__13357__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13357.cljs$core$IFn$_invoke$arity$1 = G__13357__1;
  G__13357.cljs$core$IFn$_invoke$arity$2 = G__13357__2;
  return G__13357;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__13354 = cljs.core.List.EMPTY;
  var G__13355 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__13354, G__13355) : cljs.core.with_meta.call(null, G__13354, G__13355);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__13358 = sn;
      s = G__13358;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj(var_args) {
  var args13359 = [];
  var len__7279__auto___13365 = arguments.length;
  var i__7280__auto___13366 = 0;
  while (true) {
    if (i__7280__auto___13366 < len__7279__auto___13365) {
      args13359.push(arguments[i__7280__auto___13366]);
      var G__13367 = i__7280__auto___13366 + 1;
      i__7280__auto___13366 = G__13367;
      continue;
    } else {
    }
    break;
  }
  var G__13364 = args13359.length;
  switch(G__13364) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13359.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__13369 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__13370 = cljs.core.first(xs);
      var G__13371 = cljs.core.next(xs);
      coll = G__13369;
      x = G__13370;
      xs = G__13371;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq13360) {
  var G__13361 = cljs.core.first(seq13360);
  var seq13360__$1 = cljs.core.next(seq13360);
  var G__13362 = cljs.core.first(seq13360__$1);
  var seq13360__$2 = cljs.core.next(seq13360__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__13361, G__13362, seq13360__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__13372 = cljs.core.next(s);
      var G__13373 = acc + 1;
      s = G__13372;
      acc = G__13373;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var args13378 = [];
  var len__7279__auto___13381 = arguments.length;
  var i__7280__auto___13382 = 0;
  while (true) {
    if (i__7280__auto___13382 < len__7279__auto___13381) {
      args13378.push(arguments[i__7280__auto___13382]);
      var G__13383 = i__7280__auto___13382 + 1;
      i__7280__auto___13382 = G__13383;
      continue;
    } else {
    }
    break;
  }
  var G__13380 = args13378.length;
  switch(G__13380) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13378.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__13385 = cljs.core.next(coll);
            var G__13386 = n - 1;
            coll = G__13385;
            n = G__13386;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__13387 = cljs.core.next(coll);
            var G__13388 = n - 1;
            var G__13389 = not_found;
            coll = G__13387;
            n = G__13388;
            not_found = G__13389;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var args13390 = [];
  var len__7279__auto___13397 = arguments.length;
  var i__7280__auto___13398 = 0;
  while (true) {
    if (i__7280__auto___13398 < len__7279__auto___13397) {
      args13390.push(arguments[i__7280__auto___13398]);
      var G__13399 = i__7280__auto___13398 + 1;
      i__7280__auto___13398 = G__13399;
      continue;
    } else {
    }
    break;
  }
  var G__13392 = args13390.length;
  switch(G__13392) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13390.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__13401 = n__$1 - 1;
      var G__13402 = cljs.core.rest(xs);
      n__$1 = G__13401;
      xs = G__13402;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var args13403 = [];
  var len__7279__auto___13408 = arguments.length;
  var i__7280__auto___13409 = 0;
  while (true) {
    if (i__7280__auto___13409 < len__7279__auto___13408) {
      args13403.push(arguments[i__7280__auto___13409]);
      var G__13410 = i__7280__auto___13409 + 1;
      i__7280__auto___13409 = G__13410;
      continue;
    } else {
    }
    break;
  }
  var G__13405 = args13403.length;
  switch(G__13405) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13403.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var args13412 = [];
  var len__7279__auto___13419 = arguments.length;
  var i__7280__auto___13420 = 0;
  while (true) {
    if (i__7280__auto___13420 < len__7279__auto___13419) {
      args13412.push(arguments[i__7280__auto___13420]);
      var G__13421 = i__7280__auto___13420 + 1;
      i__7280__auto___13420 = G__13421;
      continue;
    } else {
    }
    break;
  }
  var G__13418 = args13412.length;
  switch(G__13418) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13412.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__13423 = ret;
      var G__13424 = cljs.core.first(kvs);
      var G__13425 = cljs.core.second(kvs);
      var G__13426 = cljs.core.nnext(kvs);
      coll = G__13423;
      k = G__13424;
      v = G__13425;
      kvs = G__13426;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq13413) {
  var G__13414 = cljs.core.first(seq13413);
  var seq13413__$1 = cljs.core.next(seq13413);
  var G__13415 = cljs.core.first(seq13413__$1);
  var seq13413__$2 = cljs.core.next(seq13413__$1);
  var G__13416 = cljs.core.first(seq13413__$2);
  var seq13413__$3 = cljs.core.next(seq13413__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__13414, G__13415, G__13416, seq13413__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var args13427 = [];
  var len__7279__auto___13433 = arguments.length;
  var i__7280__auto___13434 = 0;
  while (true) {
    if (i__7280__auto___13434 < len__7279__auto___13433) {
      args13427.push(arguments[i__7280__auto___13434]);
      var G__13435 = i__7280__auto___13434 + 1;
      i__7280__auto___13434 = G__13435;
      continue;
    } else {
    }
    break;
  }
  var G__13432 = args13427.length;
  switch(G__13432) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13427.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__13437 = ret;
        var G__13438 = cljs.core.first(ks);
        var G__13439 = cljs.core.next(ks);
        coll = G__13437;
        k = G__13438;
        ks = G__13439;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq13428) {
  var G__13429 = cljs.core.first(seq13428);
  var seq13428__$1 = cljs.core.next(seq13428);
  var G__13430 = cljs.core.first(seq13428__$1);
  var seq13428__$2 = cljs.core.next(seq13428__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__13429, G__13430, seq13428__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__6210__auto__ = goog.isFunction(f);
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__13445 = null;
  var G__13445__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__13445__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__13445__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__13445__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__13445__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__13445__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__13445__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__13445__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__13445__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__13445__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__13445__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__13445__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__13445__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__13445__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__13445__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__13445__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__13445__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__13445__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__13445__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__13445__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__13445__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__13445__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__13445 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__13445__1.call(this, self__);
      case 2:
        return G__13445__2.call(this, self__, a);
      case 3:
        return G__13445__3.call(this, self__, a, b);
      case 4:
        return G__13445__4.call(this, self__, a, b, c);
      case 5:
        return G__13445__5.call(this, self__, a, b, c, d);
      case 6:
        return G__13445__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__13445__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__13445__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__13445__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__13445__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__13445__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__13445__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__13445__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__13445__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__13445__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__13445__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__13445__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__13445__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__13445__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__13445__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__13445__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__13445__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13445.cljs$core$IFn$_invoke$arity$1 = G__13445__1;
  G__13445.cljs$core$IFn$_invoke$arity$2 = G__13445__2;
  G__13445.cljs$core$IFn$_invoke$arity$3 = G__13445__3;
  G__13445.cljs$core$IFn$_invoke$arity$4 = G__13445__4;
  G__13445.cljs$core$IFn$_invoke$arity$5 = G__13445__5;
  G__13445.cljs$core$IFn$_invoke$arity$6 = G__13445__6;
  G__13445.cljs$core$IFn$_invoke$arity$7 = G__13445__7;
  G__13445.cljs$core$IFn$_invoke$arity$8 = G__13445__8;
  G__13445.cljs$core$IFn$_invoke$arity$9 = G__13445__9;
  G__13445.cljs$core$IFn$_invoke$arity$10 = G__13445__10;
  G__13445.cljs$core$IFn$_invoke$arity$11 = G__13445__11;
  G__13445.cljs$core$IFn$_invoke$arity$12 = G__13445__12;
  G__13445.cljs$core$IFn$_invoke$arity$13 = G__13445__13;
  G__13445.cljs$core$IFn$_invoke$arity$14 = G__13445__14;
  G__13445.cljs$core$IFn$_invoke$arity$15 = G__13445__15;
  G__13445.cljs$core$IFn$_invoke$arity$16 = G__13445__16;
  G__13445.cljs$core$IFn$_invoke$arity$17 = G__13445__17;
  G__13445.cljs$core$IFn$_invoke$arity$18 = G__13445__18;
  G__13445.cljs$core$IFn$_invoke$arity$19 = G__13445__19;
  G__13445.cljs$core$IFn$_invoke$arity$20 = G__13445__20;
  G__13445.cljs$core$IFn$_invoke$arity$21 = G__13445__21;
  G__13445.cljs$core$IFn$_invoke$arity$22 = G__13445__22;
  return G__13445;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args13444) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13444)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__6198__auto__ = !(o == null);
    if (and__6198__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__6198__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var args13450 = [];
  var len__7279__auto___13456 = arguments.length;
  var i__7280__auto___13457 = 0;
  while (true) {
    if (i__7280__auto___13457 < len__7279__auto___13456) {
      args13450.push(arguments[i__7280__auto___13457]);
      var G__13458 = i__7280__auto___13457 + 1;
      i__7280__auto___13457 = G__13458;
      continue;
    } else {
    }
    break;
  }
  var G__13455 = args13450.length;
  switch(G__13455) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13450.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__13460 = ret;
        var G__13461 = cljs.core.first(ks);
        var G__13462 = cljs.core.next(ks);
        coll = G__13460;
        k = G__13461;
        ks = G__13462;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq13451) {
  var G__13452 = cljs.core.first(seq13451);
  var seq13451__$1 = cljs.core.next(seq13451);
  var G__13453 = cljs.core.first(seq13451__$1);
  var seq13451__$2 = cljs.core.next(seq13451__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__13452, G__13453, seq13451__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var args13483 = [];
  var len__7279__auto___13489 = arguments.length;
  var i__7280__auto___13490 = 0;
  while (true) {
    if (i__7280__auto___13490 < len__7279__auto___13489) {
      args13483.push(arguments[i__7280__auto___13490]);
      var G__13491 = i__7280__auto___13490 + 1;
      i__7280__auto___13490 = G__13491;
      continue;
    } else {
    }
    break;
  }
  var G__13486 = args13483.length;
  switch(G__13486) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13483.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__7298__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq13484) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13484));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__13495_13497 = obj;
  var G__13496_13498 = function(G__13495_13497, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__13495_13497, keys);
  goog.object.forEach(G__13495_13497, G__13496_13498);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__13499 = i__$1 + 1;
      var G__13500 = j__$1 + 1;
      var G__13501 = len__$1 - 1;
      i__$1 = G__13499;
      j__$1 = G__13500;
      len__$1 = G__13501;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__13502 = i__$1 - 1;
      var G__13503 = j__$1 - 1;
      var G__13504 = len__$1 - 1;
      i__$1 = G__13502;
      j__$1 = G__13503;
      len__$1 = G__13504;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__6210__auto__ = cljs.core.fn_QMARK_(f);
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var args13515 = [];
  var len__7279__auto___13521 = arguments.length;
  var i__7280__auto___13522 = 0;
  while (true) {
    if (i__7280__auto___13522 < len__7279__auto___13521) {
      args13515.push(arguments[i__7280__auto___13522]);
      var G__13523 = i__7280__auto___13522 + 1;
      i__7280__auto___13522 = G__13523;
      continue;
    } else {
    }
    break;
  }
  var G__13520 = args13515.length;
  switch(G__13520) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13515.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__13525 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__13526 = etc;
          s = G__13525;
          xs = G__13526;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq13516) {
  var G__13517 = cljs.core.first(seq13516);
  var seq13516__$1 = cljs.core.next(seq13516);
  var G__13518 = cljs.core.first(seq13516__$1);
  var seq13516__$2 = cljs.core.next(seq13516__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__13517, G__13518, seq13516__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var args13529 = [];
  var len__7279__auto___13532 = arguments.length;
  var i__7280__auto___13533 = 0;
  while (true) {
    if (i__7280__auto___13533 < len__7279__auto___13532) {
      args13529.push(arguments[i__7280__auto___13533]);
      var G__13534 = i__7280__auto___13533 + 1;
      i__7280__auto___13533 = G__13534;
      continue;
    } else {
    }
    break;
  }
  var G__13531 = args13529.length;
  switch(G__13531) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13529.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__13536 = xs;
      var G__13537 = ys;
      var G__13538 = len;
      var G__13539 = n + 1;
      xs = G__13536;
      ys = G__13537;
      len = G__13538;
      n = G__13539;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort(var_args) {
  var args13540 = [];
  var len__7279__auto___13545 = arguments.length;
  var i__7280__auto___13546 = 0;
  while (true) {
    if (i__7280__auto___13546 < len__7279__auto___13545) {
      args13540.push(arguments[i__7280__auto___13546]);
      var G__13547 = i__7280__auto___13546 + 1;
      i__7280__auto___13546 = G__13547;
      continue;
    } else {
    }
    break;
  }
  var G__13542 = args13540.length;
  switch(G__13542) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13540.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__13543_13549 = a;
    var G__13544_13550 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__13543_13549, G__13544_13550);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var args13551 = [];
  var len__7279__auto___13554 = arguments.length;
  var i__7280__auto___13555 = 0;
  while (true) {
    if (i__7280__auto___13555 < len__7279__auto___13554) {
      args13551.push(arguments[i__7280__auto___13555]);
      var G__13556 = i__7280__auto___13555 + 1;
      i__7280__auto___13555 = G__13556;
      continue;
    } else {
    }
    break;
  }
  var G__13553 = args13551.length;
  switch(G__13553) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13551.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var args13558 = [];
  var len__7279__auto___13566 = arguments.length;
  var i__7280__auto___13567 = 0;
  while (true) {
    if (i__7280__auto___13567 < len__7279__auto___13566) {
      args13558.push(arguments[i__7280__auto___13567]);
      var G__13568 = i__7280__auto___13567 + 1;
      i__7280__auto___13567 = G__13568;
      continue;
    } else {
    }
    break;
  }
  var G__13560 = args13558.length;
  switch(G__13560) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13558.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4655__auto__ = cljs.core.seq(coll);
  if (temp__4655__auto__) {
    var s = temp__4655__auto__;
    var G__13561 = f;
    var G__13562 = cljs.core.first(s);
    var G__13563 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__13561, G__13562, G__13563) : cljs.core.reduce.call(null, G__13561, G__13562, G__13563);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__13564 = val__$1;
        var G__13565 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13564, G__13565) : f.call(null, G__13564, G__13565);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__13570 = nval;
        var G__13571 = cljs.core.next(coll__$1);
        val__$1 = G__13570;
        coll__$1 = G__13571;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var args13572 = [];
  var len__7279__auto___13577 = arguments.length;
  var i__7280__auto___13578 = 0;
  while (true) {
    if (i__7280__auto___13578 < len__7279__auto___13577) {
      args13572.push(arguments[i__7280__auto___13578]);
      var G__13579 = i__7280__auto___13578 + 1;
      i__7280__auto___13578 = G__13579;
      continue;
    } else {
    }
    break;
  }
  var G__13574 = args13572.length;
  switch(G__13574) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13572.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var args13581 = [];
  var len__7279__auto___13584 = arguments.length;
  var i__7280__auto___13585 = 0;
  while (true) {
    if (i__7280__auto___13585 < len__7279__auto___13584) {
      args13581.push(arguments[i__7280__auto___13585]);
      var G__13586 = i__7280__auto___13585 + 1;
      i__7280__auto___13585 = G__13586;
      continue;
    } else {
    }
    break;
  }
  var G__13583 = args13581.length;
  switch(G__13583) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13581.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__13588 = null;
    var G__13588__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__13588__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__13588__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__13588 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__13588__0.call(this);
        case 1:
          return G__13588__1.call(this, x);
        case 2:
          return G__13588__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13588.cljs$core$IFn$_invoke$arity$0 = G__13588__0;
    G__13588.cljs$core$IFn$_invoke$arity$1 = G__13588__1;
    G__13588.cljs$core$IFn$_invoke$arity$2 = G__13588__2;
    return G__13588;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var args13589 = [];
  var len__7279__auto___13592 = arguments.length;
  var i__7280__auto___13593 = 0;
  while (true) {
    if (i__7280__auto___13593 < len__7279__auto___13592) {
      args13589.push(arguments[i__7280__auto___13593]);
      var G__13594 = i__7280__auto___13593 + 1;
      i__7280__auto___13593 = G__13594;
      continue;
    } else {
    }
    break;
  }
  var G__13591 = args13589.length;
  switch(G__13591) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13589.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var args13596 = [];
  var len__7279__auto___13602 = arguments.length;
  var i__7280__auto___13603 = 0;
  while (true) {
    if (i__7280__auto___13603 < len__7279__auto___13602) {
      args13596.push(arguments[i__7280__auto___13603]);
      var G__13604 = i__7280__auto___13603 + 1;
      i__7280__auto___13603 = G__13604;
      continue;
    } else {
    }
    break;
  }
  var G__13601 = args13596.length;
  switch(G__13601) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13596.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq13597) {
  var G__13598 = cljs.core.first(seq13597);
  var seq13597__$1 = cljs.core.next(seq13597);
  var G__13599 = cljs.core.first(seq13597__$1);
  var seq13597__$2 = cljs.core.next(seq13597__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__13598, G__13599, seq13597__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var args13606 = [];
  var len__7279__auto___13612 = arguments.length;
  var i__7280__auto___13613 = 0;
  while (true) {
    if (i__7280__auto___13613 < len__7279__auto___13612) {
      args13606.push(arguments[i__7280__auto___13613]);
      var G__13614 = i__7280__auto___13613 + 1;
      i__7280__auto___13613 = G__13614;
      continue;
    } else {
    }
    break;
  }
  var G__13611 = args13606.length;
  switch(G__13611) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13606.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq13607) {
  var G__13608 = cljs.core.first(seq13607);
  var seq13607__$1 = cljs.core.next(seq13607);
  var G__13609 = cljs.core.first(seq13607__$1);
  var seq13607__$2 = cljs.core.next(seq13607__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__13608, G__13609, seq13607__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var args13616 = [];
  var len__7279__auto___13622 = arguments.length;
  var i__7280__auto___13623 = 0;
  while (true) {
    if (i__7280__auto___13623 < len__7279__auto___13622) {
      args13616.push(arguments[i__7280__auto___13623]);
      var G__13624 = i__7280__auto___13623 + 1;
      i__7280__auto___13623 = G__13624;
      continue;
    } else {
    }
    break;
  }
  var G__13621 = args13616.length;
  switch(G__13621) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13616.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq13617) {
  var G__13618 = cljs.core.first(seq13617);
  var seq13617__$1 = cljs.core.next(seq13617);
  var G__13619 = cljs.core.first(seq13617__$1);
  var seq13617__$2 = cljs.core.next(seq13617__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__13618, G__13619, seq13617__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var args13626 = [];
  var len__7279__auto___13632 = arguments.length;
  var i__7280__auto___13633 = 0;
  while (true) {
    if (i__7280__auto___13633 < len__7279__auto___13632) {
      args13626.push(arguments[i__7280__auto___13633]);
      var G__13634 = i__7280__auto___13633 + 1;
      i__7280__auto___13633 = G__13634;
      continue;
    } else {
    }
    break;
  }
  var G__13631 = args13626.length;
  switch(G__13631) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13626.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq13627) {
  var G__13628 = cljs.core.first(seq13627);
  var seq13627__$1 = cljs.core.next(seq13627);
  var G__13629 = cljs.core.first(seq13627__$1);
  var seq13627__$2 = cljs.core.next(seq13627__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__13628, G__13629, seq13627__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var args13636 = [];
  var len__7279__auto___13642 = arguments.length;
  var i__7280__auto___13643 = 0;
  while (true) {
    if (i__7280__auto___13643 < len__7279__auto___13642) {
      args13636.push(arguments[i__7280__auto___13643]);
      var G__13644 = i__7280__auto___13643 + 1;
      i__7280__auto___13643 = G__13644;
      continue;
    } else {
    }
    break;
  }
  var G__13641 = args13636.length;
  switch(G__13641) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13636.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__13646 = y;
        var G__13647 = cljs.core.first(more);
        var G__13648 = cljs.core.next(more);
        x = G__13646;
        y = G__13647;
        more = G__13648;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq13637) {
  var G__13638 = cljs.core.first(seq13637);
  var seq13637__$1 = cljs.core.next(seq13637);
  var G__13639 = cljs.core.first(seq13637__$1);
  var seq13637__$2 = cljs.core.next(seq13637__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__13638, G__13639, seq13637__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var args13649 = [];
  var len__7279__auto___13655 = arguments.length;
  var i__7280__auto___13656 = 0;
  while (true) {
    if (i__7280__auto___13656 < len__7279__auto___13655) {
      args13649.push(arguments[i__7280__auto___13656]);
      var G__13657 = i__7280__auto___13656 + 1;
      i__7280__auto___13656 = G__13657;
      continue;
    } else {
    }
    break;
  }
  var G__13654 = args13649.length;
  switch(G__13654) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13649.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__13659 = y;
        var G__13660 = cljs.core.first(more);
        var G__13661 = cljs.core.next(more);
        x = G__13659;
        y = G__13660;
        more = G__13661;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq13650) {
  var G__13651 = cljs.core.first(seq13650);
  var seq13650__$1 = cljs.core.next(seq13650);
  var G__13652 = cljs.core.first(seq13650__$1);
  var seq13650__$2 = cljs.core.next(seq13650__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__13651, G__13652, seq13650__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var args13662 = [];
  var len__7279__auto___13668 = arguments.length;
  var i__7280__auto___13669 = 0;
  while (true) {
    if (i__7280__auto___13669 < len__7279__auto___13668) {
      args13662.push(arguments[i__7280__auto___13669]);
      var G__13670 = i__7280__auto___13669 + 1;
      i__7280__auto___13669 = G__13670;
      continue;
    } else {
    }
    break;
  }
  var G__13667 = args13662.length;
  switch(G__13667) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13662.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__13672 = y;
        var G__13673 = cljs.core.first(more);
        var G__13674 = cljs.core.next(more);
        x = G__13672;
        y = G__13673;
        more = G__13674;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq13663) {
  var G__13664 = cljs.core.first(seq13663);
  var seq13663__$1 = cljs.core.next(seq13663);
  var G__13665 = cljs.core.first(seq13663__$1);
  var seq13663__$2 = cljs.core.next(seq13663__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__13664, G__13665, seq13663__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var args13675 = [];
  var len__7279__auto___13681 = arguments.length;
  var i__7280__auto___13682 = 0;
  while (true) {
    if (i__7280__auto___13682 < len__7279__auto___13681) {
      args13675.push(arguments[i__7280__auto___13682]);
      var G__13683 = i__7280__auto___13682 + 1;
      i__7280__auto___13682 = G__13683;
      continue;
    } else {
    }
    break;
  }
  var G__13680 = args13675.length;
  switch(G__13680) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13675.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__13685 = y;
        var G__13686 = cljs.core.first(more);
        var G__13687 = cljs.core.next(more);
        x = G__13685;
        y = G__13686;
        more = G__13687;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq13676) {
  var G__13677 = cljs.core.first(seq13676);
  var seq13676__$1 = cljs.core.next(seq13676);
  var G__13678 = cljs.core.first(seq13676__$1);
  var seq13676__$2 = cljs.core.next(seq13676__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__13677, G__13678, seq13676__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var args13688 = [];
  var len__7279__auto___13694 = arguments.length;
  var i__7280__auto___13695 = 0;
  while (true) {
    if (i__7280__auto___13695 < len__7279__auto___13694) {
      args13688.push(arguments[i__7280__auto___13695]);
      var G__13696 = i__7280__auto___13695 + 1;
      i__7280__auto___13695 = G__13696;
      continue;
    } else {
    }
    break;
  }
  var G__13693 = args13688.length;
  switch(G__13693) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13688.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__6541__auto__ = x;
  var y__6542__auto__ = y;
  return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__6541__auto__ = x;
    var y__6542__auto__ = y;
    return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq13689) {
  var G__13690 = cljs.core.first(seq13689);
  var seq13689__$1 = cljs.core.next(seq13689);
  var G__13691 = cljs.core.first(seq13689__$1);
  var seq13689__$2 = cljs.core.next(seq13689__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__13690, G__13691, seq13689__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var args13698 = [];
  var len__7279__auto___13704 = arguments.length;
  var i__7280__auto___13705 = 0;
  while (true) {
    if (i__7280__auto___13705 < len__7279__auto___13704) {
      args13698.push(arguments[i__7280__auto___13705]);
      var G__13706 = i__7280__auto___13705 + 1;
      i__7280__auto___13705 = G__13706;
      continue;
    } else {
    }
    break;
  }
  var G__13703 = args13698.length;
  switch(G__13703) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13698.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__6548__auto__ = x;
  var y__6549__auto__ = y;
  return x__6548__auto__ < y__6549__auto__ ? x__6548__auto__ : y__6549__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__6548__auto__ = x;
    var y__6549__auto__ = y;
    return x__6548__auto__ < y__6549__auto__ ? x__6548__auto__ : y__6549__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq13699) {
  var G__13700 = cljs.core.first(seq13699);
  var seq13699__$1 = cljs.core.next(seq13699);
  var G__13701 = cljs.core.first(seq13699__$1);
  var seq13699__$2 = cljs.core.next(seq13699__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__13700, G__13701, seq13699__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var args13708 = [];
  var len__7279__auto___13714 = arguments.length;
  var i__7280__auto___13715 = 0;
  while (true) {
    if (i__7280__auto___13715 < len__7279__auto___13714) {
      args13708.push(arguments[i__7280__auto___13715]);
      var G__13716 = i__7280__auto___13715 + 1;
      i__7280__auto___13715 = G__13716;
      continue;
    } else {
    }
    break;
  }
  var G__13713 = args13708.length;
  switch(G__13713) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13708.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq13709) {
  var G__13710 = cljs.core.first(seq13709);
  var seq13709__$1 = cljs.core.next(seq13709);
  var G__13711 = cljs.core.first(seq13709__$1);
  var seq13709__$2 = cljs.core.next(seq13709__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__13710, G__13711, seq13709__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var args13718 = [];
  var len__7279__auto___13724 = arguments.length;
  var i__7280__auto___13725 = 0;
  while (true) {
    if (i__7280__auto___13725 < len__7279__auto___13724) {
      args13718.push(arguments[i__7280__auto___13725]);
      var G__13726 = i__7280__auto___13725 + 1;
      i__7280__auto___13725 = G__13726;
      continue;
    } else {
    }
    break;
  }
  var G__13723 = args13718.length;
  switch(G__13723) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13718.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq13719) {
  var G__13720 = cljs.core.first(seq13719);
  var seq13719__$1 = cljs.core.next(seq13719);
  var G__13721 = cljs.core.first(seq13719__$1);
  var seq13719__$2 = cljs.core.next(seq13719__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__13720, G__13721, seq13719__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var args13728 = [];
  var len__7279__auto___13734 = arguments.length;
  var i__7280__auto___13735 = 0;
  while (true) {
    if (i__7280__auto___13735 < len__7279__auto___13734) {
      args13728.push(arguments[i__7280__auto___13735]);
      var G__13736 = i__7280__auto___13735 + 1;
      i__7280__auto___13735 = G__13736;
      continue;
    } else {
    }
    break;
  }
  var G__13733 = args13728.length;
  switch(G__13733) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13728.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq13729) {
  var G__13730 = cljs.core.first(seq13729);
  var seq13729__$1 = cljs.core.next(seq13729);
  var G__13731 = cljs.core.first(seq13729__$1);
  var seq13729__$2 = cljs.core.next(seq13729__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__13730, G__13731, seq13729__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var args13738 = [];
  var len__7279__auto___13744 = arguments.length;
  var i__7280__auto___13745 = 0;
  while (true) {
    if (i__7280__auto___13745 < len__7279__auto___13744) {
      args13738.push(arguments[i__7280__auto___13745]);
      var G__13746 = i__7280__auto___13745 + 1;
      i__7280__auto___13745 = G__13746;
      continue;
    } else {
    }
    break;
  }
  var G__13743 = args13738.length;
  switch(G__13743) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13738.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq13739) {
  var G__13740 = cljs.core.first(seq13739);
  var seq13739__$1 = cljs.core.next(seq13739);
  var G__13741 = cljs.core.first(seq13739__$1);
  var seq13739__$2 = cljs.core.next(seq13739__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__13740, G__13741, seq13739__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var args13748 = [];
  var len__7279__auto___13754 = arguments.length;
  var i__7280__auto___13755 = 0;
  while (true) {
    if (i__7280__auto___13755 < len__7279__auto___13754) {
      args13748.push(arguments[i__7280__auto___13755]);
      var G__13756 = i__7280__auto___13755 + 1;
      i__7280__auto___13755 = G__13756;
      continue;
    } else {
    }
    break;
  }
  var G__13753 = args13748.length;
  switch(G__13753) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13748.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq13749) {
  var G__13750 = cljs.core.first(seq13749);
  var seq13749__$1 = cljs.core.next(seq13749);
  var G__13751 = cljs.core.first(seq13749__$1);
  var seq13749__$2 = cljs.core.next(seq13749__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__13750, G__13751, seq13749__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var args13758 = [];
  var len__7279__auto___13764 = arguments.length;
  var i__7280__auto___13765 = 0;
  while (true) {
    if (i__7280__auto___13765 < len__7279__auto___13764) {
      args13758.push(arguments[i__7280__auto___13765]);
      var G__13766 = i__7280__auto___13765 + 1;
      i__7280__auto___13765 = G__13766;
      continue;
    } else {
    }
    break;
  }
  var G__13763 = args13758.length;
  switch(G__13763) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13758.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq13759) {
  var G__13760 = cljs.core.first(seq13759);
  var seq13759__$1 = cljs.core.next(seq13759);
  var G__13761 = cljs.core.first(seq13759__$1);
  var seq13759__$2 = cljs.core.next(seq13759__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__13760, G__13761, seq13759__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var args13768 = [];
  var len__7279__auto___13774 = arguments.length;
  var i__7280__auto___13775 = 0;
  while (true) {
    if (i__7280__auto___13775 < len__7279__auto___13774) {
      args13768.push(arguments[i__7280__auto___13775]);
      var G__13776 = i__7280__auto___13775 + 1;
      i__7280__auto___13775 = G__13776;
      continue;
    } else {
    }
    break;
  }
  var G__13773 = args13768.length;
  switch(G__13773) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13768.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq13769) {
  var G__13770 = cljs.core.first(seq13769);
  var seq13769__$1 = cljs.core.next(seq13769);
  var G__13771 = cljs.core.first(seq13769__$1);
  var seq13769__$2 = cljs.core.next(seq13769__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__13770, G__13771, seq13769__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var args13778 = [];
  var len__7279__auto___13784 = arguments.length;
  var i__7280__auto___13785 = 0;
  while (true) {
    if (i__7280__auto___13785 < len__7279__auto___13784) {
      args13778.push(arguments[i__7280__auto___13785]);
      var G__13786 = i__7280__auto___13785 + 1;
      i__7280__auto___13785 = G__13786;
      continue;
    } else {
    }
    break;
  }
  var G__13783 = args13778.length;
  switch(G__13783) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13778.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq13779) {
  var G__13780 = cljs.core.first(seq13779);
  var seq13779__$1 = cljs.core.next(seq13779);
  var G__13781 = cljs.core.first(seq13779__$1);
  var seq13779__$2 = cljs.core.next(seq13779__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__13780, G__13781, seq13779__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var args13788 = [];
  var len__7279__auto___13794 = arguments.length;
  var i__7280__auto___13795 = 0;
  while (true) {
    if (i__7280__auto___13795 < len__7279__auto___13794) {
      args13788.push(arguments[i__7280__auto___13795]);
      var G__13796 = i__7280__auto___13795 + 1;
      i__7280__auto___13795 = G__13796;
      continue;
    } else {
    }
    break;
  }
  var G__13793 = args13788.length;
  switch(G__13793) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13788.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq13789) {
  var G__13790 = cljs.core.first(seq13789);
  var seq13789__$1 = cljs.core.next(seq13789);
  var G__13791 = cljs.core.first(seq13789__$1);
  var seq13789__$2 = cljs.core.next(seq13789__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__13790, G__13791, seq13789__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var args13798 = [];
  var len__7279__auto___13804 = arguments.length;
  var i__7280__auto___13805 = 0;
  while (true) {
    if (i__7280__auto___13805 < len__7279__auto___13804) {
      args13798.push(arguments[i__7280__auto___13805]);
      var G__13806 = i__7280__auto___13805 + 1;
      i__7280__auto___13805 = G__13806;
      continue;
    } else {
    }
    break;
  }
  var G__13803 = args13798.length;
  switch(G__13803) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13798.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq13799) {
  var G__13800 = cljs.core.first(seq13799);
  var seq13799__$1 = cljs.core.next(seq13799);
  var G__13801 = cljs.core.first(seq13799__$1);
  var seq13799__$2 = cljs.core.next(seq13799__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__13800, G__13801, seq13799__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var args13808 = [];
  var len__7279__auto___13814 = arguments.length;
  var i__7280__auto___13815 = 0;
  while (true) {
    if (i__7280__auto___13815 < len__7279__auto___13814) {
      args13808.push(arguments[i__7280__auto___13815]);
      var G__13816 = i__7280__auto___13815 + 1;
      i__7280__auto___13815 = G__13816;
      continue;
    } else {
    }
    break;
  }
  var G__13813 = args13808.length;
  switch(G__13813) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13808.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq13809) {
  var G__13810 = cljs.core.first(seq13809);
  var seq13809__$1 = cljs.core.next(seq13809);
  var G__13811 = cljs.core.first(seq13809__$1);
  var seq13809__$2 = cljs.core.next(seq13809__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__13810, G__13811, seq13809__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var args13818 = [];
  var len__7279__auto___13824 = arguments.length;
  var i__7280__auto___13825 = 0;
  while (true) {
    if (i__7280__auto___13825 < len__7279__auto___13824) {
      args13818.push(arguments[i__7280__auto___13825]);
      var G__13826 = i__7280__auto___13825 + 1;
      i__7280__auto___13825 = G__13826;
      continue;
    } else {
    }
    break;
  }
  var G__13823 = args13818.length;
  switch(G__13823) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13818.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__13828 = y;
        var G__13829 = cljs.core.first(more);
        var G__13830 = cljs.core.next(more);
        x = G__13828;
        y = G__13829;
        more = G__13830;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq13819) {
  var G__13820 = cljs.core.first(seq13819);
  var seq13819__$1 = cljs.core.next(seq13819);
  var G__13821 = cljs.core.first(seq13819__$1);
  var seq13819__$2 = cljs.core.next(seq13819__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__13820, G__13821, seq13819__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__13831 = n__$1 - 1;
      var G__13832 = cljs.core.next(xs);
      n__$1 = G__13831;
      xs = G__13832;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var args13833 = [];
  var len__7279__auto___13838 = arguments.length;
  var i__7280__auto___13839 = 0;
  while (true) {
    if (i__7280__auto___13839 < len__7279__auto___13838) {
      args13833.push(arguments[i__7280__auto___13839]);
      var G__13840 = i__7280__auto___13839 + 1;
      i__7280__auto___13839 = G__13840;
      continue;
    } else {
    }
    break;
  }
  var G__13837 = args13833.length;
  switch(G__13837) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args13833.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7298__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__13842 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__13843 = cljs.core.next(more);
      sb = G__13842;
      more = G__13843;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq13834) {
  var G__13835 = cljs.core.first(seq13834);
  var seq13834__$1 = cljs.core.next(seq13834);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__13835, seq13834__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var args13844 = [];
  var len__7279__auto___13847 = arguments.length;
  var i__7280__auto___13848 = 0;
  while (true) {
    if (i__7280__auto___13848 < len__7279__auto___13847) {
      args13844.push(arguments[i__7280__auto___13848]);
      var G__13849 = i__7280__auto___13848 + 1;
      i__7280__auto___13848 = G__13849;
      continue;
    } else {
    }
    break;
  }
  var G__13846 = args13844.length;
  switch(G__13846) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13844.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__13851 = cljs.core.next(xs);
            var G__13852 = cljs.core.next(ys);
            xs = G__13851;
            ys = G__13852;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__13853 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__13854 = cljs.core.next(s);
        res = G__13853;
        s = G__13854;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__13855 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__13856 = cljs.core.next(s);
      h = G__13855;
      s = G__13856;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__13857 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__13858 = cljs.core.next(s__$1);
      h = G__13857;
      s__$1 = G__13858;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__13865_13871 = cljs.core.seq(fn_map);
  var chunk__13866_13872 = null;
  var count__13867_13873 = 0;
  var i__13868_13874 = 0;
  while (true) {
    if (i__13868_13874 < count__13867_13873) {
      var vec__13869_13875 = chunk__13866_13872.cljs$core$IIndexed$_nth$arity$2(null, i__13868_13874);
      var key_name_13876 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13869_13875, 0, null);
      var f_13877 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13869_13875, 1, null);
      var str_name_13878 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_13876) : cljs.core.name.call(null, key_name_13876);
      obj[str_name_13878] = f_13877;
      var G__13879 = seq__13865_13871;
      var G__13880 = chunk__13866_13872;
      var G__13881 = count__13867_13873;
      var G__13882 = i__13868_13874 + 1;
      seq__13865_13871 = G__13879;
      chunk__13866_13872 = G__13880;
      count__13867_13873 = G__13881;
      i__13868_13874 = G__13882;
      continue;
    } else {
      var temp__4657__auto___13883 = cljs.core.seq(seq__13865_13871);
      if (temp__4657__auto___13883) {
        var seq__13865_13884__$1 = temp__4657__auto___13883;
        if (cljs.core.chunked_seq_QMARK_(seq__13865_13884__$1)) {
          var c__7021__auto___13885 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__13865_13884__$1) : cljs.core.chunk_first.call(null, seq__13865_13884__$1);
          var G__13886 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__13865_13884__$1) : cljs.core.chunk_rest.call(null, seq__13865_13884__$1);
          var G__13887 = c__7021__auto___13885;
          var G__13888 = cljs.core.count(c__7021__auto___13885);
          var G__13889 = 0;
          seq__13865_13871 = G__13886;
          chunk__13866_13872 = G__13887;
          count__13867_13873 = G__13888;
          i__13868_13874 = G__13889;
          continue;
        } else {
          var vec__13870_13890 = cljs.core.first(seq__13865_13884__$1);
          var key_name_13891 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13870_13890, 0, null);
          var f_13892 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13870_13890, 1, null);
          var str_name_13893 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_13891) : cljs.core.name.call(null, key_name_13891);
          obj[str_name_13893] = f_13892;
          var G__13894 = cljs.core.next(seq__13865_13884__$1);
          var G__13895 = null;
          var G__13896 = 0;
          var G__13897 = 0;
          seq__13865_13871 = G__13894;
          chunk__13866_13872 = G__13895;
          count__13867_13873 = G__13896;
          i__13868_13874 = G__13897;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.indexOf = function() {
  var G__13898 = null;
  var G__13898__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13898__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13898 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13898__1.call(this, x);
      case 2:
        return G__13898__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13898.cljs$core$IFn$_invoke$arity$1 = G__13898__1;
  G__13898.cljs$core$IFn$_invoke$arity$2 = G__13898__2;
  return G__13898;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var G__13899 = null;
  var G__13899__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__13899__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13899 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13899__1.call(this, x);
      case 2:
        return G__13899__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13899.cljs$core$IFn$_invoke$arity$1 = G__13899__1;
  G__13899.cljs$core$IFn$_invoke$arity$2 = G__13899__2;
  return G__13899;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var G__13902 = null;
  var G__13902__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13902__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13902 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13902__1.call(this, x);
      case 2:
        return G__13902__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13902.cljs$core$IFn$_invoke$arity$1 = G__13902__1;
  G__13902.cljs$core$IFn$_invoke$arity$2 = G__13902__2;
  return G__13902;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var G__13903 = null;
  var G__13903__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__13903__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13903 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13903__1.call(this, x);
      case 2:
        return G__13903__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13903.cljs$core$IFn$_invoke$arity$1 = G__13903__1;
  G__13903.cljs$core$IFn$_invoke$arity$2 = G__13903__2;
  return G__13903;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(rev) {
  return cljs.core._rseq(rev);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___13907 = arguments.length;
  var i__7280__auto___13908 = 0;
  while (true) {
    if (i__7280__auto___13908 < len__7279__auto___13907) {
      args__7286__auto__.push(arguments[i__7280__auto___13908]);
      var G__13909 = i__7280__auto___13908 + 1;
      i__7280__auto___13908 = G__13909;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__13910 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__13910;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__13911 = i - 1;
      var G__13912 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__13911;
      r = G__13912;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq13906) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13906));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.indexOf = function() {
  var G__13913 = null;
  var G__13913__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13913__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13913 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13913__1.call(this, x);
      case 2:
        return G__13913__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13913.cljs$core$IFn$_invoke$arity$1 = G__13913__1;
  G__13913.cljs$core$IFn$_invoke$arity$2 = G__13913__2;
  return G__13913;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var G__13914 = null;
  var G__13914__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__13914__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13914 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13914__1.call(this, x);
      case 2:
        return G__13914__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13914.cljs$core$IFn$_invoke$arity$1 = G__13914__1;
  G__13914.cljs$core$IFn$_invoke$arity$2 = G__13914__2;
  return G__13914;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__6210__auto__ = coll == null;
    if (or__6210__auto__) {
      return or__6210__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = cljs.core.not(a.ns);
      if (and__6198__auto__) {
        return b.ns;
      } else {
        return and__6198__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__13925 = a.ns;
            var G__13926 = b.ns;
            return goog.array.defaultCompare(G__13925, G__13926);
          }();
          if (0 === nsc) {
            var G__13927 = a.name;
            var G__13928 = b.name;
            return goog.array.defaultCompare(G__13927, G__13928);
          } else {
            return nsc;
          }
        }
      } else {
        var G__13929 = a.name;
        var G__13930 = b.name;
        return goog.array.defaultCompare(G__13929, G__13930);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__13932 = null;
  var G__13932__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__13932__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__13932 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13932__2.call(this, self__, coll);
      case 3:
        return G__13932__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13932.cljs$core$IFn$_invoke$arity$2 = G__13932__2;
  G__13932.cljs$core$IFn$_invoke$arity$3 = G__13932__3;
  return G__13932;
}();
cljs.core.Keyword.prototype.apply = function(self__, args13931) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13931)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__6645__auto__ = self__._hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var args13935 = [];
  var len__7279__auto___13938 = arguments.length;
  var i__7280__auto___13939 = 0;
  while (true) {
    if (i__7280__auto___13939 < len__7279__auto___13938) {
      args13935.push(arguments[i__7280__auto___13939]);
      var G__13940 = i__7280__auto___13939 + 1;
      i__7280__auto___13939 = G__13940;
      continue;
    } else {
    }
    break;
  }
  var G__13937 = args13935.length;
  switch(G__13937) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13935.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var G__13942 = null;
  var G__13942__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13942__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13942 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13942__1.call(this, x);
      case 2:
        return G__13942__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13942.cljs$core$IFn$_invoke$arity$1 = G__13942__1;
  G__13942.cljs$core$IFn$_invoke$arity$2 = G__13942__2;
  return G__13942;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var G__13943 = null;
  var G__13943__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__13943__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13943 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13943__1.call(this, x);
      case 2:
        return G__13943__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13943.cljs$core$IFn$_invoke$arity$1 = G__13943__1;
  G__13943.cljs$core$IFn$_invoke$arity$2 = G__13943__2;
  return G__13943;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__13944 = ls.sval();
        ls = G__13944;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var args13945 = [];
  var len__7279__auto___13948 = arguments.length;
  var i__7280__auto___13949 = 0;
  while (true) {
    if (i__7280__auto___13949 < len__7279__auto___13948) {
      args13945.push(arguments[i__7280__auto___13949]);
      var G__13950 = i__7280__auto___13949 + 1;
      i__7280__auto___13949 = G__13950;
      continue;
    } else {
    }
    break;
  }
  var G__13947 = args13945.length;
  switch(G__13947) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13945.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var G__13952 = null;
  var G__13952__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13952__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13952 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13952__1.call(this, x);
      case 2:
        return G__13952__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13952.cljs$core$IFn$_invoke$arity$1 = G__13952__1;
  G__13952.cljs$core$IFn$_invoke$arity$2 = G__13952__2;
  return G__13952;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var G__13953 = null;
  var G__13953__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__13953__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13953 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13953__1.call(this, x);
      case 2:
        return G__13953__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13953.cljs$core$IFn$_invoke$arity$1 = G__13953__1;
  G__13953.cljs$core$IFn$_invoke$arity$2 = G__13953__2;
  return G__13953;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__13956 = cljs.core.next(s__$1);
      s__$1 = G__13956;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_13957 = 0;
  var xs_13958 = cljs.core.seq(coll);
  while (true) {
    if (xs_13958) {
      ret[i_13957] = cljs.core.to_array(cljs.core.first(xs_13958));
      var G__13959 = i_13957 + 1;
      var G__13960 = cljs.core.next(xs_13958);
      i_13957 = G__13959;
      xs_13958 = G__13960;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var args13961 = [];
  var len__7279__auto___13964 = arguments.length;
  var i__7280__auto___13965 = 0;
  while (true) {
    if (i__7280__auto___13965 < len__7279__auto___13964) {
      args13961.push(arguments[i__7280__auto___13965]);
      var G__13966 = i__7280__auto___13965 + 1;
      i__7280__auto___13965 = G__13966;
      continue;
    } else {
    }
    break;
  }
  var G__13963 = args13961.length;
  switch(G__13963) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13961.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__13968 = i + 1;
        var G__13969 = cljs.core.next(s__$1);
        i = G__13968;
        s__$1 = G__13969;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__7124__auto___13970 = size;
    var i_13971 = 0;
    while (true) {
      if (i_13971 < n__7124__auto___13970) {
        a[i_13971] = init_val_or_seq;
        var G__13972 = i_13971 + 1;
        i_13971 = G__13972;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var args13973 = [];
  var len__7279__auto___13976 = arguments.length;
  var i__7280__auto___13977 = 0;
  while (true) {
    if (i__7280__auto___13977 < len__7279__auto___13976) {
      args13973.push(arguments[i__7280__auto___13977]);
      var G__13978 = i__7280__auto___13977 + 1;
      i__7280__auto___13977 = G__13978;
      continue;
    } else {
    }
    break;
  }
  var G__13975 = args13973.length;
  switch(G__13975) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13973.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__13980 = i + 1;
        var G__13981 = cljs.core.next(s__$1);
        i = G__13980;
        s__$1 = G__13981;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__7124__auto___13982 = size;
    var i_13983 = 0;
    while (true) {
      if (i_13983 < n__7124__auto___13982) {
        a[i_13983] = init_val_or_seq;
        var G__13984 = i_13983 + 1;
        i_13983 = G__13984;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var args13985 = [];
  var len__7279__auto___13988 = arguments.length;
  var i__7280__auto___13989 = 0;
  while (true) {
    if (i__7280__auto___13989 < len__7279__auto___13988) {
      args13985.push(arguments[i__7280__auto___13989]);
      var G__13990 = i__7280__auto___13989 + 1;
      i__7280__auto___13989 = G__13990;
      continue;
    } else {
    }
    break;
  }
  var G__13987 = args13985.length;
  switch(G__13987) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13985.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__13992 = i + 1;
        var G__13993 = cljs.core.next(s__$1);
        i = G__13992;
        s__$1 = G__13993;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__7124__auto___13994 = size;
    var i_13995 = 0;
    while (true) {
      if (i_13995 < n__7124__auto___13994) {
        a[i_13995] = init_val_or_seq;
        var G__13996 = i_13995 + 1;
        i_13995 = G__13996;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var args13997 = [];
  var len__7279__auto___14000 = arguments.length;
  var i__7280__auto___14001 = 0;
  while (true) {
    if (i__7280__auto___14001 < len__7279__auto___14000) {
      args13997.push(arguments[i__7280__auto___14001]);
      var G__14002 = i__7280__auto___14001 + 1;
      i__7280__auto___14001 = G__14002;
      continue;
    } else {
    }
    break;
  }
  var G__13999 = args13997.length;
  switch(G__13999) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13997.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__14004 = i + 1;
        var G__14005 = cljs.core.next(s__$1);
        i = G__14004;
        s__$1 = G__14005;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__7124__auto___14006 = size;
    var i_14007 = 0;
    while (true) {
      if (i_14007 < n__7124__auto___14006) {
        a[i_14007] = init_val_or_seq;
        var G__14008 = i_14007 + 1;
        i_14007 = G__14008;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__14009 = cljs.core.next(s__$1);
        var G__14010 = i - 1;
        var G__14011 = sum + 1;
        s__$1 = G__14009;
        i = G__14010;
        sum = G__14011;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var args14013 = [];
  var len__7279__auto___14025 = arguments.length;
  var i__7280__auto___14026 = 0;
  while (true) {
    if (i__7280__auto___14026 < len__7279__auto___14025) {
      args14013.push(arguments[i__7280__auto___14026]);
      var G__14027 = i__7280__auto___14026 + 1;
      i__7280__auto___14026 = G__14027;
      continue;
    } else {
    }
    break;
  }
  var G__14018 = args14013.length;
  switch(G__14018) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14013.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq14014) {
  var G__14015 = cljs.core.first(seq14014);
  var seq14014__$1 = cljs.core.next(seq14014);
  var G__14016 = cljs.core.first(seq14014__$1);
  var seq14014__$2 = cljs.core.next(seq14014__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__14015, G__14016, seq14014__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var args14029 = [];
  var len__7279__auto___14037 = arguments.length;
  var i__7280__auto___14038 = 0;
  while (true) {
    if (i__7280__auto___14038 < len__7279__auto___14037) {
      args14029.push(arguments[i__7280__auto___14038]);
      var G__14039 = i__7280__auto___14038 + 1;
      i__7280__auto___14038 = G__14039;
      continue;
    } else {
    }
    break;
  }
  var G__14036 = args14029.length;
  switch(G__14036) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14029.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7298__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq14030) {
  var G__14031 = cljs.core.first(seq14030);
  var seq14030__$1 = cljs.core.next(seq14030);
  var G__14032 = cljs.core.first(seq14030__$1);
  var seq14030__$2 = cljs.core.next(seq14030__$1);
  var G__14033 = cljs.core.first(seq14030__$2);
  var seq14030__$3 = cljs.core.next(seq14030__$2);
  var G__14034 = cljs.core.first(seq14030__$3);
  var seq14030__$4 = cljs.core.next(seq14030__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__14031, G__14032, G__14033, G__14034, seq14030__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var args14041 = [];
  var len__7279__auto___14047 = arguments.length;
  var i__7280__auto___14048 = 0;
  while (true) {
    if (i__7280__auto___14048 < len__7279__auto___14047) {
      args14041.push(arguments[i__7280__auto___14048]);
      var G__14049 = i__7280__auto___14048 + 1;
      i__7280__auto___14048 = G__14049;
      continue;
    } else {
    }
    break;
  }
  var G__14046 = args14041.length;
  switch(G__14046) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14041.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__14051 = ntcoll;
      var G__14052 = cljs.core.first(vals);
      var G__14053 = cljs.core.next(vals);
      tcoll = G__14051;
      val = G__14052;
      vals = G__14053;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq14042) {
  var G__14043 = cljs.core.first(seq14042);
  var seq14042__$1 = cljs.core.next(seq14042);
  var G__14044 = cljs.core.first(seq14042__$1);
  var seq14042__$2 = cljs.core.next(seq14042__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__14043, G__14044, seq14042__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var args14054 = [];
  var len__7279__auto___14061 = arguments.length;
  var i__7280__auto___14062 = 0;
  while (true) {
    if (i__7280__auto___14062 < len__7279__auto___14061) {
      args14054.push(arguments[i__7280__auto___14062]);
      var G__14063 = i__7280__auto___14062 + 1;
      i__7280__auto___14062 = G__14063;
      continue;
    } else {
    }
    break;
  }
  var G__14060 = args14054.length;
  switch(G__14060) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14054.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__14065 = ntcoll;
      var G__14066 = cljs.core.first(kvs);
      var G__14067 = cljs.core.second(kvs);
      var G__14068 = cljs.core.nnext(kvs);
      tcoll = G__14065;
      key = G__14066;
      val = G__14067;
      kvs = G__14068;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq14055) {
  var G__14056 = cljs.core.first(seq14055);
  var seq14055__$1 = cljs.core.next(seq14055);
  var G__14057 = cljs.core.first(seq14055__$1);
  var seq14055__$2 = cljs.core.next(seq14055__$1);
  var G__14058 = cljs.core.first(seq14055__$2);
  var seq14055__$3 = cljs.core.next(seq14055__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__14056, G__14057, G__14058, seq14055__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var args14069 = [];
  var len__7279__auto___14075 = arguments.length;
  var i__7280__auto___14076 = 0;
  while (true) {
    if (i__7280__auto___14076 < len__7279__auto___14075) {
      args14069.push(arguments[i__7280__auto___14076]);
      var G__14077 = i__7280__auto___14076 + 1;
      i__7280__auto___14076 = G__14077;
      continue;
    } else {
    }
    break;
  }
  var G__14074 = args14069.length;
  switch(G__14074) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14069.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__14079 = ntcoll;
      var G__14080 = cljs.core.first(ks);
      var G__14081 = cljs.core.next(ks);
      tcoll = G__14079;
      key = G__14080;
      ks = G__14081;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq14070) {
  var G__14071 = cljs.core.first(seq14070);
  var seq14070__$1 = cljs.core.next(seq14070);
  var G__14072 = cljs.core.first(seq14070__$1);
  var seq14070__$2 = cljs.core.next(seq14070__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__14071, G__14072, seq14070__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var args14082 = [];
  var len__7279__auto___14088 = arguments.length;
  var i__7280__auto___14089 = 0;
  while (true) {
    if (i__7280__auto___14089 < len__7279__auto___14088) {
      args14082.push(arguments[i__7280__auto___14089]);
      var G__14090 = i__7280__auto___14089 + 1;
      i__7280__auto___14089 = G__14090;
      continue;
    } else {
    }
    break;
  }
  var G__14087 = args14082.length;
  switch(G__14087) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14082.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__14092 = ntcoll;
      var G__14093 = cljs.core.first(vals);
      var G__14094 = cljs.core.next(vals);
      tcoll = G__14092;
      val = G__14093;
      vals = G__14094;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq14083) {
  var G__14084 = cljs.core.first(seq14083);
  var seq14083__$1 = cljs.core.next(seq14083);
  var G__14085 = cljs.core.first(seq14083__$1);
  var seq14083__$2 = cljs.core.next(seq14083__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__14084, G__14085, seq14083__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a7168 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a7168);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a7168) : f.call(null, a7168);
      }
    } else {
      var b7169 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a7168, b7169);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a7168, b7169) : f.call(null, a7168, b7169);
        }
      } else {
        var c7170 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a7168, b7169, c7170);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a7168, b7169, c7170) : f.call(null, a7168, b7169, c7170);
          }
        } else {
          var d7171 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a7168, b7169, c7170, d7171);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a7168, b7169, c7170, d7171) : f.call(null, a7168, b7169, c7170, d7171);
            }
          } else {
            var e7172 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a7168, b7169, c7170, d7171, e7172);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a7168, b7169, c7170, d7171, e7172) : f.call(null, a7168, b7169, c7170, d7171, e7172);
              }
            } else {
              var f7173 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a7168, b7169, c7170, d7171, e7172, f7173);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a7168, b7169, c7170, d7171, e7172, f7173) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173);
                }
              } else {
                var g7174 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a7168, b7169, c7170, d7171, e7172, f7173, g7174);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a7168, b7169, c7170, d7171, e7172, f7173, g7174) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174);
                  }
                } else {
                  var h7175 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175);
                    }
                  } else {
                    var i7176 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176);
                      }
                    } else {
                      var j7177 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177);
                        }
                      } else {
                        var k7178 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178);
                          }
                        } else {
                          var l7179 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179);
                            }
                          } else {
                            var m7180 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180);
                              }
                            } else {
                              var n7181 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181);
                                }
                              } else {
                                var o7182 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182);
                                  }
                                } else {
                                  var p7183 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183);
                                    }
                                  } else {
                                    var q7184 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184);
                                      }
                                    } else {
                                      var r7185 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185);
                                        }
                                      } else {
                                        var s7186 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185, s7186);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185, s7186) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185, s7186);
                                          }
                                        } else {
                                          var t7187 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185, s7186, t7187);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185, s7186, t7187) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185, s7186, t7187);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply(var_args) {
  var args14095 = [];
  var len__7279__auto___14104 = arguments.length;
  var i__7280__auto___14105 = 0;
  while (true) {
    if (i__7280__auto___14105 < len__7279__auto___14104) {
      args14095.push(arguments[i__7280__auto___14105]);
      var G__14106 = i__7280__auto___14105 + 1;
      i__7280__auto___14105 = G__14106;
      continue;
    } else {
    }
    break;
  }
  var G__14103 = args14095.length;
  switch(G__14103) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14095.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__7298__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq14096) {
  var G__14097 = cljs.core.first(seq14096);
  var seq14096__$1 = cljs.core.next(seq14096);
  var G__14098 = cljs.core.first(seq14096__$1);
  var seq14096__$2 = cljs.core.next(seq14096__$1);
  var G__14099 = cljs.core.first(seq14096__$2);
  var seq14096__$3 = cljs.core.next(seq14096__$2);
  var G__14100 = cljs.core.first(seq14096__$3);
  var seq14096__$4 = cljs.core.next(seq14096__$3);
  var G__14101 = cljs.core.first(seq14096__$4);
  var seq14096__$5 = cljs.core.next(seq14096__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__14097, G__14098, G__14099, G__14100, G__14101, seq14096__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var args14108 = [];
  var len__7279__auto___14133 = arguments.length;
  var i__7280__auto___14134 = 0;
  while (true) {
    if (i__7280__auto___14134 < len__7279__auto___14133) {
      args14108.push(arguments[i__7280__auto___14134]);
      var G__14135 = i__7280__auto___14134 + 1;
      i__7280__auto___14134 = G__14135;
      continue;
    } else {
    }
    break;
  }
  var G__14117 = args14108.length;
  switch(G__14117) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14108.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__7298__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__14118 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14118) : f.call(null, G__14118);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__14119 = cljs.core.meta(obj);
    var G__14120 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14119, G__14120) : f.call(null, G__14119, G__14120);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__14121 = cljs.core.meta(obj);
    var G__14122 = a;
    var G__14123 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14121, G__14122, G__14123) : f.call(null, G__14121, G__14122, G__14123);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__14124 = cljs.core.meta(obj);
    var G__14125 = a;
    var G__14126 = b;
    var G__14127 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14124, G__14125, G__14126, G__14127) : f.call(null, G__14124, G__14125, G__14126, G__14127);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__14128 = cljs.core.meta(obj);
    var G__14129 = a;
    var G__14130 = b;
    var G__14131 = c;
    var G__14132 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14128, G__14129, G__14130, G__14131, G__14132) : f.call(null, G__14128, G__14129, G__14130, G__14131, G__14132);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq14109) {
  var G__14110 = cljs.core.first(seq14109);
  var seq14109__$1 = cljs.core.next(seq14109);
  var G__14111 = cljs.core.first(seq14109__$1);
  var seq14109__$2 = cljs.core.next(seq14109__$1);
  var G__14112 = cljs.core.first(seq14109__$2);
  var seq14109__$3 = cljs.core.next(seq14109__$2);
  var G__14113 = cljs.core.first(seq14109__$3);
  var seq14109__$4 = cljs.core.next(seq14109__$3);
  var G__14114 = cljs.core.first(seq14109__$4);
  var seq14109__$5 = cljs.core.next(seq14109__$4);
  var G__14115 = cljs.core.first(seq14109__$5);
  var seq14109__$6 = cljs.core.next(seq14109__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__14110, G__14111, G__14112, G__14113, G__14114, G__14115, seq14109__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var args14137 = [];
  var len__7279__auto___14143 = arguments.length;
  var i__7280__auto___14144 = 0;
  while (true) {
    if (i__7280__auto___14144 < len__7279__auto___14143) {
      args14137.push(arguments[i__7280__auto___14144]);
      var G__14145 = i__7280__auto___14144 + 1;
      i__7280__auto___14144 = G__14145;
      continue;
    } else {
    }
    break;
  }
  var G__14142 = args14137.length;
  switch(G__14142) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14137.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq14138) {
  var G__14139 = cljs.core.first(seq14138);
  var seq14138__$1 = cljs.core.next(seq14138);
  var G__14140 = cljs.core.first(seq14138__$1);
  var seq14138__$2 = cljs.core.next(seq14138__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__14139, G__14140, seq14138__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t_cljs$core14150 !== "undefined") {
  } else {
    cljs.core.t_cljs$core14150 = function(nil_iter, meta14151) {
      this.nil_iter = nil_iter;
      this.meta14151 = meta14151;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core14150.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14152, meta14151__$1) {
      var self__ = this;
      var _14152__$1 = this;
      return new cljs.core.t_cljs$core14150(self__.nil_iter, meta14151__$1);
    };
    cljs.core.t_cljs$core14150.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14152) {
      var self__ = this;
      var _14152__$1 = this;
      return self__.meta14151;
    };
    cljs.core.t_cljs$core14150.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core14150.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core14150.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core14150.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta14151", "meta14151", -953697238, null)], 
      null);
    };
    cljs.core.t_cljs$core14150.cljs$lang$type = true;
    cljs.core.t_cljs$core14150.cljs$lang$ctorStr = "cljs.core/t_cljs$core14150";
    cljs.core.t_cljs$core14150.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
      return cljs.core._write(writer__6817__auto__, "cljs.core/t_cljs$core14150");
    };
    cljs.core.__GT_t_cljs$core14150 = function cljs$core$nil_iter_$___GT_t_cljs$core14150(nil_iter__$1, meta14151) {
      return new cljs.core.t_cljs$core14150(nil_iter__$1, meta14151);
    };
  }
  return new cljs.core.t_cljs$core14150(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = !(lt.stepper == null);
      if (and__6198__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__6198__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__14153 = lt;
        var G__14154 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__14153, G__14154) : self__.xform.call(null, G__14153, G__14154);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__14155 = cljs.core.next(iters__$1);
        iters__$1 = G__14155;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__7124__auto___14156 = self__.iters.length;
  var i_14157 = 0;
  while (true) {
    if (i_14157 < n__7124__auto___14156) {
      self__.nexts[i_14157] = self__.iters[i_14157].next();
      var G__14158 = i_14157 + 1;
      i_14157 = G__14158;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = !(lt.stepper == null);
      if (and__6198__auto__) {
        return this$.hasNext();
      } else {
        return and__6198__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper(var_args) {
  var args14159 = [];
  var len__7279__auto___14162 = arguments.length;
  var i__7280__auto___14163 = 0;
  while (true) {
    if (i__7280__auto___14163 < len__7279__auto___14162) {
      args14159.push(arguments[i__7280__auto___14163]);
      var G__14164 = i__7280__auto___14163 + 1;
      i__7280__auto___14163 = G__14164;
      continue;
    } else {
    }
    break;
  }
  var G__14161 = args14159.length;
  switch(G__14161) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14159.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.indexOf = function() {
  var G__14166 = null;
  var G__14166__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14166__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14166 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14166__1.call(this, x);
      case 2:
        return G__14166__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14166.cljs$core$IFn$_invoke$arity$1 = G__14166__1;
  G__14166.cljs$core$IFn$_invoke$arity$2 = G__14166__2;
  return G__14166;
}();
cljs.core.LazyTransformer.prototype.lastIndexOf = function() {
  var G__14167 = null;
  var G__14167__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14167__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14167 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14167__1.call(this, x);
      case 2:
        return G__14167__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14167.cljs$core$IFn$_invoke$arity$1 = G__14167__1;
  G__14167.cljs$core$IFn$_invoke$arity$2 = G__14167__2;
  return G__14167;
}();
cljs.core.LazyTransformer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.meta;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__14168_14172 = cljs.core.seq(colls);
  var chunk__14169_14173 = null;
  var count__14170_14174 = 0;
  var i__14171_14175 = 0;
  while (true) {
    if (i__14171_14175 < count__14170_14174) {
      var coll_14176 = chunk__14169_14173.cljs$core$IIndexed$_nth$arity$2(null, i__14171_14175);
      iters.push(cljs.core.iter(coll_14176));
      var G__14177 = seq__14168_14172;
      var G__14178 = chunk__14169_14173;
      var G__14179 = count__14170_14174;
      var G__14180 = i__14171_14175 + 1;
      seq__14168_14172 = G__14177;
      chunk__14169_14173 = G__14178;
      count__14170_14174 = G__14179;
      i__14171_14175 = G__14180;
      continue;
    } else {
      var temp__4657__auto___14181 = cljs.core.seq(seq__14168_14172);
      if (temp__4657__auto___14181) {
        var seq__14168_14182__$1 = temp__4657__auto___14181;
        if (cljs.core.chunked_seq_QMARK_(seq__14168_14182__$1)) {
          var c__7021__auto___14183 = cljs.core.chunk_first(seq__14168_14182__$1);
          var G__14184 = cljs.core.chunk_rest(seq__14168_14182__$1);
          var G__14185 = c__7021__auto___14183;
          var G__14186 = cljs.core.count(c__7021__auto___14183);
          var G__14187 = 0;
          seq__14168_14172 = G__14184;
          chunk__14169_14173 = G__14185;
          count__14170_14174 = G__14186;
          i__14171_14175 = G__14187;
          continue;
        } else {
          var coll_14188 = cljs.core.first(seq__14168_14182__$1);
          iters.push(cljs.core.iter(coll_14188));
          var G__14189 = cljs.core.next(seq__14168_14182__$1);
          var G__14190 = null;
          var G__14191 = 0;
          var G__14192 = 0;
          seq__14168_14172 = G__14189;
          chunk__14169_14173 = G__14190;
          count__14170_14174 = G__14191;
          i__14171_14175 = G__14192;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var args14193 = [];
  var len__7279__auto___14199 = arguments.length;
  var i__7280__auto___14200 = 0;
  while (true) {
    if (i__7280__auto___14200 < len__7279__auto___14199) {
      args14193.push(arguments[i__7280__auto___14200]);
      var G__14201 = i__7280__auto___14200 + 1;
      i__7280__auto___14200 = G__14201;
      continue;
    } else {
    }
    break;
  }
  var G__14198 = args14193.length;
  switch(G__14198) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14193.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__6210__auto__ = cljs.core.seq(coll);
    if (or__6210__auto__) {
      return or__6210__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq14194) {
  var G__14195 = cljs.core.first(seq14194);
  var seq14194__$1 = cljs.core.next(seq14194);
  var G__14196 = cljs.core.first(seq14194__$1);
  var seq14194__$2 = cljs.core.next(seq14194__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__14195, G__14196, seq14194__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__14204 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14204) : pred.call(null, G__14204);
      }())) {
        var G__14205 = pred;
        var G__14206 = cljs.core.next(coll);
        pred = G__14205;
        coll = G__14206;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__6210__auto__ = function() {
        var G__14210 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14210) : pred.call(null, G__14210);
      }();
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var G__14211 = pred;
        var G__14212 = cljs.core.next(coll);
        pred = G__14211;
        coll = G__14212;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__14213 = null;
    var G__14213__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__14213__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__14213__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__14213__3 = function() {
      var G__14214__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__14214 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__14215__i = 0, G__14215__a = new Array(arguments.length - 2);
          while (G__14215__i < G__14215__a.length) {
            G__14215__a[G__14215__i] = arguments[G__14215__i + 2];
            ++G__14215__i;
          }
          zs = new cljs.core.IndexedSeq(G__14215__a, 0);
        }
        return G__14214__delegate.call(this, x, y, zs);
      };
      G__14214.cljs$lang$maxFixedArity = 2;
      G__14214.cljs$lang$applyTo = function(arglist__14216) {
        var x = cljs.core.first(arglist__14216);
        arglist__14216 = cljs.core.next(arglist__14216);
        var y = cljs.core.first(arglist__14216);
        var zs = cljs.core.rest(arglist__14216);
        return G__14214__delegate(x, y, zs);
      };
      G__14214.cljs$core$IFn$_invoke$arity$variadic = G__14214__delegate;
      return G__14214;
    }();
    G__14213 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__14213__0.call(this);
        case 1:
          return G__14213__1.call(this, x);
        case 2:
          return G__14213__2.call(this, x, y);
        default:
          var G__14217 = null;
          if (arguments.length > 2) {
            var G__14218__i = 0, G__14218__a = new Array(arguments.length - 2);
            while (G__14218__i < G__14218__a.length) {
              G__14218__a[G__14218__i] = arguments[G__14218__i + 2];
              ++G__14218__i;
            }
            G__14217 = new cljs.core.IndexedSeq(G__14218__a, 0);
          }
          return G__14213__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__14217);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14213.cljs$lang$maxFixedArity = 2;
    G__14213.cljs$lang$applyTo = G__14213__3.cljs$lang$applyTo;
    G__14213.cljs$core$IFn$_invoke$arity$0 = G__14213__0;
    G__14213.cljs$core$IFn$_invoke$arity$1 = G__14213__1;
    G__14213.cljs$core$IFn$_invoke$arity$2 = G__14213__2;
    G__14213.cljs$core$IFn$_invoke$arity$variadic = G__14213__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__14213;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__14219__delegate = function(args) {
      return x;
    };
    var G__14219 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__14220__i = 0, G__14220__a = new Array(arguments.length - 0);
        while (G__14220__i < G__14220__a.length) {
          G__14220__a[G__14220__i] = arguments[G__14220__i + 0];
          ++G__14220__i;
        }
        args = new cljs.core.IndexedSeq(G__14220__a, 0);
      }
      return G__14219__delegate.call(this, args);
    };
    G__14219.cljs$lang$maxFixedArity = 0;
    G__14219.cljs$lang$applyTo = function(arglist__14221) {
      var args = cljs.core.seq(arglist__14221);
      return G__14219__delegate(args);
    };
    G__14219.cljs$core$IFn$_invoke$arity$variadic = G__14219__delegate;
    return G__14219;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var args14222 = [];
  var len__7279__auto___14249 = arguments.length;
  var i__7280__auto___14250 = 0;
  while (true) {
    if (i__7280__auto___14250 < len__7279__auto___14249) {
      args14222.push(arguments[i__7280__auto___14250]);
      var G__14251 = i__7280__auto___14250 + 1;
      i__7280__auto___14250 = G__14251;
      continue;
    } else {
    }
    break;
  }
  var G__14228 = args14222.length;
  switch(G__14228) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14222.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__14253 = null;
    var G__14253__0 = function() {
      var G__14229 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14229) : f.call(null, G__14229);
    };
    var G__14253__1 = function(x) {
      var G__14230 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14230) : f.call(null, G__14230);
    };
    var G__14253__2 = function(x, y) {
      var G__14231 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14231) : f.call(null, G__14231);
    };
    var G__14253__3 = function(x, y, z) {
      var G__14232 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14232) : f.call(null, G__14232);
    };
    var G__14253__4 = function() {
      var G__14254__delegate = function(x, y, z, args) {
        var G__14233 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14233) : f.call(null, G__14233);
      };
      var G__14254 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14255__i = 0, G__14255__a = new Array(arguments.length - 3);
          while (G__14255__i < G__14255__a.length) {
            G__14255__a[G__14255__i] = arguments[G__14255__i + 3];
            ++G__14255__i;
          }
          args = new cljs.core.IndexedSeq(G__14255__a, 0);
        }
        return G__14254__delegate.call(this, x, y, z, args);
      };
      G__14254.cljs$lang$maxFixedArity = 3;
      G__14254.cljs$lang$applyTo = function(arglist__14256) {
        var x = cljs.core.first(arglist__14256);
        arglist__14256 = cljs.core.next(arglist__14256);
        var y = cljs.core.first(arglist__14256);
        arglist__14256 = cljs.core.next(arglist__14256);
        var z = cljs.core.first(arglist__14256);
        var args = cljs.core.rest(arglist__14256);
        return G__14254__delegate(x, y, z, args);
      };
      G__14254.cljs$core$IFn$_invoke$arity$variadic = G__14254__delegate;
      return G__14254;
    }();
    G__14253 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__14253__0.call(this);
        case 1:
          return G__14253__1.call(this, x);
        case 2:
          return G__14253__2.call(this, x, y);
        case 3:
          return G__14253__3.call(this, x, y, z);
        default:
          var G__14257 = null;
          if (arguments.length > 3) {
            var G__14258__i = 0, G__14258__a = new Array(arguments.length - 3);
            while (G__14258__i < G__14258__a.length) {
              G__14258__a[G__14258__i] = arguments[G__14258__i + 3];
              ++G__14258__i;
            }
            G__14257 = new cljs.core.IndexedSeq(G__14258__a, 0);
          }
          return G__14253__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14257);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14253.cljs$lang$maxFixedArity = 3;
    G__14253.cljs$lang$applyTo = G__14253__4.cljs$lang$applyTo;
    G__14253.cljs$core$IFn$_invoke$arity$0 = G__14253__0;
    G__14253.cljs$core$IFn$_invoke$arity$1 = G__14253__1;
    G__14253.cljs$core$IFn$_invoke$arity$2 = G__14253__2;
    G__14253.cljs$core$IFn$_invoke$arity$3 = G__14253__3;
    G__14253.cljs$core$IFn$_invoke$arity$variadic = G__14253__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14253;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__14259 = null;
    var G__14259__0 = function() {
      var G__14235 = function() {
        var G__14236 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14236) : g.call(null, G__14236);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14235) : f.call(null, G__14235);
    };
    var G__14259__1 = function(x) {
      var G__14238 = function() {
        var G__14239 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14239) : g.call(null, G__14239);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14238) : f.call(null, G__14238);
    };
    var G__14259__2 = function(x, y) {
      var G__14241 = function() {
        var G__14242 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14242) : g.call(null, G__14242);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14241) : f.call(null, G__14241);
    };
    var G__14259__3 = function(x, y, z) {
      var G__14244 = function() {
        var G__14245 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14245) : g.call(null, G__14245);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14244) : f.call(null, G__14244);
    };
    var G__14259__4 = function() {
      var G__14260__delegate = function(x, y, z, args) {
        var G__14247 = function() {
          var G__14248 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14248) : g.call(null, G__14248);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14247) : f.call(null, G__14247);
      };
      var G__14260 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14261__i = 0, G__14261__a = new Array(arguments.length - 3);
          while (G__14261__i < G__14261__a.length) {
            G__14261__a[G__14261__i] = arguments[G__14261__i + 3];
            ++G__14261__i;
          }
          args = new cljs.core.IndexedSeq(G__14261__a, 0);
        }
        return G__14260__delegate.call(this, x, y, z, args);
      };
      G__14260.cljs$lang$maxFixedArity = 3;
      G__14260.cljs$lang$applyTo = function(arglist__14262) {
        var x = cljs.core.first(arglist__14262);
        arglist__14262 = cljs.core.next(arglist__14262);
        var y = cljs.core.first(arglist__14262);
        arglist__14262 = cljs.core.next(arglist__14262);
        var z = cljs.core.first(arglist__14262);
        var args = cljs.core.rest(arglist__14262);
        return G__14260__delegate(x, y, z, args);
      };
      G__14260.cljs$core$IFn$_invoke$arity$variadic = G__14260__delegate;
      return G__14260;
    }();
    G__14259 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__14259__0.call(this);
        case 1:
          return G__14259__1.call(this, x);
        case 2:
          return G__14259__2.call(this, x, y);
        case 3:
          return G__14259__3.call(this, x, y, z);
        default:
          var G__14263 = null;
          if (arguments.length > 3) {
            var G__14264__i = 0, G__14264__a = new Array(arguments.length - 3);
            while (G__14264__i < G__14264__a.length) {
              G__14264__a[G__14264__i] = arguments[G__14264__i + 3];
              ++G__14264__i;
            }
            G__14263 = new cljs.core.IndexedSeq(G__14264__a, 0);
          }
          return G__14259__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14263);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14259.cljs$lang$maxFixedArity = 3;
    G__14259.cljs$lang$applyTo = G__14259__4.cljs$lang$applyTo;
    G__14259.cljs$core$IFn$_invoke$arity$0 = G__14259__0;
    G__14259.cljs$core$IFn$_invoke$arity$1 = G__14259__1;
    G__14259.cljs$core$IFn$_invoke$arity$2 = G__14259__2;
    G__14259.cljs$core$IFn$_invoke$arity$3 = G__14259__3;
    G__14259.cljs$core$IFn$_invoke$arity$variadic = G__14259__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14259;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__14265__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__14266 = cljs.core.first(fs__$2).call(null, ret);
            var G__14267 = cljs.core.next(fs__$2);
            ret = G__14266;
            fs__$2 = G__14267;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__14265 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__14268__i = 0, G__14268__a = new Array(arguments.length - 0);
          while (G__14268__i < G__14268__a.length) {
            G__14268__a[G__14268__i] = arguments[G__14268__i + 0];
            ++G__14268__i;
          }
          args = new cljs.core.IndexedSeq(G__14268__a, 0);
        }
        return G__14265__delegate.call(this, args);
      };
      G__14265.cljs$lang$maxFixedArity = 0;
      G__14265.cljs$lang$applyTo = function(arglist__14269) {
        var args = cljs.core.seq(arglist__14269);
        return G__14265__delegate(args);
      };
      G__14265.cljs$core$IFn$_invoke$arity$variadic = G__14265__delegate;
      return G__14265;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq14223) {
  var G__14224 = cljs.core.first(seq14223);
  var seq14223__$1 = cljs.core.next(seq14223);
  var G__14225 = cljs.core.first(seq14223__$1);
  var seq14223__$2 = cljs.core.next(seq14223__$1);
  var G__14226 = cljs.core.first(seq14223__$2);
  var seq14223__$3 = cljs.core.next(seq14223__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__14224, G__14225, G__14226, seq14223__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var args14270 = [];
  var len__7279__auto___14278 = arguments.length;
  var i__7280__auto___14279 = 0;
  while (true) {
    if (i__7280__auto___14279 < len__7279__auto___14278) {
      args14270.push(arguments[i__7280__auto___14279]);
      var G__14280 = i__7280__auto___14279 + 1;
      i__7280__auto___14279 = G__14280;
      continue;
    } else {
    }
    break;
  }
  var G__14277 = args14270.length;
  switch(G__14277) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14270.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7298__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__14282 = null;
    var G__14282__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__14282__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__14282__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__14282__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__14282__4 = function() {
      var G__14283__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__14283 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14284__i = 0, G__14284__a = new Array(arguments.length - 3);
          while (G__14284__i < G__14284__a.length) {
            G__14284__a[G__14284__i] = arguments[G__14284__i + 3];
            ++G__14284__i;
          }
          args = new cljs.core.IndexedSeq(G__14284__a, 0);
        }
        return G__14283__delegate.call(this, x, y, z, args);
      };
      G__14283.cljs$lang$maxFixedArity = 3;
      G__14283.cljs$lang$applyTo = function(arglist__14285) {
        var x = cljs.core.first(arglist__14285);
        arglist__14285 = cljs.core.next(arglist__14285);
        var y = cljs.core.first(arglist__14285);
        arglist__14285 = cljs.core.next(arglist__14285);
        var z = cljs.core.first(arglist__14285);
        var args = cljs.core.rest(arglist__14285);
        return G__14283__delegate(x, y, z, args);
      };
      G__14283.cljs$core$IFn$_invoke$arity$variadic = G__14283__delegate;
      return G__14283;
    }();
    G__14282 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__14282__0.call(this);
        case 1:
          return G__14282__1.call(this, x);
        case 2:
          return G__14282__2.call(this, x, y);
        case 3:
          return G__14282__3.call(this, x, y, z);
        default:
          var G__14286 = null;
          if (arguments.length > 3) {
            var G__14287__i = 0, G__14287__a = new Array(arguments.length - 3);
            while (G__14287__i < G__14287__a.length) {
              G__14287__a[G__14287__i] = arguments[G__14287__i + 3];
              ++G__14287__i;
            }
            G__14286 = new cljs.core.IndexedSeq(G__14287__a, 0);
          }
          return G__14282__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14286);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14282.cljs$lang$maxFixedArity = 3;
    G__14282.cljs$lang$applyTo = G__14282__4.cljs$lang$applyTo;
    G__14282.cljs$core$IFn$_invoke$arity$0 = G__14282__0;
    G__14282.cljs$core$IFn$_invoke$arity$1 = G__14282__1;
    G__14282.cljs$core$IFn$_invoke$arity$2 = G__14282__2;
    G__14282.cljs$core$IFn$_invoke$arity$3 = G__14282__3;
    G__14282.cljs$core$IFn$_invoke$arity$variadic = G__14282__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14282;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__14288 = null;
    var G__14288__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__14288__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__14288__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__14288__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__14288__4 = function() {
      var G__14289__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__14289 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14290__i = 0, G__14290__a = new Array(arguments.length - 3);
          while (G__14290__i < G__14290__a.length) {
            G__14290__a[G__14290__i] = arguments[G__14290__i + 3];
            ++G__14290__i;
          }
          args = new cljs.core.IndexedSeq(G__14290__a, 0);
        }
        return G__14289__delegate.call(this, x, y, z, args);
      };
      G__14289.cljs$lang$maxFixedArity = 3;
      G__14289.cljs$lang$applyTo = function(arglist__14291) {
        var x = cljs.core.first(arglist__14291);
        arglist__14291 = cljs.core.next(arglist__14291);
        var y = cljs.core.first(arglist__14291);
        arglist__14291 = cljs.core.next(arglist__14291);
        var z = cljs.core.first(arglist__14291);
        var args = cljs.core.rest(arglist__14291);
        return G__14289__delegate(x, y, z, args);
      };
      G__14289.cljs$core$IFn$_invoke$arity$variadic = G__14289__delegate;
      return G__14289;
    }();
    G__14288 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__14288__0.call(this);
        case 1:
          return G__14288__1.call(this, x);
        case 2:
          return G__14288__2.call(this, x, y);
        case 3:
          return G__14288__3.call(this, x, y, z);
        default:
          var G__14292 = null;
          if (arguments.length > 3) {
            var G__14293__i = 0, G__14293__a = new Array(arguments.length - 3);
            while (G__14293__i < G__14293__a.length) {
              G__14293__a[G__14293__i] = arguments[G__14293__i + 3];
              ++G__14293__i;
            }
            G__14292 = new cljs.core.IndexedSeq(G__14293__a, 0);
          }
          return G__14288__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14292);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14288.cljs$lang$maxFixedArity = 3;
    G__14288.cljs$lang$applyTo = G__14288__4.cljs$lang$applyTo;
    G__14288.cljs$core$IFn$_invoke$arity$0 = G__14288__0;
    G__14288.cljs$core$IFn$_invoke$arity$1 = G__14288__1;
    G__14288.cljs$core$IFn$_invoke$arity$2 = G__14288__2;
    G__14288.cljs$core$IFn$_invoke$arity$3 = G__14288__3;
    G__14288.cljs$core$IFn$_invoke$arity$variadic = G__14288__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14288;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__14294 = null;
    var G__14294__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__14294__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__14294__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__14294__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__14294__4 = function() {
      var G__14295__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__14295 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14296__i = 0, G__14296__a = new Array(arguments.length - 3);
          while (G__14296__i < G__14296__a.length) {
            G__14296__a[G__14296__i] = arguments[G__14296__i + 3];
            ++G__14296__i;
          }
          args = new cljs.core.IndexedSeq(G__14296__a, 0);
        }
        return G__14295__delegate.call(this, x, y, z, args);
      };
      G__14295.cljs$lang$maxFixedArity = 3;
      G__14295.cljs$lang$applyTo = function(arglist__14297) {
        var x = cljs.core.first(arglist__14297);
        arglist__14297 = cljs.core.next(arglist__14297);
        var y = cljs.core.first(arglist__14297);
        arglist__14297 = cljs.core.next(arglist__14297);
        var z = cljs.core.first(arglist__14297);
        var args = cljs.core.rest(arglist__14297);
        return G__14295__delegate(x, y, z, args);
      };
      G__14295.cljs$core$IFn$_invoke$arity$variadic = G__14295__delegate;
      return G__14295;
    }();
    G__14294 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__14294__0.call(this);
        case 1:
          return G__14294__1.call(this, x);
        case 2:
          return G__14294__2.call(this, x, y);
        case 3:
          return G__14294__3.call(this, x, y, z);
        default:
          var G__14298 = null;
          if (arguments.length > 3) {
            var G__14299__i = 0, G__14299__a = new Array(arguments.length - 3);
            while (G__14299__i < G__14299__a.length) {
              G__14299__a[G__14299__i] = arguments[G__14299__i + 3];
              ++G__14299__i;
            }
            G__14298 = new cljs.core.IndexedSeq(G__14299__a, 0);
          }
          return G__14294__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14298);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14294.cljs$lang$maxFixedArity = 3;
    G__14294.cljs$lang$applyTo = G__14294__4.cljs$lang$applyTo;
    G__14294.cljs$core$IFn$_invoke$arity$0 = G__14294__0;
    G__14294.cljs$core$IFn$_invoke$arity$1 = G__14294__1;
    G__14294.cljs$core$IFn$_invoke$arity$2 = G__14294__2;
    G__14294.cljs$core$IFn$_invoke$arity$3 = G__14294__3;
    G__14294.cljs$core$IFn$_invoke$arity$variadic = G__14294__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14294;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__14300__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__14300 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__14301__i = 0, G__14301__a = new Array(arguments.length - 0);
        while (G__14301__i < G__14301__a.length) {
          G__14301__a[G__14301__i] = arguments[G__14301__i + 0];
          ++G__14301__i;
        }
        args = new cljs.core.IndexedSeq(G__14301__a, 0);
      }
      return G__14300__delegate.call(this, args);
    };
    G__14300.cljs$lang$maxFixedArity = 0;
    G__14300.cljs$lang$applyTo = function(arglist__14302) {
      var args = cljs.core.seq(arglist__14302);
      return G__14300__delegate(args);
    };
    G__14300.cljs$core$IFn$_invoke$arity$variadic = G__14300__delegate;
    return G__14300;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq14271) {
  var G__14272 = cljs.core.first(seq14271);
  var seq14271__$1 = cljs.core.next(seq14271);
  var G__14273 = cljs.core.first(seq14271__$1);
  var seq14271__$2 = cljs.core.next(seq14271__$1);
  var G__14274 = cljs.core.first(seq14271__$2);
  var seq14271__$3 = cljs.core.next(seq14271__$2);
  var G__14275 = cljs.core.first(seq14271__$3);
  var seq14271__$4 = cljs.core.next(seq14271__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__14272, G__14273, G__14274, G__14275, seq14271__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var args14303 = [];
  var len__7279__auto___14322 = arguments.length;
  var i__7280__auto___14323 = 0;
  while (true) {
    if (i__7280__auto___14323 < len__7279__auto___14322) {
      args14303.push(arguments[i__7280__auto___14323]);
      var G__14324 = i__7280__auto___14323 + 1;
      i__7280__auto___14323 = G__14324;
      continue;
    } else {
    }
    break;
  }
  var G__14305 = args14303.length;
  switch(G__14305) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14303.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__14326 = null;
    var G__14326__1 = function(a) {
      var G__14306 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14306) : f.call(null, G__14306);
    };
    var G__14326__2 = function(a, b) {
      var G__14307 = a == null ? x : a;
      var G__14308 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14307, G__14308) : f.call(null, G__14307, G__14308);
    };
    var G__14326__3 = function(a, b, c) {
      var G__14309 = a == null ? x : a;
      var G__14310 = b;
      var G__14311 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14309, G__14310, G__14311) : f.call(null, G__14309, G__14310, G__14311);
    };
    var G__14326__4 = function() {
      var G__14327__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__14327 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__14328__i = 0, G__14328__a = new Array(arguments.length - 3);
          while (G__14328__i < G__14328__a.length) {
            G__14328__a[G__14328__i] = arguments[G__14328__i + 3];
            ++G__14328__i;
          }
          ds = new cljs.core.IndexedSeq(G__14328__a, 0);
        }
        return G__14327__delegate.call(this, a, b, c, ds);
      };
      G__14327.cljs$lang$maxFixedArity = 3;
      G__14327.cljs$lang$applyTo = function(arglist__14329) {
        var a = cljs.core.first(arglist__14329);
        arglist__14329 = cljs.core.next(arglist__14329);
        var b = cljs.core.first(arglist__14329);
        arglist__14329 = cljs.core.next(arglist__14329);
        var c = cljs.core.first(arglist__14329);
        var ds = cljs.core.rest(arglist__14329);
        return G__14327__delegate(a, b, c, ds);
      };
      G__14327.cljs$core$IFn$_invoke$arity$variadic = G__14327__delegate;
      return G__14327;
    }();
    G__14326 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__14326__1.call(this, a);
        case 2:
          return G__14326__2.call(this, a, b);
        case 3:
          return G__14326__3.call(this, a, b, c);
        default:
          var G__14330 = null;
          if (arguments.length > 3) {
            var G__14331__i = 0, G__14331__a = new Array(arguments.length - 3);
            while (G__14331__i < G__14331__a.length) {
              G__14331__a[G__14331__i] = arguments[G__14331__i + 3];
              ++G__14331__i;
            }
            G__14330 = new cljs.core.IndexedSeq(G__14331__a, 0);
          }
          return G__14326__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__14330);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14326.cljs$lang$maxFixedArity = 3;
    G__14326.cljs$lang$applyTo = G__14326__4.cljs$lang$applyTo;
    G__14326.cljs$core$IFn$_invoke$arity$1 = G__14326__1;
    G__14326.cljs$core$IFn$_invoke$arity$2 = G__14326__2;
    G__14326.cljs$core$IFn$_invoke$arity$3 = G__14326__3;
    G__14326.cljs$core$IFn$_invoke$arity$variadic = G__14326__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14326;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__14332 = null;
    var G__14332__2 = function(a, b) {
      var G__14312 = a == null ? x : a;
      var G__14313 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14312, G__14313) : f.call(null, G__14312, G__14313);
    };
    var G__14332__3 = function(a, b, c) {
      var G__14314 = a == null ? x : a;
      var G__14315 = b == null ? y : b;
      var G__14316 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14314, G__14315, G__14316) : f.call(null, G__14314, G__14315, G__14316);
    };
    var G__14332__4 = function() {
      var G__14333__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__14333 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__14334__i = 0, G__14334__a = new Array(arguments.length - 3);
          while (G__14334__i < G__14334__a.length) {
            G__14334__a[G__14334__i] = arguments[G__14334__i + 3];
            ++G__14334__i;
          }
          ds = new cljs.core.IndexedSeq(G__14334__a, 0);
        }
        return G__14333__delegate.call(this, a, b, c, ds);
      };
      G__14333.cljs$lang$maxFixedArity = 3;
      G__14333.cljs$lang$applyTo = function(arglist__14335) {
        var a = cljs.core.first(arglist__14335);
        arglist__14335 = cljs.core.next(arglist__14335);
        var b = cljs.core.first(arglist__14335);
        arglist__14335 = cljs.core.next(arglist__14335);
        var c = cljs.core.first(arglist__14335);
        var ds = cljs.core.rest(arglist__14335);
        return G__14333__delegate(a, b, c, ds);
      };
      G__14333.cljs$core$IFn$_invoke$arity$variadic = G__14333__delegate;
      return G__14333;
    }();
    G__14332 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__14332__2.call(this, a, b);
        case 3:
          return G__14332__3.call(this, a, b, c);
        default:
          var G__14336 = null;
          if (arguments.length > 3) {
            var G__14337__i = 0, G__14337__a = new Array(arguments.length - 3);
            while (G__14337__i < G__14337__a.length) {
              G__14337__a[G__14337__i] = arguments[G__14337__i + 3];
              ++G__14337__i;
            }
            G__14336 = new cljs.core.IndexedSeq(G__14337__a, 0);
          }
          return G__14332__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__14336);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14332.cljs$lang$maxFixedArity = 3;
    G__14332.cljs$lang$applyTo = G__14332__4.cljs$lang$applyTo;
    G__14332.cljs$core$IFn$_invoke$arity$2 = G__14332__2;
    G__14332.cljs$core$IFn$_invoke$arity$3 = G__14332__3;
    G__14332.cljs$core$IFn$_invoke$arity$variadic = G__14332__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14332;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__14338 = null;
    var G__14338__2 = function(a, b) {
      var G__14317 = a == null ? x : a;
      var G__14318 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14317, G__14318) : f.call(null, G__14317, G__14318);
    };
    var G__14338__3 = function(a, b, c) {
      var G__14319 = a == null ? x : a;
      var G__14320 = b == null ? y : b;
      var G__14321 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14319, G__14320, G__14321) : f.call(null, G__14319, G__14320, G__14321);
    };
    var G__14338__4 = function() {
      var G__14339__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__14339 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__14340__i = 0, G__14340__a = new Array(arguments.length - 3);
          while (G__14340__i < G__14340__a.length) {
            G__14340__a[G__14340__i] = arguments[G__14340__i + 3];
            ++G__14340__i;
          }
          ds = new cljs.core.IndexedSeq(G__14340__a, 0);
        }
        return G__14339__delegate.call(this, a, b, c, ds);
      };
      G__14339.cljs$lang$maxFixedArity = 3;
      G__14339.cljs$lang$applyTo = function(arglist__14341) {
        var a = cljs.core.first(arglist__14341);
        arglist__14341 = cljs.core.next(arglist__14341);
        var b = cljs.core.first(arglist__14341);
        arglist__14341 = cljs.core.next(arglist__14341);
        var c = cljs.core.first(arglist__14341);
        var ds = cljs.core.rest(arglist__14341);
        return G__14339__delegate(a, b, c, ds);
      };
      G__14339.cljs$core$IFn$_invoke$arity$variadic = G__14339__delegate;
      return G__14339;
    }();
    G__14338 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__14338__2.call(this, a, b);
        case 3:
          return G__14338__3.call(this, a, b, c);
        default:
          var G__14342 = null;
          if (arguments.length > 3) {
            var G__14343__i = 0, G__14343__a = new Array(arguments.length - 3);
            while (G__14343__i < G__14343__a.length) {
              G__14343__a[G__14343__i] = arguments[G__14343__i + 3];
              ++G__14343__i;
            }
            G__14342 = new cljs.core.IndexedSeq(G__14343__a, 0);
          }
          return G__14338__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__14342);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14338.cljs$lang$maxFixedArity = 3;
    G__14338.cljs$lang$applyTo = G__14338__4.cljs$lang$applyTo;
    G__14338.cljs$core$IFn$_invoke$arity$2 = G__14338__2;
    G__14338.cljs$core$IFn$_invoke$arity$3 = G__14338__3;
    G__14338.cljs$core$IFn$_invoke$arity$variadic = G__14338__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14338;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var args14344 = [];
  var len__7279__auto___14377 = arguments.length;
  var i__7280__auto___14378 = 0;
  while (true) {
    if (i__7280__auto___14378 < len__7279__auto___14377) {
      args14344.push(arguments[i__7280__auto___14378]);
      var G__14379 = i__7280__auto___14378 + 1;
      i__7280__auto___14378 = G__14379;
      continue;
    } else {
    }
    break;
  }
  var G__14346 = args14344.length;
  switch(G__14346) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14344.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__14381 = null;
        var G__14381__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14381__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__14381__2 = function(result, input) {
          var G__14349 = result;
          var G__14350 = function() {
            var G__14351 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__14352 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14351, G__14352) : f.call(null, G__14351, G__14352);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14349, G__14350) : rf.call(null, G__14349, G__14350);
        };
        G__14381 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__14381__0.call(this);
            case 1:
              return G__14381__1.call(this, result);
            case 2:
              return G__14381__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14381.cljs$core$IFn$_invoke$arity$0 = G__14381__0;
        G__14381.cljs$core$IFn$_invoke$arity$1 = G__14381__1;
        G__14381.cljs$core$IFn$_invoke$arity$2 = G__14381__2;
        return G__14381;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__7124__auto___14382 = size;
          var i_14383 = 0;
          while (true) {
            if (i_14383 < n__7124__auto___14382) {
              cljs.core.chunk_append(b, function() {
                var G__14373 = idx + i_14383;
                var G__14374 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14383);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14373, G__14374) : f.call(null, G__14373, G__14374);
              }());
              var G__14384 = i_14383 + 1;
              i_14383 = G__14384;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__14375 = idx;
            var G__14376 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14375, G__14376) : f.call(null, G__14375, G__14376);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var args14385 = [];
  var len__7279__auto___14390 = arguments.length;
  var i__7280__auto___14391 = 0;
  while (true) {
    if (i__7280__auto___14391 < len__7279__auto___14390) {
      args14385.push(arguments[i__7280__auto___14391]);
      var G__14392 = i__7280__auto___14391 + 1;
      i__7280__auto___14391 = G__14392;
      continue;
    } else {
    }
    break;
  }
  var G__14387 = args14385.length;
  switch(G__14387) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14385.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__14394 = null;
      var G__14394__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__14394__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__14394__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__14394 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__14394__0.call(this);
          case 1:
            return G__14394__1.call(this, result);
          case 2:
            return G__14394__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14394.cljs$core$IFn$_invoke$arity$0 = G__14394__0;
      G__14394.cljs$core$IFn$_invoke$arity$1 = G__14394__1;
      G__14394.cljs$core$IFn$_invoke$arity$2 = G__14394__2;
      return G__14394;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__7124__auto___14395 = size;
        var i_14396 = 0;
        while (true) {
          if (i_14396 < n__7124__auto___14395) {
            var x_14397 = function() {
              var G__14388 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14396);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14388) : f.call(null, G__14388);
            }();
            if (x_14397 == null) {
            } else {
              cljs.core.chunk_append(b, x_14397);
            }
            var G__14398 = i_14396 + 1;
            i_14396 = G__14398;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__14389 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14389) : f.call(null, G__14389);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__14399 = cljs.core.seq(self__.watches);
  var chunk__14400 = null;
  var count__14401 = 0;
  var i__14402 = 0;
  while (true) {
    if (i__14402 < count__14401) {
      var vec__14403 = chunk__14400.cljs$core$IIndexed$_nth$arity$2(null, i__14402);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14403, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14403, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__14405 = seq__14399;
      var G__14406 = chunk__14400;
      var G__14407 = count__14401;
      var G__14408 = i__14402 + 1;
      seq__14399 = G__14405;
      chunk__14400 = G__14406;
      count__14401 = G__14407;
      i__14402 = G__14408;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__14399);
      if (temp__4657__auto__) {
        var seq__14399__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14399__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__14399__$1);
          var G__14409 = cljs.core.chunk_rest(seq__14399__$1);
          var G__14410 = c__7021__auto__;
          var G__14411 = cljs.core.count(c__7021__auto__);
          var G__14412 = 0;
          seq__14399 = G__14409;
          chunk__14400 = G__14410;
          count__14401 = G__14411;
          i__14402 = G__14412;
          continue;
        } else {
          var vec__14404 = cljs.core.first(seq__14399__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14404, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14404, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__14413 = cljs.core.next(seq__14399__$1);
          var G__14414 = null;
          var G__14415 = 0;
          var G__14416 = 0;
          seq__14399 = G__14413;
          chunk__14400 = G__14414;
          count__14401 = G__14415;
          i__14402 = G__14416;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var args14417 = [];
  var len__7279__auto___14425 = arguments.length;
  var i__7280__auto___14426 = 0;
  while (true) {
    if (i__7280__auto___14426 < len__7279__auto___14425) {
      args14417.push(arguments[i__7280__auto___14426]);
      var G__14427 = i__7280__auto___14426 + 1;
      i__7280__auto___14426 = G__14427;
      continue;
    } else {
    }
    break;
  }
  var G__14421 = args14417.length;
  switch(G__14421) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14417.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7298__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__14422) {
  var map__14423 = p__14422;
  var map__14423__$1 = (!(map__14423 == null) ? map__14423.cljs$lang$protocol_mask$partition0$ & 64 || map__14423.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__14423) : map__14423;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14423__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14423__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq14418) {
  var G__14419 = cljs.core.first(seq14418);
  var seq14418__$1 = cljs.core.next(seq14418);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__14419, seq14418__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str("(validate new-value)")].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var args14429 = [];
  var len__7279__auto___14443 = arguments.length;
  var i__7280__auto___14444 = 0;
  while (true) {
    if (i__7280__auto___14444 < len__7279__auto___14443) {
      args14429.push(arguments[i__7280__auto___14444]);
      var G__14445 = i__7280__auto___14444 + 1;
      i__7280__auto___14444 = G__14445;
      continue;
    } else {
    }
    break;
  }
  var G__14436 = args14429.length;
  switch(G__14436) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14429.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7298__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__14437 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14437) : f.call(null, G__14437);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__14438 = a.state;
      var G__14439 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14438, G__14439) : f.call(null, G__14438, G__14439);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__14440 = a.state;
      var G__14441 = x;
      var G__14442 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14440, G__14441, G__14442) : f.call(null, G__14440, G__14441, G__14442);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq14430) {
  var G__14431 = cljs.core.first(seq14430);
  var seq14430__$1 = cljs.core.next(seq14430);
  var G__14432 = cljs.core.first(seq14430__$1);
  var seq14430__$2 = cljs.core.next(seq14430__$1);
  var G__14433 = cljs.core.first(seq14430__$2);
  var seq14430__$3 = cljs.core.next(seq14430__$2);
  var G__14434 = cljs.core.first(seq14430__$3);
  var seq14430__$4 = cljs.core.next(seq14430__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__14431, G__14432, G__14433, G__14434, seq14430__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var args14447 = [];
  var len__7279__auto___14478 = arguments.length;
  var i__7280__auto___14479 = 0;
  while (true) {
    if (i__7280__auto___14479 < len__7279__auto___14478) {
      args14447.push(arguments[i__7280__auto___14479]);
      var G__14480 = i__7280__auto___14479 + 1;
      i__7280__auto___14479 = G__14480;
      continue;
    } else {
    }
    break;
  }
  var G__14449 = args14447.length;
  switch(G__14449) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14447.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__14482 = null;
        var G__14482__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14482__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__14482__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__14482 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__14482__0.call(this);
            case 1:
              return G__14482__1.call(this, result);
            case 2:
              return G__14482__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14482.cljs$core$IFn$_invoke$arity$0 = G__14482__0;
        G__14482.cljs$core$IFn$_invoke$arity$1 = G__14482__1;
        G__14482.cljs$core$IFn$_invoke$arity$2 = G__14482__2;
        return G__14482;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__7124__auto___14483 = size;
          var i_14484 = 0;
          while (true) {
            if (i_14484 < n__7124__auto___14483) {
              var x_14485 = function() {
                var G__14474 = idx + i_14484;
                var G__14475 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14484);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14474, G__14475) : f.call(null, G__14474, G__14475);
              }();
              if (x_14485 == null) {
              } else {
                cljs.core.chunk_append(b, x_14485);
              }
              var G__14486 = i_14484 + 1;
              i_14484 = G__14486;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__14476 = idx;
            var G__14477 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14476, G__14477) : f.call(null, G__14476, G__14477);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var args14493 = [];
  var len__7279__auto___14500 = arguments.length;
  var i__7280__auto___14501 = 0;
  while (true) {
    if (i__7280__auto___14501 < len__7279__auto___14500) {
      args14493.push(arguments[i__7280__auto___14501]);
      var G__14502 = i__7280__auto___14501 + 1;
      i__7280__auto___14501 = G__14502;
      continue;
    } else {
    }
    break;
  }
  var G__14499 = args14493.length;
  switch(G__14499) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14493.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__14504__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__6198__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__6198__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__6198__auto__;
          }
        }());
      };
      var G__14504 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14505__i = 0, G__14505__a = new Array(arguments.length - 3);
          while (G__14505__i < G__14505__a.length) {
            G__14505__a[G__14505__i] = arguments[G__14505__i + 3];
            ++G__14505__i;
          }
          args = new cljs.core.IndexedSeq(G__14505__a, 0);
        }
        return G__14504__delegate.call(this, x, y, z, args);
      };
      G__14504.cljs$lang$maxFixedArity = 3;
      G__14504.cljs$lang$applyTo = function(arglist__14506) {
        var x = cljs.core.first(arglist__14506);
        arglist__14506 = cljs.core.next(arglist__14506);
        var y = cljs.core.first(arglist__14506);
        arglist__14506 = cljs.core.next(arglist__14506);
        var z = cljs.core.first(arglist__14506);
        var args = cljs.core.rest(arglist__14506);
        return G__14504__delegate(x, y, z, args);
      };
      G__14504.cljs$core$IFn$_invoke$arity$variadic = G__14504__delegate;
      return G__14504;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__14507 = null;
          if (arguments.length > 3) {
            var G__14508__i = 0, G__14508__a = new Array(arguments.length - 3);
            while (G__14508__i < G__14508__a.length) {
              G__14508__a[G__14508__i] = arguments[G__14508__i + 3];
              ++G__14508__i;
            }
            G__14507 = new cljs.core.IndexedSeq(G__14508__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14507);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            var and__6198__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__6198__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__6198__auto____$2;
            }
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            var and__6198__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__6198__auto____$2)) {
              var and__6198__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__6198__auto____$3)) {
                var and__6198__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__6198__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__6198__auto____$4;
                }
              } else {
                return and__6198__auto____$3;
              }
            } else {
              return and__6198__auto____$2;
            }
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__14509__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__6198__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__6198__auto__)) {
            return cljs.core.every_QMARK_(function(and__6198__auto__) {
              return function(p1__14487_SHARP_) {
                var and__6198__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__14487_SHARP_) : p1.call(null, p1__14487_SHARP_);
                if (cljs.core.truth_(and__6198__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__14487_SHARP_) : p2.call(null, p1__14487_SHARP_);
                } else {
                  return and__6198__auto____$1;
                }
              };
            }(and__6198__auto__), args);
          } else {
            return and__6198__auto__;
          }
        }());
      };
      var G__14509 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14510__i = 0, G__14510__a = new Array(arguments.length - 3);
          while (G__14510__i < G__14510__a.length) {
            G__14510__a[G__14510__i] = arguments[G__14510__i + 3];
            ++G__14510__i;
          }
          args = new cljs.core.IndexedSeq(G__14510__a, 0);
        }
        return G__14509__delegate.call(this, x, y, z, args);
      };
      G__14509.cljs$lang$maxFixedArity = 3;
      G__14509.cljs$lang$applyTo = function(arglist__14511) {
        var x = cljs.core.first(arglist__14511);
        arglist__14511 = cljs.core.next(arglist__14511);
        var y = cljs.core.first(arglist__14511);
        arglist__14511 = cljs.core.next(arglist__14511);
        var z = cljs.core.first(arglist__14511);
        var args = cljs.core.rest(arglist__14511);
        return G__14509__delegate(x, y, z, args);
      };
      G__14509.cljs$core$IFn$_invoke$arity$variadic = G__14509__delegate;
      return G__14509;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__14512 = null;
          if (arguments.length > 3) {
            var G__14513__i = 0, G__14513__a = new Array(arguments.length - 3);
            while (G__14513__i < G__14513__a.length) {
              G__14513__a[G__14513__i] = arguments[G__14513__i + 3];
              ++G__14513__i;
            }
            G__14512 = new cljs.core.IndexedSeq(G__14513__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14512);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            var and__6198__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__6198__auto____$2)) {
              var and__6198__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__6198__auto____$3)) {
                var and__6198__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__6198__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__6198__auto____$4;
                }
              } else {
                return and__6198__auto____$3;
              }
            } else {
              return and__6198__auto____$2;
            }
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            var and__6198__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__6198__auto____$2)) {
              var and__6198__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__6198__auto____$3)) {
                var and__6198__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__6198__auto____$4)) {
                  var and__6198__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__6198__auto____$5)) {
                    var and__6198__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__6198__auto____$6)) {
                      var and__6198__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__6198__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__6198__auto____$7;
                      }
                    } else {
                      return and__6198__auto____$6;
                    }
                  } else {
                    return and__6198__auto____$5;
                  }
                } else {
                  return and__6198__auto____$4;
                }
              } else {
                return and__6198__auto____$3;
              }
            } else {
              return and__6198__auto____$2;
            }
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__14514__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__6198__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__6198__auto__)) {
            return cljs.core.every_QMARK_(function(and__6198__auto__) {
              return function(p1__14488_SHARP_) {
                var and__6198__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__14488_SHARP_) : p1.call(null, p1__14488_SHARP_);
                if (cljs.core.truth_(and__6198__auto____$1)) {
                  var and__6198__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__14488_SHARP_) : p2.call(null, p1__14488_SHARP_);
                  if (cljs.core.truth_(and__6198__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__14488_SHARP_) : p3.call(null, p1__14488_SHARP_);
                  } else {
                    return and__6198__auto____$2;
                  }
                } else {
                  return and__6198__auto____$1;
                }
              };
            }(and__6198__auto__), args);
          } else {
            return and__6198__auto__;
          }
        }());
      };
      var G__14514 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14515__i = 0, G__14515__a = new Array(arguments.length - 3);
          while (G__14515__i < G__14515__a.length) {
            G__14515__a[G__14515__i] = arguments[G__14515__i + 3];
            ++G__14515__i;
          }
          args = new cljs.core.IndexedSeq(G__14515__a, 0);
        }
        return G__14514__delegate.call(this, x, y, z, args);
      };
      G__14514.cljs$lang$maxFixedArity = 3;
      G__14514.cljs$lang$applyTo = function(arglist__14516) {
        var x = cljs.core.first(arglist__14516);
        arglist__14516 = cljs.core.next(arglist__14516);
        var y = cljs.core.first(arglist__14516);
        arglist__14516 = cljs.core.next(arglist__14516);
        var z = cljs.core.first(arglist__14516);
        var args = cljs.core.rest(arglist__14516);
        return G__14514__delegate(x, y, z, args);
      };
      G__14514.cljs$core$IFn$_invoke$arity$variadic = G__14514__delegate;
      return G__14514;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__14517 = null;
          if (arguments.length > 3) {
            var G__14518__i = 0, G__14518__a = new Array(arguments.length - 3);
            while (G__14518__i < G__14518__a.length) {
              G__14518__a[G__14518__i] = arguments[G__14518__i + 3];
              ++G__14518__i;
            }
            G__14517 = new cljs.core.IndexedSeq(G__14518__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14517);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__14489_SHARP_) {
            return p1__14489_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14489_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__14489_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__14490_SHARP_) {
            var and__6198__auto__ = p1__14490_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14490_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__14490_SHARP_.call(null, x);
            if (cljs.core.truth_(and__6198__auto__)) {
              return p1__14490_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14490_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__14490_SHARP_.call(null, y);
            } else {
              return and__6198__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__14491_SHARP_) {
            var and__6198__auto__ = p1__14491_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14491_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__14491_SHARP_.call(null, x);
            if (cljs.core.truth_(and__6198__auto__)) {
              var and__6198__auto____$1 = p1__14491_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14491_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__14491_SHARP_.call(null, y);
              if (cljs.core.truth_(and__6198__auto____$1)) {
                return p1__14491_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14491_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__14491_SHARP_.call(null, z);
              } else {
                return and__6198__auto____$1;
              }
            } else {
              return and__6198__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__14519__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__6198__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__6198__auto__)) {
              return cljs.core.every_QMARK_(function(and__6198__auto__, ps__$1) {
                return function(p1__14492_SHARP_) {
                  return cljs.core.every_QMARK_(p1__14492_SHARP_, args);
                };
              }(and__6198__auto__, ps__$1), ps__$1);
            } else {
              return and__6198__auto__;
            }
          }());
        };
        var G__14519 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14520__i = 0, G__14520__a = new Array(arguments.length - 3);
            while (G__14520__i < G__14520__a.length) {
              G__14520__a[G__14520__i] = arguments[G__14520__i + 3];
              ++G__14520__i;
            }
            args = new cljs.core.IndexedSeq(G__14520__a, 0);
          }
          return G__14519__delegate.call(this, x, y, z, args);
        };
        G__14519.cljs$lang$maxFixedArity = 3;
        G__14519.cljs$lang$applyTo = function(arglist__14521) {
          var x = cljs.core.first(arglist__14521);
          arglist__14521 = cljs.core.next(arglist__14521);
          var y = cljs.core.first(arglist__14521);
          arglist__14521 = cljs.core.next(arglist__14521);
          var z = cljs.core.first(arglist__14521);
          var args = cljs.core.rest(arglist__14521);
          return G__14519__delegate(x, y, z, args);
        };
        G__14519.cljs$core$IFn$_invoke$arity$variadic = G__14519__delegate;
        return G__14519;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__14522 = null;
            if (arguments.length > 3) {
              var G__14523__i = 0, G__14523__a = new Array(arguments.length - 3);
              while (G__14523__i < G__14523__a.length) {
                G__14523__a[G__14523__i] = arguments[G__14523__i + 3];
                ++G__14523__i;
              }
              G__14522 = new cljs.core.IndexedSeq(G__14523__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14522);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq14494) {
  var G__14495 = cljs.core.first(seq14494);
  var seq14494__$1 = cljs.core.next(seq14494);
  var G__14496 = cljs.core.first(seq14494__$1);
  var seq14494__$2 = cljs.core.next(seq14494__$1);
  var G__14497 = cljs.core.first(seq14494__$2);
  var seq14494__$3 = cljs.core.next(seq14494__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__14495, G__14496, G__14497, seq14494__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var args14530 = [];
  var len__7279__auto___14537 = arguments.length;
  var i__7280__auto___14538 = 0;
  while (true) {
    if (i__7280__auto___14538 < len__7279__auto___14537) {
      args14530.push(arguments[i__7280__auto___14538]);
      var G__14539 = i__7280__auto___14538 + 1;
      i__7280__auto___14538 = G__14539;
      continue;
    } else {
    }
    break;
  }
  var G__14536 = args14530.length;
  switch(G__14536) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14530.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__6210__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__6210__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__14541__delegate = function(x, y, z, args) {
        var or__6210__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__14541 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14542__i = 0, G__14542__a = new Array(arguments.length - 3);
          while (G__14542__i < G__14542__a.length) {
            G__14542__a[G__14542__i] = arguments[G__14542__i + 3];
            ++G__14542__i;
          }
          args = new cljs.core.IndexedSeq(G__14542__a, 0);
        }
        return G__14541__delegate.call(this, x, y, z, args);
      };
      G__14541.cljs$lang$maxFixedArity = 3;
      G__14541.cljs$lang$applyTo = function(arglist__14543) {
        var x = cljs.core.first(arglist__14543);
        arglist__14543 = cljs.core.next(arglist__14543);
        var y = cljs.core.first(arglist__14543);
        arglist__14543 = cljs.core.next(arglist__14543);
        var z = cljs.core.first(arglist__14543);
        var args = cljs.core.rest(arglist__14543);
        return G__14541__delegate(x, y, z, args);
      };
      G__14541.cljs$core$IFn$_invoke$arity$variadic = G__14541__delegate;
      return G__14541;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__14544 = null;
          if (arguments.length > 3) {
            var G__14545__i = 0, G__14545__a = new Array(arguments.length - 3);
            while (G__14545__i < G__14545__a.length) {
              G__14545__a[G__14545__i] = arguments[G__14545__i + 3];
              ++G__14545__i;
            }
            G__14544 = new cljs.core.IndexedSeq(G__14545__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14544);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          var or__6210__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__6210__auto____$2)) {
            return or__6210__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          var or__6210__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__6210__auto____$2)) {
            return or__6210__auto____$2;
          } else {
            var or__6210__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__6210__auto____$3)) {
              return or__6210__auto____$3;
            } else {
              var or__6210__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__6210__auto____$4)) {
                return or__6210__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__14546__delegate = function(x, y, z, args) {
        var or__6210__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return cljs.core.some(function(or__6210__auto__) {
            return function(p1__14524_SHARP_) {
              var or__6210__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__14524_SHARP_) : p1.call(null, p1__14524_SHARP_);
              if (cljs.core.truth_(or__6210__auto____$1)) {
                return or__6210__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__14524_SHARP_) : p2.call(null, p1__14524_SHARP_);
              }
            };
          }(or__6210__auto__), args);
        }
      };
      var G__14546 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14547__i = 0, G__14547__a = new Array(arguments.length - 3);
          while (G__14547__i < G__14547__a.length) {
            G__14547__a[G__14547__i] = arguments[G__14547__i + 3];
            ++G__14547__i;
          }
          args = new cljs.core.IndexedSeq(G__14547__a, 0);
        }
        return G__14546__delegate.call(this, x, y, z, args);
      };
      G__14546.cljs$lang$maxFixedArity = 3;
      G__14546.cljs$lang$applyTo = function(arglist__14548) {
        var x = cljs.core.first(arglist__14548);
        arglist__14548 = cljs.core.next(arglist__14548);
        var y = cljs.core.first(arglist__14548);
        arglist__14548 = cljs.core.next(arglist__14548);
        var z = cljs.core.first(arglist__14548);
        var args = cljs.core.rest(arglist__14548);
        return G__14546__delegate(x, y, z, args);
      };
      G__14546.cljs$core$IFn$_invoke$arity$variadic = G__14546__delegate;
      return G__14546;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__14549 = null;
          if (arguments.length > 3) {
            var G__14550__i = 0, G__14550__a = new Array(arguments.length - 3);
            while (G__14550__i < G__14550__a.length) {
              G__14550__a[G__14550__i] = arguments[G__14550__i + 3];
              ++G__14550__i;
            }
            G__14549 = new cljs.core.IndexedSeq(G__14550__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14549);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          var or__6210__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__6210__auto____$2)) {
            return or__6210__auto____$2;
          } else {
            var or__6210__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__6210__auto____$3)) {
              return or__6210__auto____$3;
            } else {
              var or__6210__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__6210__auto____$4)) {
                return or__6210__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          var or__6210__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__6210__auto____$2)) {
            return or__6210__auto____$2;
          } else {
            var or__6210__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__6210__auto____$3)) {
              return or__6210__auto____$3;
            } else {
              var or__6210__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__6210__auto____$4)) {
                return or__6210__auto____$4;
              } else {
                var or__6210__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__6210__auto____$5)) {
                  return or__6210__auto____$5;
                } else {
                  var or__6210__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__6210__auto____$6)) {
                    return or__6210__auto____$6;
                  } else {
                    var or__6210__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__6210__auto____$7)) {
                      return or__6210__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__14551__delegate = function(x, y, z, args) {
        var or__6210__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return cljs.core.some(function(or__6210__auto__) {
            return function(p1__14525_SHARP_) {
              var or__6210__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__14525_SHARP_) : p1.call(null, p1__14525_SHARP_);
              if (cljs.core.truth_(or__6210__auto____$1)) {
                return or__6210__auto____$1;
              } else {
                var or__6210__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__14525_SHARP_) : p2.call(null, p1__14525_SHARP_);
                if (cljs.core.truth_(or__6210__auto____$2)) {
                  return or__6210__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__14525_SHARP_) : p3.call(null, p1__14525_SHARP_);
                }
              }
            };
          }(or__6210__auto__), args);
        }
      };
      var G__14551 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14552__i = 0, G__14552__a = new Array(arguments.length - 3);
          while (G__14552__i < G__14552__a.length) {
            G__14552__a[G__14552__i] = arguments[G__14552__i + 3];
            ++G__14552__i;
          }
          args = new cljs.core.IndexedSeq(G__14552__a, 0);
        }
        return G__14551__delegate.call(this, x, y, z, args);
      };
      G__14551.cljs$lang$maxFixedArity = 3;
      G__14551.cljs$lang$applyTo = function(arglist__14553) {
        var x = cljs.core.first(arglist__14553);
        arglist__14553 = cljs.core.next(arglist__14553);
        var y = cljs.core.first(arglist__14553);
        arglist__14553 = cljs.core.next(arglist__14553);
        var z = cljs.core.first(arglist__14553);
        var args = cljs.core.rest(arglist__14553);
        return G__14551__delegate(x, y, z, args);
      };
      G__14551.cljs$core$IFn$_invoke$arity$variadic = G__14551__delegate;
      return G__14551;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__14554 = null;
          if (arguments.length > 3) {
            var G__14555__i = 0, G__14555__a = new Array(arguments.length - 3);
            while (G__14555__i < G__14555__a.length) {
              G__14555__a[G__14555__i] = arguments[G__14555__i + 3];
              ++G__14555__i;
            }
            G__14554 = new cljs.core.IndexedSeq(G__14555__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14554);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__14526_SHARP_) {
            return p1__14526_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14526_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__14526_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__14527_SHARP_) {
            var or__6210__auto__ = p1__14527_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14527_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__14527_SHARP_.call(null, x);
            if (cljs.core.truth_(or__6210__auto__)) {
              return or__6210__auto__;
            } else {
              return p1__14527_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14527_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__14527_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__14528_SHARP_) {
            var or__6210__auto__ = p1__14528_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14528_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__14528_SHARP_.call(null, x);
            if (cljs.core.truth_(or__6210__auto__)) {
              return or__6210__auto__;
            } else {
              var or__6210__auto____$1 = p1__14528_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14528_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__14528_SHARP_.call(null, y);
              if (cljs.core.truth_(or__6210__auto____$1)) {
                return or__6210__auto____$1;
              } else {
                return p1__14528_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14528_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__14528_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__14556__delegate = function(x, y, z, args) {
          var or__6210__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__6210__auto__)) {
            return or__6210__auto__;
          } else {
            return cljs.core.some(function(or__6210__auto__, ps__$1) {
              return function(p1__14529_SHARP_) {
                return cljs.core.some(p1__14529_SHARP_, args);
              };
            }(or__6210__auto__, ps__$1), ps__$1);
          }
        };
        var G__14556 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14557__i = 0, G__14557__a = new Array(arguments.length - 3);
            while (G__14557__i < G__14557__a.length) {
              G__14557__a[G__14557__i] = arguments[G__14557__i + 3];
              ++G__14557__i;
            }
            args = new cljs.core.IndexedSeq(G__14557__a, 0);
          }
          return G__14556__delegate.call(this, x, y, z, args);
        };
        G__14556.cljs$lang$maxFixedArity = 3;
        G__14556.cljs$lang$applyTo = function(arglist__14558) {
          var x = cljs.core.first(arglist__14558);
          arglist__14558 = cljs.core.next(arglist__14558);
          var y = cljs.core.first(arglist__14558);
          arglist__14558 = cljs.core.next(arglist__14558);
          var z = cljs.core.first(arglist__14558);
          var args = cljs.core.rest(arglist__14558);
          return G__14556__delegate(x, y, z, args);
        };
        G__14556.cljs$core$IFn$_invoke$arity$variadic = G__14556__delegate;
        return G__14556;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__14559 = null;
            if (arguments.length > 3) {
              var G__14560__i = 0, G__14560__a = new Array(arguments.length - 3);
              while (G__14560__i < G__14560__a.length) {
                G__14560__a[G__14560__i] = arguments[G__14560__i + 3];
                ++G__14560__i;
              }
              G__14559 = new cljs.core.IndexedSeq(G__14560__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14559);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq14531) {
  var G__14532 = cljs.core.first(seq14531);
  var seq14531__$1 = cljs.core.next(seq14531);
  var G__14533 = cljs.core.first(seq14531__$1);
  var seq14531__$2 = cljs.core.next(seq14531__$1);
  var G__14534 = cljs.core.first(seq14531__$2);
  var seq14531__$3 = cljs.core.next(seq14531__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__14532, G__14533, G__14534, seq14531__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var args14562 = [];
  var len__7279__auto___14582 = arguments.length;
  var i__7280__auto___14583 = 0;
  while (true) {
    if (i__7280__auto___14583 < len__7279__auto___14582) {
      args14562.push(arguments[i__7280__auto___14583]);
      var G__14584 = i__7280__auto___14583 + 1;
      i__7280__auto___14583 = G__14584;
      continue;
    } else {
    }
    break;
  }
  var G__14569 = args14562.length;
  switch(G__14569) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14562.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7298__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__14586 = null;
      var G__14586__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__14586__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__14586__2 = function(result, input) {
        var G__14570 = result;
        var G__14571 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14570, G__14571) : rf.call(null, G__14570, G__14571);
      };
      var G__14586__3 = function() {
        var G__14587__delegate = function(result, input, inputs) {
          var G__14572 = result;
          var G__14573 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14572, G__14573) : rf.call(null, G__14572, G__14573);
        };
        var G__14587 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__14588__i = 0, G__14588__a = new Array(arguments.length - 2);
            while (G__14588__i < G__14588__a.length) {
              G__14588__a[G__14588__i] = arguments[G__14588__i + 2];
              ++G__14588__i;
            }
            inputs = new cljs.core.IndexedSeq(G__14588__a, 0);
          }
          return G__14587__delegate.call(this, result, input, inputs);
        };
        G__14587.cljs$lang$maxFixedArity = 2;
        G__14587.cljs$lang$applyTo = function(arglist__14589) {
          var result = cljs.core.first(arglist__14589);
          arglist__14589 = cljs.core.next(arglist__14589);
          var input = cljs.core.first(arglist__14589);
          var inputs = cljs.core.rest(arglist__14589);
          return G__14587__delegate(result, input, inputs);
        };
        G__14587.cljs$core$IFn$_invoke$arity$variadic = G__14587__delegate;
        return G__14587;
      }();
      G__14586 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__14586__0.call(this);
          case 1:
            return G__14586__1.call(this, result);
          case 2:
            return G__14586__2.call(this, result, input);
          default:
            var G__14590 = null;
            if (arguments.length > 2) {
              var G__14591__i = 0, G__14591__a = new Array(arguments.length - 2);
              while (G__14591__i < G__14591__a.length) {
                G__14591__a[G__14591__i] = arguments[G__14591__i + 2];
                ++G__14591__i;
              }
              G__14590 = new cljs.core.IndexedSeq(G__14591__a, 0);
            }
            return G__14586__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__14590);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14586.cljs$lang$maxFixedArity = 2;
      G__14586.cljs$lang$applyTo = G__14586__3.cljs$lang$applyTo;
      G__14586.cljs$core$IFn$_invoke$arity$0 = G__14586__0;
      G__14586.cljs$core$IFn$_invoke$arity$1 = G__14586__1;
      G__14586.cljs$core$IFn$_invoke$arity$2 = G__14586__2;
      G__14586.cljs$core$IFn$_invoke$arity$variadic = G__14586__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__14586;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__7124__auto___14592 = size;
        var i_14593 = 0;
        while (true) {
          if (i_14593 < n__7124__auto___14592) {
            cljs.core.chunk_append(b, function() {
              var G__14574 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14593);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14574) : f.call(null, G__14574);
            }());
            var G__14594 = i_14593 + 1;
            i_14593 = G__14594;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__14575 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14575) : f.call(null, G__14575);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__14576 = cljs.core.first(s1);
        var G__14577 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14576, G__14577) : f.call(null, G__14576, G__14577);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__14578 = cljs.core.first(s1);
        var G__14579 = cljs.core.first(s2);
        var G__14580 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14578, G__14579, G__14580) : f.call(null, G__14578, G__14579, G__14580);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__14561_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__14561_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq14563) {
  var G__14564 = cljs.core.first(seq14563);
  var seq14563__$1 = cljs.core.next(seq14563);
  var G__14565 = cljs.core.first(seq14563__$1);
  var seq14563__$2 = cljs.core.next(seq14563__$1);
  var G__14566 = cljs.core.first(seq14563__$2);
  var seq14563__$3 = cljs.core.next(seq14563__$2);
  var G__14567 = cljs.core.first(seq14563__$3);
  var seq14563__$4 = cljs.core.next(seq14563__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__14564, G__14565, G__14566, G__14567, seq14563__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var args14595 = [];
  var len__7279__auto___14598 = arguments.length;
  var i__7280__auto___14599 = 0;
  while (true) {
    if (i__7280__auto___14599 < len__7279__auto___14598) {
      args14595.push(arguments[i__7280__auto___14599]);
      var G__14600 = i__7280__auto___14599 + 1;
      i__7280__auto___14599 = G__14600;
      continue;
    } else {
    }
    break;
  }
  var G__14597 = args14595.length;
  switch(G__14597) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14595.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__14602 = null;
        var G__14602__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14602__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__14602__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__14602 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__14602__0.call(this);
            case 1:
              return G__14602__1.call(this, result);
            case 2:
              return G__14602__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14602.cljs$core$IFn$_invoke$arity$0 = G__14602__0;
        G__14602.cljs$core$IFn$_invoke$arity$1 = G__14602__1;
        G__14602.cljs$core$IFn$_invoke$arity$2 = G__14602__2;
        return G__14602;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4657__auto__ = cljs.core.seq(coll);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var args14603 = [];
  var len__7279__auto___14606 = arguments.length;
  var i__7280__auto___14607 = 0;
  while (true) {
    if (i__7280__auto___14607 < len__7279__auto___14606) {
      args14603.push(arguments[i__7280__auto___14607]);
      var G__14608 = i__7280__auto___14607 + 1;
      i__7280__auto___14607 = G__14608;
      continue;
    } else {
    }
    break;
  }
  var G__14605 = args14603.length;
  switch(G__14605) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14603.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__14610 = null;
        var G__14610__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14610__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__14610__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__14610 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__14610__0.call(this);
            case 1:
              return G__14610__1.call(this, result);
            case 2:
              return G__14610__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14610.cljs$core$IFn$_invoke$arity$0 = G__14610__0;
        G__14610.cljs$core$IFn$_invoke$arity$1 = G__14610__1;
        G__14610.cljs$core$IFn$_invoke$arity$2 = G__14610__2;
        return G__14610;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__14611 = n__$1 - 1;
        var G__14612 = cljs.core.rest(s);
        n__$1 = G__14611;
        coll__$1 = G__14612;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var args14613 = [];
  var len__7279__auto___14616 = arguments.length;
  var i__7280__auto___14617 = 0;
  while (true) {
    if (i__7280__auto___14617 < len__7279__auto___14616) {
      args14613.push(arguments[i__7280__auto___14617]);
      var G__14618 = i__7280__auto___14617 + 1;
      i__7280__auto___14617 = G__14618;
      continue;
    } else {
    }
    break;
  }
  var G__14615 = args14613.length;
  switch(G__14615) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14613.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__14620 = cljs.core.next(s);
      var G__14621 = cljs.core.next(lead);
      s = G__14620;
      lead = G__14621;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var args14622 = [];
  var len__7279__auto___14627 = arguments.length;
  var i__7280__auto___14628 = 0;
  while (true) {
    if (i__7280__auto___14628 < len__7279__auto___14627) {
      args14622.push(arguments[i__7280__auto___14628]);
      var G__14629 = i__7280__auto___14628 + 1;
      i__7280__auto___14628 = G__14629;
      continue;
    } else {
    }
    break;
  }
  var G__14624 = args14622.length;
  switch(G__14624) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14622.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__14631 = null;
        var G__14631__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14631__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__14631__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__6198__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__6198__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__6198__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__14631 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__14631__0.call(this);
            case 1:
              return G__14631__1.call(this, result);
            case 2:
              return G__14631__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14631.cljs$core$IFn$_invoke$arity$0 = G__14631__0;
        G__14631.cljs$core$IFn$_invoke$arity$1 = G__14631__1;
        G__14631.cljs$core$IFn$_invoke$arity$2 = G__14631__2;
        return G__14631;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__6198__auto__ = s;
        if (and__6198__auto__) {
          var G__14626 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__14626) : pred__$1.call(null, G__14626);
        } else {
          return and__6198__auto__;
        }
      }())) {
        var G__14632 = pred__$1;
        var G__14633 = cljs.core.rest(s);
        pred__$1 = G__14632;
        coll__$1 = G__14633;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var args14634 = [];
  var len__7279__auto___14637 = arguments.length;
  var i__7280__auto___14638 = 0;
  while (true) {
    if (i__7280__auto___14638 < len__7279__auto___14637) {
      args14634.push(arguments[i__7280__auto___14638]);
      var G__14639 = i__7280__auto___14638 + 1;
      i__7280__auto___14638 = G__14639;
      continue;
    } else {
    }
    break;
  }
  var G__14636 = args14634.length;
  switch(G__14636) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14634.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var args14641 = [];
  var len__7279__auto___14644 = arguments.length;
  var i__7280__auto___14645 = 0;
  while (true) {
    if (i__7280__auto___14645 < len__7279__auto___14644) {
      args14641.push(arguments[i__7280__auto___14645]);
      var G__14646 = i__7280__auto___14645 + 1;
      i__7280__auto___14645 = G__14646;
      continue;
    } else {
    }
    break;
  }
  var G__14643 = args14641.length;
  switch(G__14643) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14641.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var args14650 = [];
  var len__7279__auto___14656 = arguments.length;
  var i__7280__auto___14657 = 0;
  while (true) {
    if (i__7280__auto___14657 < len__7279__auto___14656) {
      args14650.push(arguments[i__7280__auto___14657]);
      var G__14658 = i__7280__auto___14657 + 1;
      i__7280__auto___14657 = G__14658;
      continue;
    } else {
    }
    break;
  }
  var G__14655 = args14650.length;
  switch(G__14655) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14650.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq14651) {
  var G__14652 = cljs.core.first(seq14651);
  var seq14651__$1 = cljs.core.next(seq14651);
  var G__14653 = cljs.core.first(seq14651__$1);
  var seq14651__$2 = cljs.core.next(seq14651__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__14652, G__14653, seq14651__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var args14660 = [];
  var len__7279__auto___14663 = arguments.length;
  var i__7280__auto___14664 = 0;
  while (true) {
    if (i__7280__auto___14664 < len__7279__auto___14663) {
      args14660.push(arguments[i__7280__auto___14664]);
      var G__14665 = i__7280__auto___14664 + 1;
      i__7280__auto___14664 = G__14665;
      continue;
    } else {
    }
    break;
  }
  var G__14662 = args14660.length;
  switch(G__14662) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14660.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__14667 = null;
        var G__14667__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14667__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__14667__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__14667 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__14667__0.call(this);
            case 1:
              return G__14667__1.call(this, result);
            case 2:
              return G__14667__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14667.cljs$core$IFn$_invoke$arity$0 = G__14667__0;
        G__14667.cljs$core$IFn$_invoke$arity$1 = G__14667__1;
        G__14667.cljs$core$IFn$_invoke$arity$2 = G__14667__2;
        return G__14667;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4655__auto__ = cljs.core.seq(coll);
      if (temp__4655__auto__) {
        var coll__$1 = temp__4655__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var args14676 = [];
  var len__7279__auto___14681 = arguments.length;
  var i__7280__auto___14682 = 0;
  while (true) {
    if (i__7280__auto___14682 < len__7279__auto___14681) {
      args14676.push(arguments[i__7280__auto___14682]);
      var G__14683 = i__7280__auto___14682 + 1;
      i__7280__auto___14682 = G__14683;
      continue;
    } else {
    }
    break;
  }
  var G__14680 = args14676.length;
  switch(G__14680) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14676.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7298__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq14677) {
  var G__14678 = cljs.core.first(seq14677);
  var seq14677__$1 = cljs.core.next(seq14677);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__14678, seq14677__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var args14685 = [];
  var len__7279__auto___14689 = arguments.length;
  var i__7280__auto___14690 = 0;
  while (true) {
    if (i__7280__auto___14690 < len__7279__auto___14689) {
      args14685.push(arguments[i__7280__auto___14690]);
      var G__14691 = i__7280__auto___14690 + 1;
      i__7280__auto___14690 = G__14691;
      continue;
    } else {
    }
    break;
  }
  var G__14687 = args14685.length;
  switch(G__14687) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14685.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__14693 = null;
      var G__14693__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__14693__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__14693__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__14693 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__14693__0.call(this);
          case 1:
            return G__14693__1.call(this, result);
          case 2:
            return G__14693__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14693.cljs$core$IFn$_invoke$arity$0 = G__14693__0;
      G__14693.cljs$core$IFn$_invoke$arity$1 = G__14693__1;
      G__14693.cljs$core$IFn$_invoke$arity$2 = G__14693__2;
      return G__14693;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__7124__auto___14694 = size;
        var i_14695 = 0;
        while (true) {
          if (i_14695 < n__7124__auto___14694) {
            if (cljs.core.truth_(function() {
              var G__14688 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14695);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14688) : pred.call(null, G__14688);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14695));
            } else {
            }
            var G__14696 = i_14695 + 1;
            i_14695 = G__14696;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var args14697 = [];
  var len__7279__auto___14700 = arguments.length;
  var i__7280__auto___14701 = 0;
  while (true) {
    if (i__7280__auto___14701 < len__7279__auto___14700) {
      args14697.push(arguments[i__7280__auto___14701]);
      var G__14702 = i__7280__auto___14701 + 1;
      i__7280__auto___14701 = G__14702;
      continue;
    } else {
    }
    break;
  }
  var G__14699 = args14697.length;
  switch(G__14699) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14697.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__14704_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__14704_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var args14705 = [];
  var len__7279__auto___14710 = arguments.length;
  var i__7280__auto___14711 = 0;
  while (true) {
    if (i__7280__auto___14711 < len__7279__auto___14710) {
      args14705.push(arguments[i__7280__auto___14711]);
      var G__14712 = i__7280__auto___14711 + 1;
      i__7280__auto___14711 = G__14712;
      continue;
    } else {
    }
    break;
  }
  var G__14707 = args14705.length;
  switch(G__14707) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14705.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var args14714 = [];
  var len__7279__auto___14722 = arguments.length;
  var i__7280__auto___14723 = 0;
  while (true) {
    if (i__7280__auto___14723 < len__7279__auto___14722) {
      args14714.push(arguments[i__7280__auto___14723]);
      var G__14724 = i__7280__auto___14723 + 1;
      i__7280__auto___14723 = G__14724;
      continue;
    } else {
    }
    break;
  }
  var G__14721 = args14714.length;
  switch(G__14721) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14714.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7298__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq14715) {
  var G__14716 = cljs.core.first(seq14715);
  var seq14715__$1 = cljs.core.next(seq14715);
  var G__14717 = cljs.core.first(seq14715__$1);
  var seq14715__$2 = cljs.core.next(seq14715__$1);
  var G__14718 = cljs.core.first(seq14715__$2);
  var seq14715__$3 = cljs.core.next(seq14715__$2);
  var G__14719 = cljs.core.first(seq14715__$3);
  var seq14715__$4 = cljs.core.next(seq14715__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__14716, G__14717, G__14718, G__14719, seq14715__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var args14726 = [];
  var len__7279__auto___14729 = arguments.length;
  var i__7280__auto___14730 = 0;
  while (true) {
    if (i__7280__auto___14730 < len__7279__auto___14729) {
      args14726.push(arguments[i__7280__auto___14730]);
      var G__14731 = i__7280__auto___14730 + 1;
      i__7280__auto___14730 = G__14731;
      continue;
    } else {
    }
    break;
  }
  var G__14728 = args14726.length;
  switch(G__14728) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14726.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var args14733 = [];
  var len__7279__auto___14737 = arguments.length;
  var i__7280__auto___14738 = 0;
  while (true) {
    if (i__7280__auto___14738 < len__7279__auto___14737) {
      args14733.push(arguments[i__7280__auto___14738]);
      var G__14739 = i__7280__auto___14738 + 1;
      i__7280__auto___14738 = G__14739;
      continue;
    } else {
    }
    break;
  }
  var G__14735 = args14733.length;
  switch(G__14735) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14733.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, m, ks);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!(!(m__$1 == null) ? m__$1.cljs$lang$protocol_mask$partition0$ & 256 || m__$1.cljs$core$ILookup$ ? true : !m__$1.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1))) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__14741 = sentinel;
          var G__14742 = m__$2;
          var G__14743 = cljs.core.next(ks__$1);
          sentinel = G__14741;
          m__$1 = G__14742;
          ks__$1 = G__14743;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__14744, v) {
  var vec__14749 = p__14744;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14749, 0, null);
  var ks = cljs.core.nthnext(vec__14749, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var args14750 = [];
  var len__7279__auto___14780 = arguments.length;
  var i__7280__auto___14781 = 0;
  while (true) {
    if (i__7280__auto___14781 < len__7279__auto___14780) {
      args14750.push(arguments[i__7280__auto___14781]);
      var G__14782 = i__7280__auto___14781 + 1;
      i__7280__auto___14781 = G__14782;
      continue;
    } else {
    }
    break;
  }
  var G__14759 = args14750.length;
  switch(G__14759) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14750.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__7298__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__14760, f) {
  var vec__14761 = p__14760;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14761, 0, null);
  var ks = cljs.core.nthnext(vec__14761, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14762 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14762) : f.call(null, G__14762);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__14763, f, a) {
  var vec__14764 = p__14763;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14764, 0, null);
  var ks = cljs.core.nthnext(vec__14764, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14765 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__14766 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14765, G__14766) : f.call(null, G__14765, G__14766);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__14767, f, a, b) {
  var vec__14768 = p__14767;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14768, 0, null);
  var ks = cljs.core.nthnext(vec__14768, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14769 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__14770 = a;
      var G__14771 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14769, G__14770, G__14771) : f.call(null, G__14769, G__14770, G__14771);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__14772, f, a, b, c) {
  var vec__14773 = p__14772;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14773, 0, null);
  var ks = cljs.core.nthnext(vec__14773, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14774 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__14775 = a;
      var G__14776 = b;
      var G__14777 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14774, G__14775, G__14776, G__14777) : f.call(null, G__14774, G__14775, G__14776, G__14777);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__14778, f, a, b, c, args) {
  var vec__14779 = p__14778;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14779, 0, null);
  var ks = cljs.core.nthnext(vec__14779, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq14751) {
  var G__14752 = cljs.core.first(seq14751);
  var seq14751__$1 = cljs.core.next(seq14751);
  var G__14753 = cljs.core.first(seq14751__$1);
  var seq14751__$2 = cljs.core.next(seq14751__$1);
  var G__14754 = cljs.core.first(seq14751__$2);
  var seq14751__$3 = cljs.core.next(seq14751__$2);
  var G__14755 = cljs.core.first(seq14751__$3);
  var seq14751__$4 = cljs.core.next(seq14751__$3);
  var G__14756 = cljs.core.first(seq14751__$4);
  var seq14751__$5 = cljs.core.next(seq14751__$4);
  var G__14757 = cljs.core.first(seq14751__$5);
  var seq14751__$6 = cljs.core.next(seq14751__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__14752, G__14753, G__14754, G__14755, G__14756, G__14757, seq14751__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var args14784 = [];
  var len__7279__auto___14804 = arguments.length;
  var i__7280__auto___14805 = 0;
  while (true) {
    if (i__7280__auto___14805 < len__7279__auto___14804) {
      args14784.push(arguments[i__7280__auto___14805]);
      var G__14806 = i__7280__auto___14805 + 1;
      i__7280__auto___14805 = G__14806;
      continue;
    } else {
    }
    break;
  }
  var G__14793 = args14784.length;
  switch(G__14793) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args14784.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__7298__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__14794 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14794) : f.call(null, G__14794);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__14795 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__14796 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14795, G__14796) : f.call(null, G__14795, G__14796);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__14797 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__14798 = x;
    var G__14799 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14797, G__14798, G__14799) : f.call(null, G__14797, G__14798, G__14799);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__14800 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__14801 = x;
    var G__14802 = y;
    var G__14803 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14800, G__14801, G__14802, G__14803) : f.call(null, G__14800, G__14801, G__14802, G__14803);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq14785) {
  var G__14786 = cljs.core.first(seq14785);
  var seq14785__$1 = cljs.core.next(seq14785);
  var G__14787 = cljs.core.first(seq14785__$1);
  var seq14785__$2 = cljs.core.next(seq14785__$1);
  var G__14788 = cljs.core.first(seq14785__$2);
  var seq14785__$3 = cljs.core.next(seq14785__$2);
  var G__14789 = cljs.core.first(seq14785__$3);
  var seq14785__$4 = cljs.core.next(seq14785__$3);
  var G__14790 = cljs.core.first(seq14785__$4);
  var seq14785__$5 = cljs.core.next(seq14785__$4);
  var G__14791 = cljs.core.first(seq14785__$5);
  var seq14785__$6 = cljs.core.next(seq14785__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__14786, G__14787, G__14788, G__14789, G__14790, G__14791, seq14785__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__14808 = ll - 5;
      var G__14809 = r;
      ll = G__14808;
      ret = G__14809;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__14814 = cljs.core.pv_aget(node, 0);
      var G__14815 = level - 5;
      node = G__14814;
      level = G__14815;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__14816 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__14817 = level - 5;
        node = G__14816;
        level = G__14817;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var G__14836 = null;
  var G__14836__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14836__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14836 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14836__1.call(this, x);
      case 2:
        return G__14836__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14836.cljs$core$IFn$_invoke$arity$1 = G__14836__1;
  G__14836.cljs$core$IFn$_invoke$arity$2 = G__14836__2;
  return G__14836;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var G__14837 = null;
  var G__14837__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14837__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14837 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14837__1.call(this, x);
      case 2:
        return G__14837__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14837.cljs$core$IFn$_invoke$arity$1 = G__14837__1;
  G__14837.cljs$core$IFn$_invoke$arity$2 = G__14837__2;
  return G__14837;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__14827 = init__$2;
              var G__14828 = j + i;
              var G__14829 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14827, G__14828, G__14829) : f.call(null, G__14827, G__14828, G__14829);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__14838 = j + 1;
              var G__14839 = init__$3;
              j = G__14838;
              init__$2 = G__14839;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__14840 = i + len;
        var G__14841 = init__$2;
        i = G__14840;
        init__$1 = G__14841;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__14830 = init__$2;
              var G__14831 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14830, G__14831) : f.call(null, G__14830, G__14831);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__14842 = j + 1;
              var G__14843 = init__$3;
              j = G__14842;
              init__$2 = G__14843;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__14844 = i + len;
        var G__14845 = init__$2;
        i = G__14844;
        init__$1 = G__14845;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0, null);
    } else {
      var G__14832 = coll__$1;
      var G__14833 = cljs.core.first_array_for_longvec(coll__$1);
      var G__14834 = 0;
      var G__14835 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14832, G__14833, G__14834, G__14835) : cljs.core.chunked_seq.call(null, G__14832, G__14833, G__14834, G__14835);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__7124__auto___14846 = len;
    var i_14847 = 0;
    while (true) {
      if (i_14847 < n__7124__auto___14846) {
        new_tail[i_14847] = self__.tail[i_14847];
        var G__14848 = i_14847 + 1;
        i_14847 = G__14848;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__14849 = null;
  var G__14849__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__14849__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__14849 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14849__2.call(this, self__, k);
      case 3:
        return G__14849__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14849.cljs$core$IFn$_invoke$arity$2 = G__14849__2;
  G__14849.cljs$core$IFn$_invoke$arity$3 = G__14849__3;
  return G__14849;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args14826) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14826)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__14850 = i + 1;
        var G__14851 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__14850;
        out = G__14851;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___14853 = arguments.length;
  var i__7280__auto___14854 = 0;
  while (true) {
    if (i__7280__auto___14854 < len__7279__auto___14853) {
      args__7286__auto__.push(arguments[i__7280__auto___14854]);
      var G__14855 = i__7280__auto___14854 + 1;
      i__7280__auto___14854 = G__14855;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq14852) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14852));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var G__14878 = null;
  var G__14878__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14878__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14878 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14878__1.call(this, x);
      case 2:
        return G__14878__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14878.cljs$core$IFn$_invoke$arity$1 = G__14878__1;
  G__14878.cljs$core$IFn$_invoke$arity$2 = G__14878__2;
  return G__14878;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var G__14879 = null;
  var G__14879__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14879__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14879 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14879__1.call(this, x);
      case 2:
        return G__14879__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14879.cljs$core$IFn$_invoke$arity$1 = G__14879__1;
  G__14879.cljs$core$IFn$_invoke$arity$2 = G__14879__2;
  return G__14879;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__14856 = self__.vec;
      var G__14857 = self__.node;
      var G__14858 = self__.i;
      var G__14859 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14856, G__14857, G__14858, G__14859) : cljs.core.chunked_seq.call(null, G__14856, G__14857, G__14858, G__14859);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__14860 = self__.vec;
    var G__14861 = self__.i + self__.off;
    var G__14862 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14860, G__14861, G__14862) : cljs.core.subvec.call(null, G__14860, G__14861, G__14862);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__14863 = self__.vec;
    var G__14864 = self__.i + self__.off;
    var G__14865 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14863, G__14864, G__14865) : cljs.core.subvec.call(null, G__14863, G__14864, G__14865);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__14866 = self__.vec;
      var G__14867 = self__.node;
      var G__14868 = self__.i;
      var G__14869 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14866, G__14867, G__14868, G__14869) : cljs.core.chunked_seq.call(null, G__14866, G__14867, G__14868, G__14869);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__14870 = self__.vec;
    var G__14871 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__14872 = end;
    var G__14873 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14870, G__14871, G__14872, G__14873) : cljs.core.chunked_seq.call(null, G__14870, G__14871, G__14872, G__14873);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__14874 = self__.vec;
    var G__14875 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__14876 = end;
    var G__14877 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14874, G__14875, G__14876, G__14877) : cljs.core.chunked_seq.call(null, G__14874, G__14875, G__14876, G__14877);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var args14880 = [];
  var len__7279__auto___14883 = arguments.length;
  var i__7280__auto___14884 = 0;
  while (true) {
    if (i__7280__auto___14884 < len__7279__auto___14883) {
      args14880.push(arguments[i__7280__auto___14884]);
      var G__14885 = i__7280__auto___14884 + 1;
      i__7280__auto___14884 = G__14885;
      continue;
    } else {
    }
    break;
  }
  var G__14882 = args14880.length;
  switch(G__14882) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14880.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var G__14907 = null;
  var G__14907__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14907__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__14907 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__14907__1.call(this, x);
      case 2:
        return G__14907__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14907.cljs$core$IFn$_invoke$arity$1 = G__14907__1;
  G__14907.cljs$core$IFn$_invoke$arity$2 = G__14907__2;
  return G__14907;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var G__14908 = null;
  var G__14908__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14908__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__14908 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__14908__1.call(this, x);
      case 2:
        return G__14908__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14908.cljs$core$IFn$_invoke$arity$1 = G__14908__1;
  G__14908.cljs$core$IFn$_invoke$arity$2 = G__14908__2;
  return G__14908;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__14888 = init__$1;
        var G__14889 = j;
        var G__14890 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14888, G__14889, G__14890) : f.call(null, G__14888, G__14889, G__14890);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__14909 = i + 1;
        var G__14910 = j + 1;
        var G__14911 = init__$2;
        i = G__14909;
        j = G__14910;
        init__$1 = G__14911;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__14891 = self__.meta;
  var G__14892 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__14893 = self__.start;
  var G__14894 = function() {
    var x__6541__auto__ = self__.end;
    var y__6542__auto__ = v_pos + 1;
    return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
  }();
  var G__14895 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14891, G__14892, G__14893, G__14894, G__14895) : cljs.core.build_subvec.call(null, G__14891, G__14892, G__14893, G__14894, G__14895);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__14896 = self__.meta;
    var G__14897 = self__.v;
    var G__14898 = self__.start;
    var G__14899 = self__.end - 1;
    var G__14900 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14896, G__14897, G__14898, G__14899, G__14900) : cljs.core.build_subvec.call(null, G__14896, G__14897, G__14898, G__14899, G__14900);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__14902 = self__.meta;
  var G__14903 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__14904 = self__.start;
  var G__14905 = self__.end + 1;
  var G__14906 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14902, G__14903, G__14904, G__14905, G__14906) : cljs.core.build_subvec.call(null, G__14902, G__14903, G__14904, G__14905, G__14906);
};
cljs.core.Subvec.prototype.call = function() {
  var G__14912 = null;
  var G__14912__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__14912__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__14912 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14912__2.call(this, self__, k);
      case 3:
        return G__14912__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14912.cljs$core$IFn$_invoke$arity$2 = G__14912__2;
  G__14912.cljs$core$IFn$_invoke$arity$3 = G__14912__3;
  return G__14912;
}();
cljs.core.Subvec.prototype.apply = function(self__, args14887) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14887)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__14913 = meta;
      var G__14914 = v.v;
      var G__14915 = v.start + start;
      var G__14916 = v.start + end;
      var G__14917 = __hash;
      meta = G__14913;
      v = G__14914;
      start = G__14915;
      end = G__14916;
      __hash = G__14917;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var args14918 = [];
  var len__7279__auto___14921 = arguments.length;
  var i__7280__auto___14922 = 0;
  while (true) {
    if (i__7280__auto___14922 < len__7279__auto___14921) {
      args14918.push(arguments[i__7280__auto___14922]);
      var G__14923 = i__7280__auto___14922 + 1;
      i__7280__auto___14922 = G__14923;
      continue;
    } else {
    }
    break;
  }
  var G__14920 = args14918.length;
  switch(G__14920) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14918.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__14936 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__14937 = level - 5;
        node = G__14936;
        level = G__14937;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__14941 = null;
  var G__14941__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14941__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14941 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14941__2.call(this, self__, k);
      case 3:
        return G__14941__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14941.cljs$core$IFn$_invoke$arity$2 = G__14941__2;
  G__14941.cljs$core$IFn$_invoke$arity$3 = G__14941__3;
  return G__14941;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args14938) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14938)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__6210__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    var and__6198__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__6198__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__6198__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var G__14942 = null;
  var G__14942__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14942__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14942 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14942__1.call(this, x);
      case 2:
        return G__14942__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14942.cljs$core$IFn$_invoke$arity$1 = G__14942__1;
  G__14942.cljs$core$IFn$_invoke$arity$2 = G__14942__2;
  return G__14942;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var G__14943 = null;
  var G__14943__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14943__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14943 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14943__1.call(this, x);
      case 2:
        return G__14943__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14943.cljs$core$IFn$_invoke$arity$1 = G__14943__1;
  G__14943.cljs$core$IFn$_invoke$arity$2 = G__14943__2;
  return G__14943;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4655__auto__ = cljs.core.next(self__.front);
  if (temp__4655__auto__) {
    var f1 = temp__4655__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var G__14944 = null;
  var G__14944__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14944__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14944 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14944__1.call(this, x);
      case 2:
        return G__14944__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14944.cljs$core$IFn$_invoke$arity$1 = G__14944__1;
  G__14944.cljs$core$IFn$_invoke$arity$2 = G__14944__2;
  return G__14944;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var G__14945 = null;
  var G__14945__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null, coll));
  };
  var G__14945__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14945 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14945__1.call(this, x);
      case 2:
        return G__14945__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14945.cljs$core$IFn$_invoke$arity$1 = G__14945__1;
  G__14945.cljs$core$IFn$_invoke$arity$2 = G__14945__2;
  return G__14945;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4655__auto__ = cljs.core.next(self__.front);
    if (temp__4655__auto__) {
      var f1 = temp__4655__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__6210__auto__ = self__.front;
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__6210__auto__ = self__.rear;
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__14946 = i + incr;
        i = G__14946;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__14947 = i + 1;
      var G__14948 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__14947;
      out = G__14948;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_14953 = 0;
  while (true) {
    if (i_14953 < l) {
      var k_14954 = ks[i_14953];
      new_obj[k_14954] = obj[k_14954];
      var G__14955 = i_14953 + 1;
      i_14953 = G__14955;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__14958 = init__$1;
        var G__14959 = k;
        var G__14960 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14958, G__14959, G__14960) : f.call(null, G__14958, G__14959, G__14960);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__14961 = cljs.core.rest(keys__$1);
        var G__14962 = init__$2;
        keys__$1 = G__14961;
        init__$1 = G__14962;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__14956_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__14956_SHARP_, self__.strobj[p1__14956_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__14963 = null;
  var G__14963__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14963__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14963 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14963__2.call(this, self__, k);
      case 3:
        return G__14963__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14963.cljs$core$IFn$_invoke$arity$2 = G__14963__2;
  G__14963.cljs$core$IFn$_invoke$arity$3 = G__14963__3;
  return G__14963;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args14957) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14957)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__6210__auto__ = self__.i < self__.base_count;
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__14966 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14966, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14966, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__14967 = i + 2;
        i = G__14967;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__14968 = i + 2;
        i = G__14968;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__14969 = i + 2;
        i = G__14969;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__14970 = i + 2;
        i = G__14970;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__14971 = i + 2;
        i = G__14971;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_14972 = 0;
  while (true) {
    if (i_14972 < l) {
      narr[i_14972] = arr[i_14972];
      var G__14973 = i_14972 + 1;
      i_14972 = G__14973;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var G__14974 = null;
  var G__14974__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14974__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14974 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14974__1.call(this, x);
      case 2:
        return G__14974__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14974.cljs$core$IFn$_invoke$arity$1 = G__14974__1;
  G__14974.cljs$core$IFn$_invoke$arity$2 = G__14974__2;
  return G__14974;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var G__14975 = null;
  var G__14975__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14975__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14975 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14975__1.call(this, x);
      case 2:
        return G__14975__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14975.cljs$core$IFn$_invoke$arity$1 = G__14975__1;
  G__14975.cljs$core$IFn$_invoke$arity$2 = G__14975__2;
  return G__14975;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__14977 = cljs.core.seq(coll);
  var chunk__14978 = null;
  var count__14979 = 0;
  var i__14980 = 0;
  while (true) {
    if (i__14980 < count__14979) {
      var vec__14981 = chunk__14978.cljs$core$IIndexed$_nth$arity$2(null, i__14980);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14981, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14981, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__14990 = seq__14977;
      var G__14991 = chunk__14978;
      var G__14992 = count__14979;
      var G__14993 = i__14980 + 1;
      seq__14977 = G__14990;
      chunk__14978 = G__14991;
      count__14979 = G__14992;
      i__14980 = G__14993;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__14977);
      if (temp__4657__auto__) {
        var seq__14977__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14977__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__14977__$1);
          var G__14994 = cljs.core.chunk_rest(seq__14977__$1);
          var G__14995 = c__7021__auto__;
          var G__14996 = cljs.core.count(c__7021__auto__);
          var G__14997 = 0;
          seq__14977 = G__14994;
          chunk__14978 = G__14995;
          count__14979 = G__14996;
          i__14980 = G__14997;
          continue;
        } else {
          var vec__14982 = cljs.core.first(seq__14977__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14982, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14982, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__14998 = cljs.core.next(seq__14977__$1);
          var G__14999 = null;
          var G__15000 = 0;
          var G__15001 = 0;
          seq__14977 = G__14998;
          chunk__14978 = G__14999;
          count__14979 = G__15000;
          i__14980 = G__15001;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__14983 = init__$1;
        var G__14984 = self__.arr[i];
        var G__14985 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14983, G__14984, G__14985) : f.call(null, G__14983, G__14984, G__14985);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__15002 = i + 2;
        var G__15003 = init__$2;
        i = G__15002;
        init__$1 = G__15003;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__15004 = i + 2;
              i = G__15004;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__15005 = s + 2;
            var G__15006 = d;
            s = G__15005;
            d = G__15006;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__15007 = s + 2;
            var G__15008 = d + 2;
            s = G__15007;
            d = G__15008;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__14989 = cljs.core.aclone(self__.arr);
        G__14989[idx + 1] = v;
        return G__14989;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15009 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15010 = cljs.core.next(es);
          ret = G__15009;
          es = G__15010;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__15011 = null;
  var G__15011__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15011__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15011 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15011__2.call(this, self__, k);
      case 3:
        return G__15011__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15011.cljs$core$IFn$_invoke$arity$2 = G__15011__2;
  G__15011.cljs$core$IFn$_invoke$arity$3 = G__15011__3;
  return G__15011;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args14976) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14976)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_15012 = 0;
    while (true) {
      if (i_15012 < arr__$1.length) {
        var k_15013 = arr__$1[i_15012];
        var v_15014 = arr__$1[i_15012 + 1];
        var idx_15015 = cljs.core.array_index_of(ret, k_15013);
        if (idx_15015 === -1) {
          ret.push(k_15013);
          ret.push(v_15014);
        } else {
        }
        var G__15016 = i_15012 + 2;
        i_15012 = G__15016;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var cnt = arr__$2.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4655__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          var G__15019 = cljs.core.next(es);
          var G__15020 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__15019;
          tcoll__$2 = G__15020;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__15018_15021 = self__.arr;
      G__15018_15021.pop();
      G__15018_15021.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__15022 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__15023 = i + 2;
      out = G__15022;
      i = G__15023;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var args15024 = [];
  var len__7279__auto___15029 = arguments.length;
  var i__7280__auto___15030 = 0;
  while (true) {
    if (i__7280__auto___15030 < len__7279__auto___15029) {
      args15024.push(arguments[i__7280__auto___15030]);
      var G__15031 = i__7280__auto___15030 + 1;
      i__7280__auto___15030 = G__15031;
      continue;
    } else {
    }
    break;
  }
  var G__15026 = args15024.length;
  switch(G__15026) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15024.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__15027 = cljs.core.aclone(arr);
  G__15027[i] = a;
  return G__15027;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__15028 = cljs.core.aclone(arr);
  G__15028[i] = a;
  G__15028[j] = b;
  return G__15028;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var args15033 = [];
  var len__7279__auto___15036 = arguments.length;
  var i__7280__auto___15037 = 0;
  while (true) {
    if (i__7280__auto___15037 < len__7279__auto___15036) {
      args15033.push(arguments[i__7280__auto___15037]);
      var G__15038 = i__7280__auto___15037 + 1;
      i__7280__auto___15037 = G__15038;
      continue;
    } else {
    }
    break;
  }
  var G__15035 = args15033.length;
  switch(G__15035) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15033.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__15043 = init__$1;
          var G__15044 = k;
          var G__15045 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15043, G__15044, G__15045) : f.call(null, G__15043, G__15044, G__15045);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__15046 = i + 2;
        var G__15047 = init__$2;
        i = G__15046;
        init__$1 = G__15047;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__6210__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    var or__6210__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__6210__auto____$1) {
      return or__6210__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_15061 = 0;
        var j_15062 = 0;
        while (true) {
          if (i_15061 < 32) {
            if ((self__.bitmap >>> i_15061 & 1) === 0) {
              var G__15063 = i_15061 + 1;
              var G__15064 = j_15062;
              i_15061 = G__15063;
              j_15062 = G__15064;
              continue;
            } else {
              nodes[i_15061] = !(self__.arr[j_15062] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_15062]), self__.arr[j_15062], self__.arr[j_15062 + 1], added_leaf_QMARK_) : self__.arr[j_15062 + 1];
              var G__15065 = i_15061 + 1;
              var G__15066 = j_15062 + 2;
              i_15061 = G__15065;
              j_15062 = G__15066;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__15048 = edit__$1;
          var G__15049 = shift + 5;
          var G__15050 = key_or_nil;
          var G__15051 = val_or_node;
          var G__15052 = hash;
          var G__15053 = key;
          var G__15054 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__15048, G__15049, G__15050, G__15051, G__15052, G__15053, G__15054) : cljs.core.create_node.call(null, G__15048, G__15049, G__15050, G__15051, G__15052, G__15053, G__15054);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_15067 = 0;
      var j_15068 = 0;
      while (true) {
        if (i_15067 < 32) {
          if ((self__.bitmap >>> i_15067 & 1) === 0) {
            var G__15069 = i_15067 + 1;
            var G__15070 = j_15068;
            i_15067 = G__15069;
            j_15068 = G__15070;
            continue;
          } else {
            nodes[i_15067] = !(self__.arr[j_15068] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_15068]), self__.arr[j_15068], self__.arr[j_15068 + 1], added_leaf_QMARK_) : self__.arr[j_15068 + 1];
            var G__15071 = i_15067 + 1;
            var G__15072 = j_15068 + 2;
            i_15067 = G__15071;
            j_15068 = G__15072;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__15055 = shift + 5;
          var G__15056 = key_or_nil;
          var G__15057 = val_or_node;
          var G__15058 = hash;
          var G__15059 = key;
          var G__15060 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__15055, G__15056, G__15057, G__15058, G__15059, G__15060) : cljs.core.create_node.call(null, G__15055, G__15056, G__15057, G__15058, G__15059, G__15060);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__15073 = i + 1;
        var G__15074 = j + 2;
        var G__15075 = bitmap | 1 << i;
        i = G__15073;
        j = G__15074;
        bitmap = G__15075;
        continue;
      } else {
        var G__15076 = i + 1;
        var G__15077 = j;
        var G__15078 = bitmap;
        i = G__15076;
        j = G__15077;
        bitmap = G__15078;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__15079 = i + 1;
          var G__15080 = init__$2;
          i = G__15079;
          init__$1 = G__15080;
          continue;
        }
      } else {
        var G__15081 = i + 1;
        var G__15082 = init__$1;
        i = G__15081;
        init__$1 = G__15082;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__15083 = i + 2;
        i = G__15083;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var args15084 = [];
  var len__7279__auto___15087 = arguments.length;
  var i__7280__auto___15088 = 0;
  while (true) {
    if (i__7280__auto___15088 < len__7279__auto___15087) {
      args15084.push(arguments[i__7280__auto___15088]);
      var G__15089 = i__7280__auto___15088 + 1;
      i__7280__auto___15088 = G__15089;
      continue;
    } else {
    }
    break;
  }
  var G__15086 = args15084.length;
  switch(G__15086) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15084.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var G__15097 = null;
  var G__15097__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__15097__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__15097 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15097__1.call(this, x);
      case 2:
        return G__15097__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15097.cljs$core$IFn$_invoke$arity$1 = G__15097__1;
  G__15097.cljs$core$IFn$_invoke$arity$2 = G__15097__2;
  return G__15097;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var G__15098 = null;
  var G__15098__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__15098__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__15098 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15098__1.call(this, x);
      case 2:
        return G__15098__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15098.cljs$core$IFn$_invoke$arity$1 = G__15098__1;
  G__15098.cljs$core$IFn$_invoke$arity$2 = G__15098__2;
  return G__15098;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__15091 = self__.nodes;
    var G__15092 = self__.i + 2;
    var G__15093 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15091, G__15092, G__15093) : cljs.core.create_inode_seq.call(null, G__15091, G__15092, G__15093);
  } else {
    var G__15094 = self__.nodes;
    var G__15095 = self__.i;
    var G__15096 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15094, G__15095, G__15096) : cljs.core.create_inode_seq.call(null, G__15094, G__15095, G__15096);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var args15099 = [];
  var len__7279__auto___15102 = arguments.length;
  var i__7280__auto___15103 = 0;
  while (true) {
    if (i__7280__auto___15103 < len__7279__auto___15102) {
      args15099.push(arguments[i__7280__auto___15103]);
      var G__15104 = i__7280__auto___15103 + 1;
      i__7280__auto___15103 = G__15104;
      continue;
    } else {
    }
    break;
  }
  var G__15101 = args15099.length;
  switch(G__15101) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15099.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4655__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4655__auto__)) {
            var node = temp__4655__auto__;
            var temp__4655__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4655__auto____$1)) {
              var node_seq = temp__4655__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__15106 = j + 2;
              j = G__15106;
              continue;
            }
          } else {
            var G__15107 = j + 2;
            j = G__15107;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var G__15112 = null;
  var G__15112__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__15112__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__15112 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15112__1.call(this, x);
      case 2:
        return G__15112__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15112.cljs$core$IFn$_invoke$arity$1 = G__15112__1;
  G__15112.cljs$core$IFn$_invoke$arity$2 = G__15112__2;
  return G__15112;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var G__15113 = null;
  var G__15113__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__15113__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__15113 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15113__1.call(this, x);
      case 2:
        return G__15113__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15113.cljs$core$IFn$_invoke$arity$1 = G__15113__1;
  G__15113.cljs$core$IFn$_invoke$arity$2 = G__15113__2;
  return G__15113;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__15108 = null;
  var G__15109 = self__.nodes;
  var G__15110 = self__.i;
  var G__15111 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__15108, G__15109, G__15110, G__15111) : cljs.core.create_array_node_seq.call(null, G__15108, G__15109, G__15110, G__15111);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var args15114 = [];
  var len__7279__auto___15117 = arguments.length;
  var i__7280__auto___15118 = 0;
  while (true) {
    if (i__7280__auto___15118 < len__7279__auto___15117) {
      args15114.push(arguments[i__7280__auto___15118]);
      var G__15119 = i__7280__auto___15118 + 1;
      i__7280__auto___15118 = G__15119;
      continue;
    } else {
    }
    break;
  }
  var G__15116 = args15114.length;
  switch(G__15116) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15114.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4655__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4655__auto__)) {
          var nj = temp__4655__auto__;
          var temp__4655__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4655__auto____$1)) {
            var ns = temp__4655__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__15121 = j + 1;
            j = G__15121;
            continue;
          }
        } else {
          var G__15122 = j + 1;
          j = G__15122;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15124 = cljs.core.seq(coll);
  var chunk__15125 = null;
  var count__15126 = 0;
  var i__15127 = 0;
  while (true) {
    if (i__15127 < count__15126) {
      var vec__15128 = chunk__15125.cljs$core$IIndexed$_nth$arity$2(null, i__15127);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15128, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15128, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__15132 = seq__15124;
      var G__15133 = chunk__15125;
      var G__15134 = count__15126;
      var G__15135 = i__15127 + 1;
      seq__15124 = G__15132;
      chunk__15125 = G__15133;
      count__15126 = G__15134;
      i__15127 = G__15135;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__15124);
      if (temp__4657__auto__) {
        var seq__15124__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15124__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__15124__$1);
          var G__15136 = cljs.core.chunk_rest(seq__15124__$1);
          var G__15137 = c__7021__auto__;
          var G__15138 = cljs.core.count(c__7021__auto__);
          var G__15139 = 0;
          seq__15124 = G__15136;
          chunk__15125 = G__15137;
          count__15126 = G__15138;
          i__15127 = G__15139;
          continue;
        } else {
          var vec__15129 = cljs.core.first(seq__15124__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15129, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15129, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__15140 = cljs.core.next(seq__15124__$1);
          var G__15141 = null;
          var G__15142 = 0;
          var G__15143 = 0;
          seq__15124 = G__15140;
          chunk__15125 = G__15141;
          count__15126 = G__15142;
          i__15127 = G__15143;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15144 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15145 = cljs.core.next(es);
          ret = G__15144;
          es = G__15145;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__15146 = null;
  var G__15146__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15146__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15146 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15146__2.call(this, self__, k);
      case 3:
        return G__15146__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15146.cljs$core$IFn$_invoke$arity$2 = G__15146__2;
  G__15146.cljs$core$IFn$_invoke$arity$3 = G__15146__3;
  return G__15146;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args15123) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15123)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__15147 = i + 2;
      var G__15148 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__15147;
      ret = G__15148;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__15149 = i + 1;
      var G__15150 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__15149;
      out = G__15150;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4655__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          var G__15152 = cljs.core.next(es);
          var G__15153 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__15152;
          tcoll__$1 = G__15153;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__15154 = ascending_QMARK_ ? t.left : t.right;
      var G__15155 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__15154;
      stack__$1 = G__15155;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var G__15156 = null;
  var G__15156__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__15156__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__15156 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15156__1.call(this, x);
      case 2:
        return G__15156__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15156.cljs$core$IFn$_invoke$arity$1 = G__15156__1;
  G__15156.cljs$core$IFn$_invoke$arity$2 = G__15156__2;
  return G__15156;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var G__15157 = null;
  var G__15157__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__15157__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__15157 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15157__1.call(this, x);
      case 2:
        return G__15157__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15157.cljs$core$IFn$_invoke$arity$1 = G__15157__1;
  G__15157.cljs$core$IFn$_invoke$arity$2 = G__15157__2;
  return G__15157;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__15167 = init__$1;
      var G__15168 = node.key;
      var G__15169 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15167, G__15168, G__15169) : f.call(null, G__15167, G__15168, G__15169);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var G__15171 = null;
  var G__15171__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__15171__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__15171 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15171__1.call(this, x);
      case 2:
        return G__15171__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15171.cljs$core$IFn$_invoke$arity$1 = G__15171__1;
  G__15171.cljs$core$IFn$_invoke$arity$2 = G__15171__2;
  return G__15171;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var G__15172 = null;
  var G__15172__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__15172__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__15172 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15172__1.call(this, x);
      case 2:
        return G__15172__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15172.cljs$core$IFn$_invoke$arity$1 = G__15172__1;
  G__15172.cljs$core$IFn$_invoke$arity$2 = G__15172__2;
  return G__15172;
}();
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__15173 = null;
  var G__15173__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15173__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15173 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15173__2.call(this, self__, k);
      case 3:
        return G__15173__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15173.cljs$core$IFn$_invoke$arity$2 = G__15173__2;
  G__15173.cljs$core$IFn$_invoke$arity$3 = G__15173__3;
  return G__15173;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args15170) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15170)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var G__15175 = null;
  var G__15175__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__15175__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__15175 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15175__1.call(this, x);
      case 2:
        return G__15175__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15175.cljs$core$IFn$_invoke$arity$1 = G__15175__1;
  G__15175.cljs$core$IFn$_invoke$arity$2 = G__15175__2;
  return G__15175;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var G__15176 = null;
  var G__15176__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__15176__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__15176 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15176__1.call(this, x);
      case 2:
        return G__15176__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15176.cljs$core$IFn$_invoke$arity$1 = G__15176__1;
  G__15176.cljs$core$IFn$_invoke$arity$2 = G__15176__2;
  return G__15176;
}();
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__15177 = null;
  var G__15177__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15177__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15177 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15177__2.call(this, self__, k);
      case 3:
        return G__15177__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15177.cljs$core$IFn$_invoke$arity$2 = G__15177__2;
  G__15177.cljs$core$IFn$_invoke$arity$3 = G__15177__3;
  return G__15177;
}();
cljs.core.RedNode.prototype.apply = function(self__, args15174) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15174)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__15190 = k;
      var G__15191 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15190, G__15191) : comp.call(null, G__15190, G__15191);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__15210 = k;
      var G__15211 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15210, G__15211) : comp.call(null, G__15210, G__15211);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15221 = cljs.core.seq(coll);
  var chunk__15222 = null;
  var count__15223 = 0;
  var i__15224 = 0;
  while (true) {
    if (i__15224 < count__15223) {
      var vec__15225 = chunk__15222.cljs$core$IIndexed$_nth$arity$2(null, i__15224);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15225, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15225, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__15231 = seq__15221;
      var G__15232 = chunk__15222;
      var G__15233 = count__15223;
      var G__15234 = i__15224 + 1;
      seq__15221 = G__15231;
      chunk__15222 = G__15232;
      count__15223 = G__15233;
      i__15224 = G__15234;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__15221);
      if (temp__4657__auto__) {
        var seq__15221__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15221__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__15221__$1);
          var G__15235 = cljs.core.chunk_rest(seq__15221__$1);
          var G__15236 = c__7021__auto__;
          var G__15237 = cljs.core.count(c__7021__auto__);
          var G__15238 = 0;
          seq__15221 = G__15235;
          chunk__15222 = G__15236;
          count__15223 = G__15237;
          i__15224 = G__15238;
          continue;
        } else {
          var vec__15226 = cljs.core.first(seq__15221__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15226, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15226, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__15239 = cljs.core.next(seq__15221__$1);
          var G__15240 = null;
          var G__15241 = 0;
          var G__15242 = 0;
          seq__15221 = G__15239;
          chunk__15222 = G__15240;
          count__15223 = G__15241;
          i__15224 = G__15242;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__15227 = k;
        var G__15228 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15227, G__15228) : self__.comp.call(null, G__15227, G__15228);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__15243 = t.left;
          t = G__15243;
          continue;
        } else {
          var G__15244 = t.right;
          t = G__15244;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15245 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15246 = cljs.core.next(es);
          ret = G__15245;
          es = G__15246;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__15247 = null;
  var G__15247__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15247__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15247 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15247__2.call(this, self__, k);
      case 3:
        return G__15247__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15247.cljs$core$IFn$_invoke$arity$2 = G__15247__2;
  G__15247.cljs$core$IFn$_invoke$arity$3 = G__15247__3;
  return G__15247;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args15220) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15220)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__15229 = k;
          var G__15230 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15229, G__15230) : self__.comp.call(null, G__15229, G__15230);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__15248 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__15249 = t.left;
              stack = G__15248;
              t = G__15249;
              continue;
            } else {
              var G__15250 = stack;
              var G__15251 = t.right;
              stack = G__15250;
              t = G__15251;
              continue;
            }
          } else {
            if (c > 0) {
              var G__15252 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__15253 = t.right;
              stack = G__15252;
              t = G__15253;
              continue;
            } else {
              var G__15254 = stack;
              var G__15255 = t.left;
              stack = G__15254;
              t = G__15255;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15257 = arguments.length;
  var i__7280__auto___15258 = 0;
  while (true) {
    if (i__7280__auto___15258 < len__7279__auto___15257) {
      args__7286__auto__.push(arguments[i__7280__auto___15258]);
      var G__15259 = i__7280__auto___15258 + 1;
      i__7280__auto___15258 = G__15259;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__15260 = cljs.core.nnext(in$);
      var G__15261 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__15260;
      out = G__15261;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq15256) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15256));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15263 = arguments.length;
  var i__7280__auto___15264 = 0;
  while (true) {
    if (i__7280__auto___15264 < len__7279__auto___15263) {
      args__7286__auto__.push(arguments[i__7280__auto___15264]);
      var G__15265 = i__7280__auto___15264 + 1;
      i__7280__auto___15264 = G__15265;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq15262) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15262));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15269 = arguments.length;
  var i__7280__auto___15270 = 0;
  while (true) {
    if (i__7280__auto___15270 < len__7279__auto___15269) {
      args__7286__auto__.push(arguments[i__7280__auto___15270]);
      var G__15271 = i__7280__auto___15270 + 1;
      i__7280__auto___15270 = G__15271;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__15272 = cljs.core.nnext(kvs);
      kvs = G__15272;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq15266) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15266));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15274 = arguments.length;
  var i__7280__auto___15275 = 0;
  while (true) {
    if (i__7280__auto___15275 < len__7279__auto___15274) {
      args__7286__auto__.push(arguments[i__7280__auto___15275]);
      var G__15276 = i__7280__auto___15275 + 1;
      i__7280__auto___15275 = G__15276;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__15277 = cljs.core.nnext(in$);
      var G__15278 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__15277;
      out = G__15278;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq15273) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15273));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15281 = arguments.length;
  var i__7280__auto___15282 = 0;
  while (true) {
    if (i__7280__auto___15282 < len__7279__auto___15281) {
      args__7286__auto__.push(arguments[i__7280__auto___15282]);
      var G__15283 = i__7280__auto___15282 + 1;
      i__7280__auto___15282 = G__15283;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 1 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7287__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__15284 = cljs.core.nnext(in$);
      var G__15285 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__15284;
      out = G__15285;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq15279) {
  var G__15280 = cljs.core.first(seq15279);
  var seq15279__$1 = cljs.core.next(seq15279);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__15280, seq15279__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var G__15288 = null;
  var G__15288__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__15288__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__15288 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15288__1.call(this, x);
      case 2:
        return G__15288__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15288.cljs$core$IFn$_invoke$arity$1 = G__15288__1;
  G__15288.cljs$core$IFn$_invoke$arity$2 = G__15288__2;
  return G__15288;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var G__15289 = null;
  var G__15289__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__15289__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__15289 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15289__1.call(this, x);
      case 2:
        return G__15289__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15289.cljs$core$IFn$_invoke$arity$1 = G__15289__1;
  G__15289.cljs$core$IFn$_invoke$arity$2 = G__15289__2;
  return G__15289;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var G__15292 = null;
  var G__15292__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__15292__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__15292 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15292__1.call(this, x);
      case 2:
        return G__15292__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15292.cljs$core$IFn$_invoke$arity$1 = G__15292__1;
  G__15292.cljs$core$IFn$_invoke$arity$2 = G__15292__2;
  return G__15292;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var G__15293 = null;
  var G__15293__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__15293__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__15293 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15293__1.call(this, x);
      case 2:
        return G__15293__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15293.cljs$core$IFn$_invoke$arity$1 = G__15293__1;
  G__15293.cljs$core$IFn$_invoke$arity$2 = G__15293__2;
  return G__15293;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15297 = arguments.length;
  var i__7280__auto___15298 = 0;
  while (true) {
    if (i__7280__auto___15298 < len__7279__auto___15297) {
      args__7286__auto__.push(arguments[i__7280__auto___15298]);
      var G__15299 = i__7280__auto___15298 + 1;
      i__7280__auto___15298 = G__15299;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__15294_SHARP_, p2__15295_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__6210__auto__ = p1__15294_SHARP_;
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__15295_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq15296) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15296));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15304 = arguments.length;
  var i__7280__auto___15305 = 0;
  while (true) {
    if (i__7280__auto___15305 < len__7279__auto___15304) {
      args__7286__auto__.push(arguments[i__7280__auto___15305]);
      var G__15306 = i__7280__auto___15305 + 1;
      i__7280__auto___15305 = G__15306;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 1 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7287__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__15302 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__15303 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15302, G__15303) : f.call(null, G__15302, G__15303);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__6210__auto__ = m1;
          if (cljs.core.truth_(or__6210__auto__)) {
            return or__6210__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq15300) {
  var G__15301 = cljs.core.first(seq15300);
  var seq15300__$1 = cljs.core.next(seq15300);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__15301, seq15300__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__15307 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__15308 = cljs.core.next(keys);
      ret = G__15307;
      keys = G__15308;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15311 = cljs.core.seq(coll);
  var chunk__15312 = null;
  var count__15313 = 0;
  var i__15314 = 0;
  while (true) {
    if (i__15314 < count__15313) {
      var vec__15315 = chunk__15312.cljs$core$IIndexed$_nth$arity$2(null, i__15314);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15315, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15315, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__15317 = seq__15311;
      var G__15318 = chunk__15312;
      var G__15319 = count__15313;
      var G__15320 = i__15314 + 1;
      seq__15311 = G__15317;
      chunk__15312 = G__15318;
      count__15313 = G__15319;
      i__15314 = G__15320;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__15311);
      if (temp__4657__auto__) {
        var seq__15311__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15311__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__15311__$1);
          var G__15321 = cljs.core.chunk_rest(seq__15311__$1);
          var G__15322 = c__7021__auto__;
          var G__15323 = cljs.core.count(c__7021__auto__);
          var G__15324 = 0;
          seq__15311 = G__15321;
          chunk__15312 = G__15322;
          count__15313 = G__15323;
          i__15314 = G__15324;
          continue;
        } else {
          var vec__15316 = cljs.core.first(seq__15311__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15316, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15316, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__15325 = cljs.core.next(seq__15311__$1);
          var G__15326 = null;
          var G__15327 = 0;
          var G__15328 = 0;
          seq__15311 = G__15325;
          chunk__15312 = G__15326;
          count__15313 = G__15327;
          i__15314 = G__15328;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__15309_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__15309_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__15329 = null;
  var G__15329__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15329__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15329 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15329__2.call(this, self__, k);
      case 3:
        return G__15329__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15329.cljs$core$IFn$_invoke$arity$2 = G__15329__2;
  G__15329.cljs$core$IFn$_invoke$arity$3 = G__15329__3;
  return G__15329;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args15310) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15310)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__15330 = i + 1;
        var G__15331 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__15330;
        out = G__15331;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__15332 = i + 1;
        var G__15333 = cljs.core._conj_BANG_(out, items[i]);
        i = G__15332;
        out = G__15333;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__15335 = null;
  var G__15335__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__15335__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__15335 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15335__2.call(this, self__, k);
      case 3:
        return G__15335__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15335.cljs$core$IFn$_invoke$arity$2 = G__15335__2;
  G__15335.cljs$core$IFn$_invoke$arity$3 = G__15335__3;
  return G__15335;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args15334) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15334)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15338 = cljs.core.seq(coll);
  var chunk__15339 = null;
  var count__15340 = 0;
  var i__15341 = 0;
  while (true) {
    if (i__15341 < count__15340) {
      var vec__15342 = chunk__15339.cljs$core$IIndexed$_nth$arity$2(null, i__15341);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15342, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15342, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__15344 = seq__15338;
      var G__15345 = chunk__15339;
      var G__15346 = count__15340;
      var G__15347 = i__15341 + 1;
      seq__15338 = G__15344;
      chunk__15339 = G__15345;
      count__15340 = G__15346;
      i__15341 = G__15347;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__15338);
      if (temp__4657__auto__) {
        var seq__15338__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15338__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__15338__$1);
          var G__15348 = cljs.core.chunk_rest(seq__15338__$1);
          var G__15349 = c__7021__auto__;
          var G__15350 = cljs.core.count(c__7021__auto__);
          var G__15351 = 0;
          seq__15338 = G__15348;
          chunk__15339 = G__15349;
          count__15340 = G__15350;
          i__15341 = G__15351;
          continue;
        } else {
          var vec__15343 = cljs.core.first(seq__15338__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15343, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15343, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__15352 = cljs.core.next(seq__15338__$1);
          var G__15353 = null;
          var G__15354 = 0;
          var G__15355 = 0;
          seq__15338 = G__15352;
          chunk__15339 = G__15353;
          count__15340 = G__15354;
          i__15341 = G__15355;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__15336_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__15336_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__15356 = null;
  var G__15356__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15356__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15356 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15356__2.call(this, self__, k);
      case 3:
        return G__15356__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15356.cljs$core$IFn$_invoke$arity$2 = G__15356__2;
  G__15356.cljs$core$IFn$_invoke$arity$3 = G__15356__3;
  return G__15356;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args15337) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15337)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__7118__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__7118__auto__.length) {
        var G__15357 = i + 1;
        var G__15358 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__15357;
        res = G__15358;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__15359 = cljs.core.next(in$__$1);
          var G__15360 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__15359;
          out = G__15360;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var args15361 = [];
  var len__7279__auto___15365 = arguments.length;
  var i__7280__auto___15366 = 0;
  while (true) {
    if (i__7280__auto___15366 < len__7279__auto___15365) {
      args15361.push(arguments[i__7280__auto___15366]);
      var G__15367 = i__7280__auto___15366 + 1;
      i__7280__auto___15366 = G__15367;
      continue;
    } else {
    }
    break;
  }
  var G__15364 = args15361.length;
  switch(G__15364) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args15361.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__7298__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq15362) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15362));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15370 = arguments.length;
  var i__7280__auto___15371 = 0;
  while (true) {
    if (i__7280__auto___15371 < len__7279__auto___15370) {
      args__7286__auto__.push(arguments[i__7280__auto___15371]);
      var G__15372 = i__7280__auto___15371 + 1;
      i__7280__auto___15371 = G__15372;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq15369) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15369));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15375 = arguments.length;
  var i__7280__auto___15376 = 0;
  while (true) {
    if (i__7280__auto___15376 < len__7279__auto___15375) {
      args__7286__auto__.push(arguments[i__7280__auto___15376]);
      var G__15377 = i__7280__auto___15376 + 1;
      i__7280__auto___15376 = G__15377;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 1 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7287__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq15373) {
  var G__15374 = cljs.core.first(seq15373);
  var seq15373__$1 = cljs.core.next(seq15373);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__15374, seq15373__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var args15380 = [];
  var len__7279__auto___15383 = arguments.length;
  var i__7280__auto___15384 = 0;
  while (true) {
    if (i__7280__auto___15384 < len__7279__auto___15383) {
      args15380.push(arguments[i__7280__auto___15384]);
      var G__15385 = i__7280__auto___15384 + 1;
      i__7280__auto___15384 = G__15385;
      continue;
    } else {
    }
    break;
  }
  var G__15382 = args15380.length;
  switch(G__15382) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15380.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__15378_SHARP_) {
    var temp__4655__auto__ = cljs.core.find(smap, p1__15378_SHARP_);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var e = temp__4655__auto__;
      return cljs.core.val(e);
    } else {
      return p1__15378_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4655__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__15379_SHARP_) {
      var temp__4655__auto__ = cljs.core.find(smap, p1__15379_SHARP_);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var e = temp__4655__auto__;
        return cljs.core.second(e);
      } else {
        return p1__15379_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var args15387 = [];
  var len__7279__auto___15396 = arguments.length;
  var i__7280__auto___15397 = 0;
  while (true) {
    if (i__7280__auto___15397 < len__7279__auto___15396) {
      args15387.push(arguments[i__7280__auto___15397]);
      var G__15398 = i__7280__auto___15397 + 1;
      i__7280__auto___15397 = G__15398;
      continue;
    } else {
    }
    break;
  }
  var G__15389 = args15387.length;
  switch(G__15389) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15387.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__15400 = null;
        var G__15400__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15400__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__15400__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__15400 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15400__0.call(this);
            case 1:
              return G__15400__1.call(this, result);
            case 2:
              return G__15400__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15400.cljs$core$IFn$_invoke$arity$0 = G__15400__0;
        G__15400.cljs$core$IFn$_invoke$arity$1 = G__15400__1;
        G__15400.cljs$core$IFn$_invoke$arity$2 = G__15400__2;
        return G__15400;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__15394, seen__$1) {
        while (true) {
          var vec__15395 = p__15394;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15395, 0, null);
          var xs__$1 = vec__15395;
          var temp__4657__auto__ = cljs.core.seq(xs__$1);
          if (temp__4657__auto__) {
            var s = temp__4657__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__15401 = cljs.core.rest(s);
              var G__15402 = seen__$1;
              p__15394 = G__15401;
              seen__$1 = G__15402;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__15403 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__15404 = cljs.core.next(s__$1);
      ret = G__15403;
      s__$1 = G__15404;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__15407 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__15408 = cljs.core.next(ks);
      var G__15409 = cljs.core.next(vs);
      map = G__15407;
      ks = G__15408;
      vs = G__15409;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var args15412 = [];
  var len__7279__auto___15419 = arguments.length;
  var i__7280__auto___15420 = 0;
  while (true) {
    if (i__7280__auto___15420 < len__7279__auto___15419) {
      args15412.push(arguments[i__7280__auto___15420]);
      var G__15421 = i__7280__auto___15420 + 1;
      i__7280__auto___15420 = G__15421;
      continue;
    } else {
    }
    break;
  }
  var G__15418 = args15412.length;
  switch(G__15418) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args15412.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15410_SHARP_, p2__15411_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__15410_SHARP_, p2__15411_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq15413) {
  var G__15414 = cljs.core.first(seq15413);
  var seq15413__$1 = cljs.core.next(seq15413);
  var G__15415 = cljs.core.first(seq15413__$1);
  var seq15413__$2 = cljs.core.next(seq15413__$1);
  var G__15416 = cljs.core.first(seq15413__$2);
  var seq15413__$3 = cljs.core.next(seq15413__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__15414, G__15415, G__15416, seq15413__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var args15425 = [];
  var len__7279__auto___15432 = arguments.length;
  var i__7280__auto___15433 = 0;
  while (true) {
    if (i__7280__auto___15433 < len__7279__auto___15432) {
      args15425.push(arguments[i__7280__auto___15433]);
      var G__15434 = i__7280__auto___15433 + 1;
      i__7280__auto___15433 = G__15434;
      continue;
    } else {
    }
    break;
  }
  var G__15431 = args15425.length;
  switch(G__15431) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args15425.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15423_SHARP_, p2__15424_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__15423_SHARP_, p2__15424_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq15426) {
  var G__15427 = cljs.core.first(seq15426);
  var seq15426__$1 = cljs.core.next(seq15426);
  var G__15428 = cljs.core.first(seq15426__$1);
  var seq15426__$2 = cljs.core.next(seq15426__$1);
  var G__15429 = cljs.core.first(seq15426__$2);
  var seq15426__$3 = cljs.core.next(seq15426__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__15427, G__15428, G__15429, seq15426__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var args15436 = [];
  var len__7279__auto___15439 = arguments.length;
  var i__7280__auto___15440 = 0;
  while (true) {
    if (i__7280__auto___15440 < len__7279__auto___15439) {
      args15436.push(arguments[i__7280__auto___15440]);
      var G__15441 = i__7280__auto___15440 + 1;
      i__7280__auto___15440 = G__15441;
      continue;
    } else {
    }
    break;
  }
  var G__15438 = args15436.length;
  switch(G__15438) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15436.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__15443 = null;
        var G__15443__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15443__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__15443__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__15443 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15443__0.call(this);
            case 1:
              return G__15443__1.call(this, result);
            case 2:
              return G__15443__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15443.cljs$core$IFn$_invoke$arity$0 = G__15443__0;
        G__15443.cljs$core$IFn$_invoke$arity$1 = G__15443__1;
        G__15443.cljs$core$IFn$_invoke$arity$2 = G__15443__2;
        return G__15443;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var args15444 = [];
  var len__7279__auto___15448 = arguments.length;
  var i__7280__auto___15449 = 0;
  while (true) {
    if (i__7280__auto___15449 < len__7279__auto___15448) {
      args15444.push(arguments[i__7280__auto___15449]);
      var G__15450 = i__7280__auto___15449 + 1;
      i__7280__auto___15449 = G__15450;
      continue;
    } else {
    }
    break;
  }
  var G__15446 = args15444.length;
  switch(G__15446) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15444.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__15452 = null;
      var G__15452__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__15452__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__15452__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__15452 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__15452__0.call(this);
          case 1:
            return G__15452__1.call(this, result);
          case 2:
            return G__15452__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15452.cljs$core$IFn$_invoke$arity$0 = G__15452__0;
      G__15452.cljs$core$IFn$_invoke$arity$1 = G__15452__1;
      G__15452.cljs$core$IFn$_invoke$arity$2 = G__15452__2;
      return G__15452;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.truth_(function() {
        var G__15447 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15447) : pred.call(null, G__15447);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__15461 = function() {
      var G__15463 = cljs.core._entry_key(sc, e);
      var G__15464 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15463, G__15464) : comp.call(null, G__15463, G__15464);
    }();
    var G__15462 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__15461, G__15462) : test.call(null, G__15461, G__15462);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var args15465 = [];
  var len__7279__auto___15470 = arguments.length;
  var i__7280__auto___15471 = 0;
  while (true) {
    if (i__7280__auto___15471 < len__7279__auto___15470) {
      args15465.push(arguments[i__7280__auto___15471]);
      var G__15472 = i__7280__auto___15471 + 1;
      i__7280__auto___15471 = G__15472;
      continue;
    } else {
    }
    break;
  }
  var G__15467 = args15465.length;
  switch(G__15467) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15465.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__15468 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15468, 0, null);
      var s = vec__15468;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__15469 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15469, 0, null);
    var s = vec__15469;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var args15474 = [];
  var len__7279__auto___15479 = arguments.length;
  var i__7280__auto___15480 = 0;
  while (true) {
    if (i__7280__auto___15480 < len__7279__auto___15479) {
      args15474.push(arguments[i__7280__auto___15480]);
      var G__15481 = i__7280__auto___15480 + 1;
      i__7280__auto___15480 = G__15481;
      continue;
    } else {
    }
    break;
  }
  var G__15476 = args15474.length;
  switch(G__15476) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15474.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__15477 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15477, 0, null);
      var s = vec__15477;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__15478 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15478, 0, null);
    var s = vec__15478;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.indexOf = function() {
  var G__15484 = null;
  var G__15484__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__15484__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__15484 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__15484__1.call(this, x);
      case 2:
        return G__15484__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15484.cljs$core$IFn$_invoke$arity$1 = G__15484__1;
  G__15484.cljs$core$IFn$_invoke$arity$2 = G__15484__2;
  return G__15484;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var G__15485 = null;
  var G__15485__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__15485__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__15485 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__15485__1.call(this, x);
      case 2:
        return G__15485__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15485.cljs$core$IFn$_invoke$arity$1 = G__15485__1;
  G__15485.cljs$core$IFn$_invoke$arity$2 = G__15485__2;
  return G__15485;
}();
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__15483 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__15483);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__15486 = i + self__.step;
        var G__15487 = ret__$1;
        i = G__15486;
        ret = G__15487;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.step < 0) {
      if (self__.start > self__.end) {
        return rng__$1;
      } else {
        return null;
      }
    } else {
      if (self__.start === self__.end) {
        return null;
      } else {
        return rng__$1;
      }
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.range = function cljs$core$range(var_args) {
  var args15488 = [];
  var len__7279__auto___15491 = arguments.length;
  var i__7280__auto___15492 = 0;
  while (true) {
    if (i__7280__auto___15492 < len__7279__auto___15491) {
      args15488.push(arguments[i__7280__auto___15492]);
      var G__15493 = i__7280__auto___15492 + 1;
      i__7280__auto___15492 = G__15493;
      continue;
    } else {
    }
    break;
  }
  var G__15490 = args15488.length;
  switch(G__15490) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15488.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var args15495 = [];
  var len__7279__auto___15498 = arguments.length;
  var i__7280__auto___15499 = 0;
  while (true) {
    if (i__7280__auto___15499 < len__7279__auto___15498) {
      args15495.push(arguments[i__7280__auto___15499]);
      var G__15500 = i__7280__auto___15499 + 1;
      i__7280__auto___15499 = G__15500;
      continue;
    } else {
    }
    break;
  }
  var G__15497 = args15495.length;
  switch(G__15497) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15495.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__15502 = null;
        var G__15502__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15502__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__15502__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__15502 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15502__0.call(this);
            case 1:
              return G__15502__1.call(this, result);
            case 2:
              return G__15502__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15502.cljs$core$IFn$_invoke$arity$0 = G__15502__0;
        G__15502.cljs$core$IFn$_invoke$arity$1 = G__15502__1;
        G__15502.cljs$core$IFn$_invoke$arity$2 = G__15502__2;
        return G__15502;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var args15504 = [];
  var len__7279__auto___15507 = arguments.length;
  var i__7280__auto___15508 = 0;
  while (true) {
    if (i__7280__auto___15508 < len__7279__auto___15507) {
      args15504.push(arguments[i__7280__auto___15508]);
      var G__15509 = i__7280__auto___15508 + 1;
      i__7280__auto___15508 = G__15509;
      continue;
    } else {
    }
    break;
  }
  var G__15506 = args15504.length;
  switch(G__15506) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15504.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__15511 = null;
        var G__15511__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15511__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__15511__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__15511 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15511__0.call(this);
            case 1:
              return G__15511__1.call(this, result);
            case 2:
              return G__15511__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15511.cljs$core$IFn$_invoke$arity$0 = G__15511__0;
        G__15511.cljs$core$IFn$_invoke$arity$1 = G__15511__1;
        G__15511.cljs$core$IFn$_invoke$arity$2 = G__15511__2;
        return G__15511;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4657__auto__) {
        return function(p1__15503_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__15503_SHARP_) : f.call(null, p1__15503_SHARP_));
        };
      }(fst, fv, s, temp__4657__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var args15512 = [];
  var len__7279__auto___15517 = arguments.length;
  var i__7280__auto___15518 = 0;
  while (true) {
    if (i__7280__auto___15518 < len__7279__auto___15517) {
      args15512.push(arguments[i__7280__auto___15518]);
      var G__15519 = i__7280__auto___15518 + 1;
      i__7280__auto___15518 = G__15519;
      continue;
    } else {
    }
    break;
  }
  var G__15514 = args15512.length;
  switch(G__15514) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15512.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4655__auto__ = cljs.core.seq(coll);
    if (temp__4655__auto__) {
      var s = temp__4655__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__15515 = init;
        var G__15516 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15515, G__15516) : f.call(null, G__15515, G__15516);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var args15531 = [];
  var len__7279__auto___15538 = arguments.length;
  var i__7280__auto___15539 = 0;
  while (true) {
    if (i__7280__auto___15539 < len__7279__auto___15538) {
      args15531.push(arguments[i__7280__auto___15539]);
      var G__15540 = i__7280__auto___15539 + 1;
      i__7280__auto___15539 = G__15540;
      continue;
    } else {
    }
    break;
  }
  var G__15537 = args15531.length;
  switch(G__15537) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args15531.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__15542 = null;
    var G__15542__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__15542__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__15542__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__15542__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__15542__4 = function() {
      var G__15543__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__15543 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15544__i = 0, G__15544__a = new Array(arguments.length - 3);
          while (G__15544__i < G__15544__a.length) {
            G__15544__a[G__15544__i] = arguments[G__15544__i + 3];
            ++G__15544__i;
          }
          args = new cljs.core.IndexedSeq(G__15544__a, 0);
        }
        return G__15543__delegate.call(this, x, y, z, args);
      };
      G__15543.cljs$lang$maxFixedArity = 3;
      G__15543.cljs$lang$applyTo = function(arglist__15545) {
        var x = cljs.core.first(arglist__15545);
        arglist__15545 = cljs.core.next(arglist__15545);
        var y = cljs.core.first(arglist__15545);
        arglist__15545 = cljs.core.next(arglist__15545);
        var z = cljs.core.first(arglist__15545);
        var args = cljs.core.rest(arglist__15545);
        return G__15543__delegate(x, y, z, args);
      };
      G__15543.cljs$core$IFn$_invoke$arity$variadic = G__15543__delegate;
      return G__15543;
    }();
    G__15542 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__15542__0.call(this);
        case 1:
          return G__15542__1.call(this, x);
        case 2:
          return G__15542__2.call(this, x, y);
        case 3:
          return G__15542__3.call(this, x, y, z);
        default:
          var G__15546 = null;
          if (arguments.length > 3) {
            var G__15547__i = 0, G__15547__a = new Array(arguments.length - 3);
            while (G__15547__i < G__15547__a.length) {
              G__15547__a[G__15547__i] = arguments[G__15547__i + 3];
              ++G__15547__i;
            }
            G__15546 = new cljs.core.IndexedSeq(G__15547__a, 0);
          }
          return G__15542__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15546);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15542.cljs$lang$maxFixedArity = 3;
    G__15542.cljs$lang$applyTo = G__15542__4.cljs$lang$applyTo;
    G__15542.cljs$core$IFn$_invoke$arity$0 = G__15542__0;
    G__15542.cljs$core$IFn$_invoke$arity$1 = G__15542__1;
    G__15542.cljs$core$IFn$_invoke$arity$2 = G__15542__2;
    G__15542.cljs$core$IFn$_invoke$arity$3 = G__15542__3;
    G__15542.cljs$core$IFn$_invoke$arity$variadic = G__15542__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15542;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__15548 = null;
    var G__15548__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__15548__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__15548__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__15548__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__15548__4 = function() {
      var G__15549__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__15549 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15550__i = 0, G__15550__a = new Array(arguments.length - 3);
          while (G__15550__i < G__15550__a.length) {
            G__15550__a[G__15550__i] = arguments[G__15550__i + 3];
            ++G__15550__i;
          }
          args = new cljs.core.IndexedSeq(G__15550__a, 0);
        }
        return G__15549__delegate.call(this, x, y, z, args);
      };
      G__15549.cljs$lang$maxFixedArity = 3;
      G__15549.cljs$lang$applyTo = function(arglist__15551) {
        var x = cljs.core.first(arglist__15551);
        arglist__15551 = cljs.core.next(arglist__15551);
        var y = cljs.core.first(arglist__15551);
        arglist__15551 = cljs.core.next(arglist__15551);
        var z = cljs.core.first(arglist__15551);
        var args = cljs.core.rest(arglist__15551);
        return G__15549__delegate(x, y, z, args);
      };
      G__15549.cljs$core$IFn$_invoke$arity$variadic = G__15549__delegate;
      return G__15549;
    }();
    G__15548 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__15548__0.call(this);
        case 1:
          return G__15548__1.call(this, x);
        case 2:
          return G__15548__2.call(this, x, y);
        case 3:
          return G__15548__3.call(this, x, y, z);
        default:
          var G__15552 = null;
          if (arguments.length > 3) {
            var G__15553__i = 0, G__15553__a = new Array(arguments.length - 3);
            while (G__15553__i < G__15553__a.length) {
              G__15553__a[G__15553__i] = arguments[G__15553__i + 3];
              ++G__15553__i;
            }
            G__15552 = new cljs.core.IndexedSeq(G__15553__a, 0);
          }
          return G__15548__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15552);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15548.cljs$lang$maxFixedArity = 3;
    G__15548.cljs$lang$applyTo = G__15548__4.cljs$lang$applyTo;
    G__15548.cljs$core$IFn$_invoke$arity$0 = G__15548__0;
    G__15548.cljs$core$IFn$_invoke$arity$1 = G__15548__1;
    G__15548.cljs$core$IFn$_invoke$arity$2 = G__15548__2;
    G__15548.cljs$core$IFn$_invoke$arity$3 = G__15548__3;
    G__15548.cljs$core$IFn$_invoke$arity$variadic = G__15548__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15548;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__15554 = null;
    var G__15554__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__15554__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__15554__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__15554__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__15554__4 = function() {
      var G__15555__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__15555 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15556__i = 0, G__15556__a = new Array(arguments.length - 3);
          while (G__15556__i < G__15556__a.length) {
            G__15556__a[G__15556__i] = arguments[G__15556__i + 3];
            ++G__15556__i;
          }
          args = new cljs.core.IndexedSeq(G__15556__a, 0);
        }
        return G__15555__delegate.call(this, x, y, z, args);
      };
      G__15555.cljs$lang$maxFixedArity = 3;
      G__15555.cljs$lang$applyTo = function(arglist__15557) {
        var x = cljs.core.first(arglist__15557);
        arglist__15557 = cljs.core.next(arglist__15557);
        var y = cljs.core.first(arglist__15557);
        arglist__15557 = cljs.core.next(arglist__15557);
        var z = cljs.core.first(arglist__15557);
        var args = cljs.core.rest(arglist__15557);
        return G__15555__delegate(x, y, z, args);
      };
      G__15555.cljs$core$IFn$_invoke$arity$variadic = G__15555__delegate;
      return G__15555;
    }();
    G__15554 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__15554__0.call(this);
        case 1:
          return G__15554__1.call(this, x);
        case 2:
          return G__15554__2.call(this, x, y);
        case 3:
          return G__15554__3.call(this, x, y, z);
        default:
          var G__15558 = null;
          if (arguments.length > 3) {
            var G__15559__i = 0, G__15559__a = new Array(arguments.length - 3);
            while (G__15559__i < G__15559__a.length) {
              G__15559__a[G__15559__i] = arguments[G__15559__i + 3];
              ++G__15559__i;
            }
            G__15558 = new cljs.core.IndexedSeq(G__15559__a, 0);
          }
          return G__15554__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15558);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15554.cljs$lang$maxFixedArity = 3;
    G__15554.cljs$lang$applyTo = G__15554__4.cljs$lang$applyTo;
    G__15554.cljs$core$IFn$_invoke$arity$0 = G__15554__0;
    G__15554.cljs$core$IFn$_invoke$arity$1 = G__15554__1;
    G__15554.cljs$core$IFn$_invoke$arity$2 = G__15554__2;
    G__15554.cljs$core$IFn$_invoke$arity$3 = G__15554__3;
    G__15554.cljs$core$IFn$_invoke$arity$variadic = G__15554__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15554;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__15560 = null;
      var G__15560__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__15521_SHARP_, p2__15522_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15521_SHARP_, p2__15522_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__15522_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__15522_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__15560__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__15523_SHARP_, p2__15524_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15523_SHARP_, p2__15524_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__15524_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__15524_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__15560__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__15525_SHARP_, p2__15526_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15525_SHARP_, p2__15526_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__15526_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__15526_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__15560__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__15527_SHARP_, p2__15528_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15527_SHARP_, p2__15528_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__15528_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__15528_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__15560__4 = function() {
        var G__15561__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__15529_SHARP_, p2__15530_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15529_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__15530_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__15561 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15562__i = 0, G__15562__a = new Array(arguments.length - 3);
            while (G__15562__i < G__15562__a.length) {
              G__15562__a[G__15562__i] = arguments[G__15562__i + 3];
              ++G__15562__i;
            }
            args = new cljs.core.IndexedSeq(G__15562__a, 0);
          }
          return G__15561__delegate.call(this, x, y, z, args);
        };
        G__15561.cljs$lang$maxFixedArity = 3;
        G__15561.cljs$lang$applyTo = function(arglist__15563) {
          var x = cljs.core.first(arglist__15563);
          arglist__15563 = cljs.core.next(arglist__15563);
          var y = cljs.core.first(arglist__15563);
          arglist__15563 = cljs.core.next(arglist__15563);
          var z = cljs.core.first(arglist__15563);
          var args = cljs.core.rest(arglist__15563);
          return G__15561__delegate(x, y, z, args);
        };
        G__15561.cljs$core$IFn$_invoke$arity$variadic = G__15561__delegate;
        return G__15561;
      }();
      G__15560 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15560__0.call(this);
          case 1:
            return G__15560__1.call(this, x);
          case 2:
            return G__15560__2.call(this, x, y);
          case 3:
            return G__15560__3.call(this, x, y, z);
          default:
            var G__15564 = null;
            if (arguments.length > 3) {
              var G__15565__i = 0, G__15565__a = new Array(arguments.length - 3);
              while (G__15565__i < G__15565__a.length) {
                G__15565__a[G__15565__i] = arguments[G__15565__i + 3];
                ++G__15565__i;
              }
              G__15564 = new cljs.core.IndexedSeq(G__15565__a, 0);
            }
            return G__15560__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15564);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15560.cljs$lang$maxFixedArity = 3;
      G__15560.cljs$lang$applyTo = G__15560__4.cljs$lang$applyTo;
      G__15560.cljs$core$IFn$_invoke$arity$0 = G__15560__0;
      G__15560.cljs$core$IFn$_invoke$arity$1 = G__15560__1;
      G__15560.cljs$core$IFn$_invoke$arity$2 = G__15560__2;
      G__15560.cljs$core$IFn$_invoke$arity$3 = G__15560__3;
      G__15560.cljs$core$IFn$_invoke$arity$variadic = G__15560__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15560;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq15532) {
  var G__15533 = cljs.core.first(seq15532);
  var seq15532__$1 = cljs.core.next(seq15532);
  var G__15534 = cljs.core.first(seq15532__$1);
  var seq15532__$2 = cljs.core.next(seq15532__$1);
  var G__15535 = cljs.core.first(seq15532__$2);
  var seq15532__$3 = cljs.core.next(seq15532__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__15533, G__15534, G__15535, seq15532__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var args15566 = [];
  var len__7279__auto___15569 = arguments.length;
  var i__7280__auto___15570 = 0;
  while (true) {
    if (i__7280__auto___15570 < len__7279__auto___15569) {
      args15566.push(arguments[i__7280__auto___15570]);
      var G__15571 = i__7280__auto___15570 + 1;
      i__7280__auto___15570 = G__15571;
      continue;
    } else {
    }
    break;
  }
  var G__15568 = args15566.length;
  switch(G__15568) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15566.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__15573 = cljs.core.next(coll);
      coll = G__15573;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__15574 = n - 1;
      var G__15575 = cljs.core.next(coll);
      n = G__15574;
      coll = G__15575;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var args15576 = [];
  var len__7279__auto___15579 = arguments.length;
  var i__7280__auto___15580 = 0;
  while (true) {
    if (i__7280__auto___15580 < len__7279__auto___15579) {
      args15576.push(arguments[i__7280__auto___15580]);
      var G__15581 = i__7280__auto___15580 + 1;
      i__7280__auto___15580 = G__15581;
      continue;
    } else {
    }
    break;
  }
  var G__15578 = args15576.length;
  switch(G__15578) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15576.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__15584 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15584, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15584, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__6210__auto__ = flags;
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_15592 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__6210__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__6210__auto__)) {
              return or__6210__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__15593_15599 = cljs.core.first(coll);
          var G__15594_15600 = writer;
          var G__15595_15601 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15593_15599, G__15594_15600, G__15595_15601) : print_one.call(null, G__15593_15599, G__15594_15600, G__15595_15601);
        } else {
        }
        var coll_15602__$1 = cljs.core.next(coll);
        var n_15603 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_15602__$1 && (n_15603 == null || !(n_15603 === 0))) {
            cljs.core._write(writer, sep);
            var G__15596_15604 = cljs.core.first(coll_15602__$1);
            var G__15597_15605 = writer;
            var G__15598_15606 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15596_15604, G__15597_15605, G__15598_15606) : print_one.call(null, G__15596_15604, G__15597_15605, G__15598_15606);
            var G__15607 = cljs.core.next(coll_15602__$1);
            var G__15608 = n_15603 - 1;
            coll_15602__$1 = G__15607;
            n_15603 = G__15608;
            continue;
          } else {
            if (cljs.core.seq(coll_15602__$1) && n_15603 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__6210__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__6210__auto__)) {
                  return or__6210__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_15592;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15615 = arguments.length;
  var i__7280__auto___15616 = 0;
  while (true) {
    if (i__7280__auto___15616 < len__7279__auto___15615) {
      args__7286__auto__.push(arguments[i__7280__auto___15616]);
      var G__15617 = i__7280__auto___15616 + 1;
      i__7280__auto___15616 = G__15617;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 1 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7287__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__15611 = cljs.core.seq(ss);
  var chunk__15612 = null;
  var count__15613 = 0;
  var i__15614 = 0;
  while (true) {
    if (i__15614 < count__15613) {
      var s = chunk__15612.cljs$core$IIndexed$_nth$arity$2(null, i__15614);
      cljs.core._write(writer, s);
      var G__15618 = seq__15611;
      var G__15619 = chunk__15612;
      var G__15620 = count__15613;
      var G__15621 = i__15614 + 1;
      seq__15611 = G__15618;
      chunk__15612 = G__15619;
      count__15613 = G__15620;
      i__15614 = G__15621;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__15611);
      if (temp__4657__auto__) {
        var seq__15611__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15611__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__15611__$1);
          var G__15622 = cljs.core.chunk_rest(seq__15611__$1);
          var G__15623 = c__7021__auto__;
          var G__15624 = cljs.core.count(c__7021__auto__);
          var G__15625 = 0;
          seq__15611 = G__15622;
          chunk__15612 = G__15623;
          count__15613 = G__15624;
          i__15614 = G__15625;
          continue;
        } else {
          var s = cljs.core.first(seq__15611__$1);
          cljs.core._write(writer, s);
          var G__15626 = cljs.core.next(seq__15611__$1);
          var G__15627 = null;
          var G__15628 = 0;
          var G__15629 = 0;
          seq__15611 = G__15626;
          chunk__15612 = G__15627;
          count__15613 = G__15628;
          i__15614 = G__15629;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq15609) {
  var G__15610 = cljs.core.first(seq15609);
  var seq15609__$1 = cljs.core.next(seq15609);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__15610, seq15609__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj15631 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj15631;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__6198__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__6198__auto__) {
    var and__6198__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__6198__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__6198__auto____$1;
    }
  } else {
    return and__6198__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__15646_15654 = cljs.core.meta(obj);
      var G__15647_15655 = writer;
      var G__15648_15656 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__15646_15654, G__15647_15655, G__15648_15656) : cljs.core.pr_writer.call(null, G__15646_15654, G__15647_15655, G__15648_15656);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__15650 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__15651 = cljs.core.pr_writer;
            var G__15652 = writer;
            var G__15653 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__15650, G__15651, G__15652, G__15653) : cljs.core.print_map.call(null, G__15650, G__15651, G__15652, G__15653);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__6210__auto__ = name == null;
                    if (or__6210__auto__) {
                      return or__6210__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__15657 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__15657;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                      } else {
                        var name = obj.constructor.name;
                        var name__$1 = cljs.core.truth_(function() {
                          var or__6210__auto__ = name == null;
                          if (or__6210__auto__) {
                            return or__6210__auto__;
                          } else {
                            return goog.string.isEmpty(name);
                          }
                        }()) ? "Object" : name;
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var alt_impl = temp__4655__auto__;
    var G__15661 = obj;
    var G__15662 = writer;
    var G__15663 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__15661, G__15662, G__15663) : alt_impl.call(null, G__15661, G__15662, G__15663);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__15668 = cljs.core.seq(cljs.core.next(objs));
  var chunk__15669 = null;
  var count__15670 = 0;
  var i__15671 = 0;
  while (true) {
    if (i__15671 < count__15670) {
      var obj = chunk__15669.cljs$core$IIndexed$_nth$arity$2(null, i__15671);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__15672 = seq__15668;
      var G__15673 = chunk__15669;
      var G__15674 = count__15670;
      var G__15675 = i__15671 + 1;
      seq__15668 = G__15672;
      chunk__15669 = G__15673;
      count__15670 = G__15674;
      i__15671 = G__15675;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__15668);
      if (temp__4657__auto__) {
        var seq__15668__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15668__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__15668__$1);
          var G__15676 = cljs.core.chunk_rest(seq__15668__$1);
          var G__15677 = c__7021__auto__;
          var G__15678 = cljs.core.count(c__7021__auto__);
          var G__15679 = 0;
          seq__15668 = G__15676;
          chunk__15669 = G__15677;
          count__15670 = G__15678;
          i__15671 = G__15679;
          continue;
        } else {
          var obj = cljs.core.first(seq__15668__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__15680 = cljs.core.next(seq__15668__$1);
          var G__15681 = null;
          var G__15682 = 0;
          var G__15683 = 0;
          seq__15668 = G__15680;
          chunk__15669 = G__15681;
          count__15670 = G__15682;
          i__15671 = G__15683;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var args15684 = [];
  var len__7279__auto___15687 = arguments.length;
  var i__7280__auto___15688 = 0;
  while (true) {
    if (i__7280__auto___15688 < len__7279__auto___15687) {
      args15684.push(arguments[i__7280__auto___15688]);
      var G__15689 = i__7280__auto___15688 + 1;
      i__7280__auto___15688 = G__15689;
      continue;
    } else {
    }
    break;
  }
  var G__15686 = args15684.length;
  switch(G__15686) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15684.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15692 = arguments.length;
  var i__7280__auto___15693 = 0;
  while (true) {
    if (i__7280__auto___15693 < len__7279__auto___15692) {
      args__7286__auto__.push(arguments[i__7280__auto___15693]);
      var G__15694 = i__7280__auto___15693 + 1;
      i__7280__auto___15693 = G__15694;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq15691) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15691));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15696 = arguments.length;
  var i__7280__auto___15697 = 0;
  while (true) {
    if (i__7280__auto___15697 < len__7279__auto___15696) {
      args__7286__auto__.push(arguments[i__7280__auto___15697]);
      var G__15698 = i__7280__auto___15697 + 1;
      i__7280__auto___15697 = G__15698;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq15695) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15695));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15700 = arguments.length;
  var i__7280__auto___15701 = 0;
  while (true) {
    if (i__7280__auto___15701 < len__7279__auto___15700) {
      args__7286__auto__.push(arguments[i__7280__auto___15701]);
      var G__15702 = i__7280__auto___15701 + 1;
      i__7280__auto___15701 = G__15702;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq15699) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15699));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15703__i = 0, G__15703__a = new Array(arguments.length - 0);
      while (G__15703__i < G__15703__a.length) {
        G__15703__a[G__15703__i] = arguments[G__15703__i + 0];
        ++G__15703__i;
      }
      objs = new cljs.core.IndexedSeq(G__15703__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__15704) {
    var objs = cljs.core.seq(arglist__15704);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15706 = arguments.length;
  var i__7280__auto___15707 = 0;
  while (true) {
    if (i__7280__auto___15707 < len__7279__auto___15706) {
      args__7286__auto__.push(arguments[i__7280__auto___15707]);
      var G__15708 = i__7280__auto___15707 + 1;
      i__7280__auto___15707 = G__15708;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq15705) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15705));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15710 = arguments.length;
  var i__7280__auto___15711 = 0;
  while (true) {
    if (i__7280__auto___15711 < len__7279__auto___15710) {
      args__7286__auto__.push(arguments[i__7280__auto___15711]);
      var G__15712 = i__7280__auto___15711 + 1;
      i__7280__auto___15711 = G__15712;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq15709) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15709));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15714 = arguments.length;
  var i__7280__auto___15715 = 0;
  while (true) {
    if (i__7280__auto___15715 < len__7279__auto___15714) {
      args__7286__auto__.push(arguments[i__7280__auto___15715]);
      var G__15716 = i__7280__auto___15715 + 1;
      i__7280__auto___15715 = G__15716;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq15713) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15713));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15718 = arguments.length;
  var i__7280__auto___15719 = 0;
  while (true) {
    if (i__7280__auto___15719 < len__7279__auto___15718) {
      args__7286__auto__.push(arguments[i__7280__auto___15719]);
      var G__15720 = i__7280__auto___15719 + 1;
      i__7280__auto___15719 = G__15720;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq15717) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15717));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__15727_15733 = cljs.core.key(e);
    var G__15728_15734 = w;
    var G__15729_15735 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15727_15733, G__15728_15734, G__15729_15735) : print_one.call(null, G__15727_15733, G__15728_15734, G__15729_15735);
    cljs.core._write(w, " ");
    var G__15730 = cljs.core.val(e);
    var G__15731 = w;
    var G__15732 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15730, G__15731, G__15732) : print_one.call(null, G__15730, G__15731, G__15732);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15739 = arguments.length;
  var i__7280__auto___15740 = 0;
  while (true) {
    if (i__7280__auto___15740 < len__7279__auto___15739) {
      args__7286__auto__.push(arguments[i__7280__auto___15740]);
      var G__15741 = i__7280__auto___15740 + 1;
      i__7280__auto___15740 = G__15741;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 2 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7287__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq15736) {
  var G__15737 = cljs.core.first(seq15736);
  var seq15736__$1 = cljs.core.next(seq15736);
  var G__15738 = cljs.core.first(seq15736__$1);
  var seq15736__$2 = cljs.core.next(seq15736__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__15737, G__15738, seq15736__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var args15742 = [];
  var len__7279__auto___15745 = arguments.length;
  var i__7280__auto___15746 = 0;
  while (true) {
    if (i__7280__auto___15746 < len__7279__auto___15745) {
      args15742.push(arguments[i__7280__auto___15746]);
      var G__15747 = i__7280__auto___15746 + 1;
      i__7280__auto___15746 = G__15747;
      continue;
    } else {
    }
    break;
  }
  var G__15744 = args15742.length;
  switch(G__15744) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15742.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(x) {
  return cljs.core._realized_QMARK_(x);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__15749_SHARP_, p2__15750_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__15749_SHARP_, p2__15750_SHARP_) : rf.call(null, p1__15749_SHARP_, p2__15750_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__15751 = null;
      var G__15751__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__15751__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__15751__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__15751 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__15751__0.call(this);
          case 1:
            return G__15751__1.call(this, result);
          case 2:
            return G__15751__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15751.cljs$core$IFn$_invoke$arity$0 = G__15751__0;
      G__15751.cljs$core$IFn$_invoke$arity$1 = G__15751__1;
      G__15751.cljs$core$IFn$_invoke$arity$2 = G__15751__2;
      return G__15751;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var args15752 = [];
  var len__7279__auto___15755 = arguments.length;
  var i__7280__auto___15756 = 0;
  while (true) {
    if (i__7280__auto___15756 < len__7279__auto___15755) {
      args15752.push(arguments[i__7280__auto___15756]);
      var G__15757 = i__7280__auto___15756 + 1;
      i__7280__auto___15756 = G__15757;
      continue;
    } else {
    }
    break;
  }
  var G__15754 = args15752.length;
  switch(G__15754) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15752.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__15759 = null;
        var G__15759__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15759__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__15759__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__15759 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15759__0.call(this);
            case 1:
              return G__15759__1.call(this, result);
            case 2:
              return G__15759__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15759.cljs$core$IFn$_invoke$arity$0 = G__15759__0;
        G__15759.cljs$core$IFn$_invoke$arity$1 = G__15759__1;
        G__15759.cljs$core$IFn$_invoke$arity$2 = G__15759__2;
        return G__15759;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var args15760 = [];
  var len__7279__auto___15763 = arguments.length;
  var i__7280__auto___15764 = 0;
  while (true) {
    if (i__7280__auto___15764 < len__7279__auto___15763) {
      args15760.push(arguments[i__7280__auto___15764]);
      var G__15765 = i__7280__auto___15764 + 1;
      i__7280__auto___15764 = G__15765;
      continue;
    } else {
    }
    break;
  }
  var G__15762 = args15760.length;
  switch(G__15762) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15760.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var G__15767 = null;
  var G__15767__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, 0);
  };
  var G__15767__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__15767 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15767__1.call(this, x);
      case 2:
        return G__15767__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15767.cljs$core$IFn$_invoke$arity$1 = G__15767__1;
  G__15767.cljs$core$IFn$_invoke$arity$2 = G__15767__2;
  return G__15767;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var G__15768 = null;
  var G__15768__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, cljs.core.count(coll__$1));
  };
  var G__15768__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__15768 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15768__1.call(this, x);
      case 2:
        return G__15768__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15768.cljs$core$IFn$_invoke$arity$1 = G__15768__1;
  G__15768.cljs$core$IFn$_invoke$arity$2 = G__15768__2;
  return G__15768;
}();
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15770 = arguments.length;
  var i__7280__auto___15771 = 0;
  while (true) {
    if (i__7280__auto___15771 < len__7279__auto___15770) {
      args__7286__auto__.push(arguments[i__7280__auto___15771]);
      var G__15772 = i__7280__auto___15771 + 1;
      i__7280__auto___15771 = G__15772;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq15769) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15769));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15774_SHARP_, p2__15773_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__15773_SHARP_) : proc.call(null, p2__15773_SHARP_);
  }, null, coll);
  return null;
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto__.call(null, x);
    } else {
      var m__6874__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._key__GT_js[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto__.call(null, x);
    } else {
      var m__6874__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__15793_15803 = cljs.core.seq(x);
            var chunk__15794_15804 = null;
            var count__15795_15805 = 0;
            var i__15796_15806 = 0;
            while (true) {
              if (i__15796_15806 < count__15795_15805) {
                var vec__15797_15807 = chunk__15794_15804.cljs$core$IIndexed$_nth$arity$2(null, i__15796_15806);
                var k_15808 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15797_15807, 0, null);
                var v_15809 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15797_15807, 1, null);
                m[cljs.core.key__GT_js(k_15808)] = cljs$core$clj__GT_js(v_15809);
                var G__15810 = seq__15793_15803;
                var G__15811 = chunk__15794_15804;
                var G__15812 = count__15795_15805;
                var G__15813 = i__15796_15806 + 1;
                seq__15793_15803 = G__15810;
                chunk__15794_15804 = G__15811;
                count__15795_15805 = G__15812;
                i__15796_15806 = G__15813;
                continue;
              } else {
                var temp__4657__auto___15814 = cljs.core.seq(seq__15793_15803);
                if (temp__4657__auto___15814) {
                  var seq__15793_15815__$1 = temp__4657__auto___15814;
                  if (cljs.core.chunked_seq_QMARK_(seq__15793_15815__$1)) {
                    var c__7021__auto___15816 = cljs.core.chunk_first(seq__15793_15815__$1);
                    var G__15817 = cljs.core.chunk_rest(seq__15793_15815__$1);
                    var G__15818 = c__7021__auto___15816;
                    var G__15819 = cljs.core.count(c__7021__auto___15816);
                    var G__15820 = 0;
                    seq__15793_15803 = G__15817;
                    chunk__15794_15804 = G__15818;
                    count__15795_15805 = G__15819;
                    i__15796_15806 = G__15820;
                    continue;
                  } else {
                    var vec__15798_15821 = cljs.core.first(seq__15793_15815__$1);
                    var k_15822 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15798_15821, 0, null);
                    var v_15823 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15798_15821, 1, null);
                    m[cljs.core.key__GT_js(k_15822)] = cljs$core$clj__GT_js(v_15823);
                    var G__15824 = cljs.core.next(seq__15793_15815__$1);
                    var G__15825 = null;
                    var G__15826 = 0;
                    var G__15827 = 0;
                    seq__15793_15803 = G__15824;
                    chunk__15794_15804 = G__15825;
                    count__15795_15805 = G__15826;
                    i__15796_15806 = G__15827;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__15799_15828 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__15800_15829 = null;
              var count__15801_15830 = 0;
              var i__15802_15831 = 0;
              while (true) {
                if (i__15802_15831 < count__15801_15830) {
                  var x_15832__$1 = chunk__15800_15829.cljs$core$IIndexed$_nth$arity$2(null, i__15802_15831);
                  arr.push(x_15832__$1);
                  var G__15833 = seq__15799_15828;
                  var G__15834 = chunk__15800_15829;
                  var G__15835 = count__15801_15830;
                  var G__15836 = i__15802_15831 + 1;
                  seq__15799_15828 = G__15833;
                  chunk__15800_15829 = G__15834;
                  count__15801_15830 = G__15835;
                  i__15802_15831 = G__15836;
                  continue;
                } else {
                  var temp__4657__auto___15837 = cljs.core.seq(seq__15799_15828);
                  if (temp__4657__auto___15837) {
                    var seq__15799_15838__$1 = temp__4657__auto___15837;
                    if (cljs.core.chunked_seq_QMARK_(seq__15799_15838__$1)) {
                      var c__7021__auto___15839 = cljs.core.chunk_first(seq__15799_15838__$1);
                      var G__15840 = cljs.core.chunk_rest(seq__15799_15838__$1);
                      var G__15841 = c__7021__auto___15839;
                      var G__15842 = cljs.core.count(c__7021__auto___15839);
                      var G__15843 = 0;
                      seq__15799_15828 = G__15840;
                      chunk__15800_15829 = G__15841;
                      count__15801_15830 = G__15842;
                      i__15802_15831 = G__15843;
                      continue;
                    } else {
                      var x_15844__$1 = cljs.core.first(seq__15799_15838__$1);
                      arr.push(x_15844__$1);
                      var G__15845 = cljs.core.next(seq__15799_15838__$1);
                      var G__15846 = null;
                      var G__15847 = 0;
                      var G__15848 = 0;
                      seq__15799_15828 = G__15845;
                      chunk__15800_15829 = G__15846;
                      count__15801_15830 = G__15847;
                      i__15802_15831 = G__15848;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__6874__auto__.call(null, x, options);
    } else {
      var m__6874__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__6874__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var args15849 = [];
  var len__7279__auto___15874 = arguments.length;
  var i__7280__auto___15875 = 0;
  while (true) {
    if (i__7280__auto___15875 < len__7279__auto___15874) {
      args15849.push(arguments[i__7280__auto___15875]);
      var G__15876 = i__7280__auto___15875 + 1;
      i__7280__auto___15875 = G__15876;
      continue;
    } else {
    }
    break;
  }
  var G__15853 = args15849.length;
  switch(G__15853) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args15849.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7298__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__15854 = opts;
  var map__15854__$1 = (!(map__15854 == null) ? map__15854.cljs$lang$protocol_mask$partition0$ & 64 || map__15854.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__15854) : map__15854;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15854__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__15854, map__15854__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__6990__auto__ = function(map__15854, map__15854__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__15868(s__15869) {
                      return new cljs.core.LazySeq(null, function(map__15854, map__15854__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__15869__$1 = s__15869;
                          while (true) {
                            var temp__4657__auto__ = cljs.core.seq(s__15869__$1);
                            if (temp__4657__auto__) {
                              var s__15869__$2 = temp__4657__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__15869__$2)) {
                                var c__6988__auto__ = cljs.core.chunk_first(s__15869__$2);
                                var size__6989__auto__ = cljs.core.count(c__6988__auto__);
                                var b__15871 = cljs.core.chunk_buffer(size__6989__auto__);
                                if (function() {
                                  var i__15870 = 0;
                                  while (true) {
                                    if (i__15870 < size__6989__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__6988__auto__, i__15870);
                                      cljs.core.chunk_append(b__15871, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__15878 = i__15870 + 1;
                                      i__15870 = G__15878;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__15871), cljs$core$thisfn_$_iter__15868(cljs.core.chunk_rest(s__15869__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__15871), null);
                                }
                              } else {
                                var k = cljs.core.first(s__15869__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__15868(cljs.core.rest(s__15869__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__15854, map__15854__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__15854, map__15854__$1, keywordize_keys, keyfn);
                  return iter__6990__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__15854, map__15854__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq15850) {
  var G__15851 = cljs.core.first(seq15850);
  var seq15850__$1 = cljs.core.next(seq15850);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__15851, seq15850__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__15880 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15880) : cljs.core.atom.call(null, G__15880);
  }();
  return function(mem) {
    return function() {
      var G__15881__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__15881 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__15882__i = 0, G__15882__a = new Array(arguments.length - 0);
          while (G__15882__i < G__15882__a.length) {
            G__15882__a[G__15882__i] = arguments[G__15882__i + 0];
            ++G__15882__i;
          }
          args = new cljs.core.IndexedSeq(G__15882__a, 0);
        }
        return G__15881__delegate.call(this, args);
      };
      G__15881.cljs$lang$maxFixedArity = 0;
      G__15881.cljs$lang$applyTo = function(arglist__15883) {
        var args = cljs.core.seq(arglist__15883);
        return G__15881__delegate(args);
      };
      G__15881.cljs$core$IFn$_invoke$arity$variadic = G__15881__delegate;
      return G__15881;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var args15884 = [];
  var len__7279__auto___15889 = arguments.length;
  var i__7280__auto___15890 = 0;
  while (true) {
    if (i__7280__auto___15890 < len__7279__auto___15889) {
      args15884.push(arguments[i__7280__auto___15890]);
      var G__15891 = i__7280__auto___15890 + 1;
      i__7280__auto___15890 = G__15891;
      continue;
    } else {
    }
    break;
  }
  var G__15888 = args15884.length;
  switch(G__15888) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args15884.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7298__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__15893 = ret;
      f = G__15893;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq15885) {
  var G__15886 = cljs.core.first(seq15885);
  var seq15885__$1 = cljs.core.next(seq15885);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__15886, seq15885__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var args15894 = [];
  var len__7279__auto___15897 = arguments.length;
  var i__7280__auto___15898 = 0;
  while (true) {
    if (i__7280__auto___15898 < len__7279__auto___15897) {
      args15894.push(arguments[i__7280__auto___15898]);
      var G__15899 = i__7280__auto___15898 + 1;
      i__7280__auto___15898 = G__15899;
      continue;
    } else {
    }
    break;
  }
  var G__15896 = args15894.length;
  switch(G__15896) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15894.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__15902 = Math.random() * n;
  return Math.floor(G__15902);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__15904 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15904) : cljs.core.atom.call(null, G__15904);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15907 = arguments.length;
  var i__7280__auto___15908 = 0;
  while (true) {
    if (i__7280__auto___15908 < len__7279__auto___15907) {
      args__7286__auto__.push(arguments[i__7280__auto___15908]);
      var G__15909 = i__7280__auto___15908 + 1;
      i__7280__auto___15908 = G__15909;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 1 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7287__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq15905) {
  var G__15906 = cljs.core.first(seq15905);
  var seq15905__$1 = cljs.core.next(seq15905);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__15906, seq15905__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var args15910 = [];
  var len__7279__auto___15914 = arguments.length;
  var i__7280__auto___15915 = 0;
  while (true) {
    if (i__7280__auto___15915 < len__7279__auto___15914) {
      args15910.push(arguments[i__7280__auto___15915]);
      var G__15916 = i__7280__auto___15915 + 1;
      i__7280__auto___15915 = G__15916;
      continue;
    } else {
    }
    break;
  }
  var G__15912 = args15910.length;
  switch(G__15912) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15910.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__15913 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15913) : cljs.core.deref.call(null, G__15913);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__6210__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    var or__6210__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__6210__auto____$1) {
      return or__6210__auto____$1;
    } else {
      var and__6198__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__6198__auto__) {
        var and__6198__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__6198__auto____$1) {
          var and__6198__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__6198__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__15918 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__15919 = i + 1;
                ret = G__15918;
                i = G__15919;
                continue;
              }
              break;
            }
          } else {
            return and__6198__auto____$2;
          }
        } else {
          return and__6198__auto____$1;
        }
      } else {
        return and__6198__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var args15920 = [];
  var len__7279__auto___15924 = arguments.length;
  var i__7280__auto___15925 = 0;
  while (true) {
    if (i__7280__auto___15925 < len__7279__auto___15924) {
      args15920.push(arguments[i__7280__auto___15925]);
      var G__15926 = i__7280__auto___15925 + 1;
      i__7280__auto___15925 = G__15926;
      continue;
    } else {
    }
    break;
  }
  var G__15922 = args15920.length;
  switch(G__15922) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15920.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__15923 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15923) : cljs.core.deref.call(null, G__15923);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var args15928 = [];
  var len__7279__auto___15932 = arguments.length;
  var i__7280__auto___15933 = 0;
  while (true) {
    if (i__7280__auto___15933 < len__7279__auto___15932) {
      args15928.push(arguments[i__7280__auto___15933]);
      var G__15934 = i__7280__auto___15933 + 1;
      i__7280__auto___15933 = G__15934;
      continue;
    } else {
    }
    break;
  }
  var G__15930 = args15928.length;
  switch(G__15930) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15928.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__15931 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15931) : cljs.core.deref.call(null, G__15931);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var args15936 = [];
  var len__7279__auto___15940 = arguments.length;
  var i__7280__auto___15941 = 0;
  while (true) {
    if (i__7280__auto___15941 < len__7279__auto___15940) {
      args15936.push(arguments[i__7280__auto___15941]);
      var G__15942 = i__7280__auto___15941 + 1;
      i__7280__auto___15941 = G__15942;
      continue;
    } else {
    }
    break;
  }
  var G__15938 = args15936.length;
  switch(G__15938) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15936.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__15939 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15939) : cljs.core.deref.call(null, G__15939);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var args15944 = [];
  var len__7279__auto___15947 = arguments.length;
  var i__7280__auto___15948 = 0;
  while (true) {
    if (i__7280__auto___15948 < len__7279__auto___15947) {
      args15944.push(arguments[i__7280__auto___15948]);
      var G__15949 = i__7280__auto___15948 + 1;
      i__7280__auto___15948 = G__15949;
      continue;
    } else {
    }
    break;
  }
  var G__15946 = args15944.length;
  switch(G__15946) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15944.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error("Assert failed: (not\x3d tag parent)");
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__6210__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var args15954 = [];
  var len__7279__auto___15957 = arguments.length;
  var i__7280__auto___15958 = 0;
  while (true) {
    if (i__7280__auto___15958 < len__7279__auto___15957) {
      args15954.push(arguments[i__7280__auto___15958]);
      var G__15959 = i__7280__auto___15958 + 1;
      i__7280__auto___15958 = G__15959;
      continue;
    } else {
    }
    break;
  }
  var G__15956 = args15954.length;
  switch(G__15956) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15954.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__15951_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__15951_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__15951_SHARP_), cljs.core.second(p1__15951_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__15952_SHARP_, p2__15953_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__15952_SHARP_, p2__15953_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__6210__auto__ = cljs.core.truth_(function() {
    var and__6198__auto__ = xprefs;
    if (cljs.core.truth_(and__6198__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__6198__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    var or__6210__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__15973 = cljs.core.rest(ps);
          ps = G__15973;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__6210__auto____$1)) {
      return or__6210__auto____$1;
    } else {
      var or__6210__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__15974 = cljs.core.rest(ps);
            ps = G__15974;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__6210__auto____$2)) {
        return or__6210__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__6210__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__15977) {
    var vec__15978 = p__15977;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15978, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15978, 1, null);
    var e = vec__15978;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__6210__auto__ = be == null;
        if (or__6210__auto__) {
          return or__6210__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._reset[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto__.call(null, mf);
    } else {
      var m__6874__auto____$1 = cljs.core._reset["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._add_method[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__6874__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__6874__auto____$1 = cljs.core._add_method["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__6874__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._remove_method[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__6874__auto__.call(null, mf, dispatch_val);
    } else {
      var m__6874__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__6874__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._prefer_method[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__6874__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__6874__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__6874__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._get_method[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__6874__auto__.call(null, mf, dispatch_val);
    } else {
      var m__6874__auto____$1 = cljs.core._get_method["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__6874__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._methods[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto__.call(null, mf);
    } else {
      var m__6874__auto____$1 = cljs.core._methods["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._prefers[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto__.call(null, mf);
    } else {
      var m__6874__auto____$1 = cljs.core._prefers["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto__.call(null, mf);
    } else {
      var m__6874__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto__.call(null, mf);
    } else {
      var m__6874__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__15980 = null;
  var G__15980__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__15980__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__15980__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__15980__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__15980__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__15980__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__15980__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__15980__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__15980__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__15980__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__15980__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__15980__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__15980__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__15980__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__15980__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__15980__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__15980__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__15980__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__15980__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__15980__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__15980__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__15980__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__15980 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__15980__1.call(this, self__);
      case 2:
        return G__15980__2.call(this, self__, a);
      case 3:
        return G__15980__3.call(this, self__, a, b);
      case 4:
        return G__15980__4.call(this, self__, a, b, c);
      case 5:
        return G__15980__5.call(this, self__, a, b, c, d);
      case 6:
        return G__15980__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__15980__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__15980__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__15980__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__15980__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__15980__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__15980__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__15980__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__15980__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__15980__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__15980__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__15980__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__15980__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__15980__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__15980__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__15980__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__15980__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15980.cljs$core$IFn$_invoke$arity$1 = G__15980__1;
  G__15980.cljs$core$IFn$_invoke$arity$2 = G__15980__2;
  G__15980.cljs$core$IFn$_invoke$arity$3 = G__15980__3;
  G__15980.cljs$core$IFn$_invoke$arity$4 = G__15980__4;
  G__15980.cljs$core$IFn$_invoke$arity$5 = G__15980__5;
  G__15980.cljs$core$IFn$_invoke$arity$6 = G__15980__6;
  G__15980.cljs$core$IFn$_invoke$arity$7 = G__15980__7;
  G__15980.cljs$core$IFn$_invoke$arity$8 = G__15980__8;
  G__15980.cljs$core$IFn$_invoke$arity$9 = G__15980__9;
  G__15980.cljs$core$IFn$_invoke$arity$10 = G__15980__10;
  G__15980.cljs$core$IFn$_invoke$arity$11 = G__15980__11;
  G__15980.cljs$core$IFn$_invoke$arity$12 = G__15980__12;
  G__15980.cljs$core$IFn$_invoke$arity$13 = G__15980__13;
  G__15980.cljs$core$IFn$_invoke$arity$14 = G__15980__14;
  G__15980.cljs$core$IFn$_invoke$arity$15 = G__15980__15;
  G__15980.cljs$core$IFn$_invoke$arity$16 = G__15980__16;
  G__15980.cljs$core$IFn$_invoke$arity$17 = G__15980__17;
  G__15980.cljs$core$IFn$_invoke$arity$18 = G__15980__18;
  G__15980.cljs$core$IFn$_invoke$arity$19 = G__15980__19;
  G__15980.cljs$core$IFn$_invoke$arity$20 = G__15980__20;
  G__15980.cljs$core$IFn$_invoke$arity$21 = G__15980__21;
  G__15980.cljs$core$IFn$_invoke$arity$22 = G__15980__22;
  return G__15980;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args15979) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15979)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4655__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var target_fn = temp__4655__auto__;
    return target_fn;
  } else {
    var temp__4655__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var target_fn = temp__4655__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__15981 = self__.uuid;
  var G__15982 = other.uuid;
  return goog.array.defaultCompare(G__15981, G__15982);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var args15983 = [];
  var len__7279__auto___15986 = arguments.length;
  var i__7280__auto___15987 = 0;
  while (true) {
    if (i__7280__auto___15987 < len__7279__auto___15986) {
      args15983.push(arguments[i__7280__auto___15987]);
      var G__15988 = i__7280__auto___15987 + 1;
      i__7280__auto___15987 = G__15988;
      continue;
    } else {
    }
    break;
  }
  var G__15985 = args15983.length;
  switch(G__15985) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15983.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 22, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "finally", "finally", -1065347064, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, 
  "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, 
  null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "var", "var", 870848730, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), null, new cljs.core.Symbol(null, 
  "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__15990 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__15990) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15992_SHARP_, p2__15993_SHARP_) {
      goog.object.set(p1__15992_SHARP_, p2__15993_SHARP_, true);
      return p1__15992_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__15996 = cljs.core.next(ks__$1);
          var G__15997 = [cljs.core.str(function() {
            var G__15995 = ret;
            if (!(ret === "")) {
              return [cljs.core.str(G__15995), cljs.core.str("|")].join("");
            } else {
              return G__15995;
            }
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__15996;
          ret = G__15997;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_15998 = 0;
  while (true) {
    if (i_15998 < name.length) {
      var c_15999 = name.charAt(i_15998);
      var sub_16000 = goog.object.get(cljs.core.CHAR_MAP, c_15999);
      if (!(sub_16000 == null)) {
        sb.append(sub_16000);
      } else {
        sb.append(c_15999);
      }
      var G__16001 = i_15998 + 1;
      i_15998 = G__16001;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4655__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var match = temp__4655__auto__;
      var vec__16003 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16003, 0, null);
      var G__16004 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__16005 = r.lastIndex;
      ret = G__16004;
      last_match_end = G__16005;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__16010 = function() {
          var G__16008 = ctxt;
          var G__16009 = cljs.core.first(xs);
          return goog.object.get(G__16008, G__16009);
        }();
        var G__16011 = cljs.core.next(xs);
        ctxt = G__16010;
        xs = G__16011;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__16015 = cljs.core._STAR_target_STAR_;
  switch(G__16015) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var G__16017 = cljs.core.first(segs);
            return eval(G__16017);
          } catch (e16016) {
            if (e16016 instanceof ReferenceError) {
              var e = e16016;
              return null;
            } else {
              throw e16016;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var args16019 = [];
  var len__7279__auto___16022 = arguments.length;
  var i__7280__auto___16023 = 0;
  while (true) {
    if (i__7280__auto___16023 < len__7279__auto___16022) {
      args16019.push(arguments[i__7280__auto___16023]);
      var G__16024 = i__7280__auto___16023 + 1;
      i__7280__auto___16023 = G__16024;
      continue;
    } else {
    }
    break;
  }
  var G__16021 = args16019.length;
  switch(G__16021) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16019.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__16027 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16027) : cljs.core.atom.call(null, G__16027);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__16029 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16029) : cljs.core.atom.call(null, G__16029);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
goog.provide("fyke.graph");
goog.require("cljs.core");
fyke.graph.width = 960;
fyke.graph.height = 960;
fyke.graph.fill = d3.scale.category20();
fyke.graph.rescale = function fyke$graph$rescale() {
  var trans = d3.event.translate;
  var scale = d3.event.scale;
  return d3.select("#c-area").attr("transform", [cljs.core.str("translate("), cljs.core.str(trans), cljs.core.str(")"), cljs.core.str(" scale("), cljs.core.str(scale), cljs.core.str(")")].join(""));
};
fyke.graph.tick = function fyke$graph$tick(vis) {
  return function() {
    var node = vis.selectAll(".node");
    var link = vis.selectAll(".link");
    link.attr("x1", function(node, link) {
      return function(p1__16837_SHARP_) {
        return p1__16837_SHARP_.source.x;
      };
    }(node, link)).attr("y1", function(node, link) {
      return function(p1__16838_SHARP_) {
        return p1__16838_SHARP_.source.y;
      };
    }(node, link)).attr("x2", function(node, link) {
      return function(p1__16839_SHARP_) {
        return p1__16839_SHARP_.target.x;
      };
    }(node, link)).attr("y2", function(node, link) {
      return function(p1__16840_SHARP_) {
        return p1__16840_SHARP_.target.y;
      };
    }(node, link));
    return node.attr("x", function(node, link) {
      return function(p1__16841_SHARP_) {
        return p1__16841_SHARP_.x;
      };
    }(node, link)).attr("y", function(node, link) {
      return function(p1__16842_SHARP_) {
        return p1__16842_SHARP_.y;
      };
    }(node, link)).attr("transform", function(node, link) {
      return function(p1__16843_SHARP_) {
        return [cljs.core.str("translate("), cljs.core.str(p1__16843_SHARP_.x), cljs.core.str(","), cljs.core.str(p1__16843_SHARP_.y), cljs.core.str(")")].join("");
      };
    }(node, link));
  };
};
fyke.graph.add_children = function fyke$graph$add_children(node_holder, link_holder, force, child_fn) {
  return function(d) {
    child_fn.call(null, force, d);
    return fyke.graph.redraw.call(null, node_holder, link_holder, force, child_fn);
  };
};
fyke.graph.redraw_links = function fyke$graph$redraw_links(vis, force) {
  var link = vis.selectAll(".link").data(force.links());
  link.enter().insert("line").attr("class", "link");
  return link.exit().remove();
};
fyke.graph.redraw_nodes = function fyke$graph$redraw_nodes(node_holder, link_holder, force, child_fn) {
  var node = node_holder.selectAll(".node").data(force.nodes());
  var nodeg = node.enter().append("svg:g").attr("class", "node");
  nodeg.append("svg:circle").attr("class", function(node, nodeg) {
    return function(p1__16844_SHARP_) {
      console.log("NODE:", p1__16844_SHARP_);
      return [cljs.core.str("node-point "), cljs.core.str(p1__16844_SHARP_["class"])].join("");
    };
  }(node, nodeg)).attr("r", 5).on("dblclick", fyke.graph.add_children.call(null, node_holder, link_holder, force, child_fn)).transition().duration(750).ease("elastic").attr("r", function(node, nodeg) {
    return function(p1__16845_SHARP_) {
      return p1__16845_SHARP_.radius;
    };
  }(node, nodeg));
  nodeg.append("svg:text").attr("x", function(node, nodeg) {
    return function(p1__16846_SHARP_) {
      return 4 + p1__16846_SHARP_.radius;
    };
  }(node, nodeg)).attr("y", 4).attr("class", "node-text").text(function(node, nodeg) {
    return function(p1__16847_SHARP_) {
      return p1__16847_SHARP_.name;
    };
  }(node, nodeg));
  return node.exit().transition().attr("r", 0).remove();
};
fyke.graph.redraw = function fyke$graph$redraw(node_holder, link_holder, force, child_fn) {
  fyke.graph.redraw_links.call(null, link_holder, force);
  fyke.graph.redraw_nodes.call(null, node_holder, link_holder, force, child_fn);
  return force.start();
};
fyke.graph.init = function fyke$graph$init(width, height, nodes, links, child_fn, dis_fn) {
  var outer = d3.select("#graph").append("svg:svg").attr("width", width).attr("height", height).attr("pointer-events", "all");
  var vis = outer.call(d3.behavior.zoom().on("zoom", fyke.graph.rescale)).on("dblclick.zoom", null).append("svg:g").attr("id", "c-area");
  var rec = vis.append("svg:rect").attr("width", width).attr("height", height).attr("fill", "white");
  var link_holder = vis.append("svg:g").attr("class", "link-holder");
  var node_holder = vis.append("svg:g").attr("class", "node-holder");
  var force = d3.layout.force().size([width, height]).nodes(nodes).links(links).linkDistance(dis_fn).charge(function(outer, vis, rec, link_holder, node_holder) {
    return function(p1__16848_SHARP_) {
      return -500 * p1__16848_SHARP_.radius;
    };
  }(outer, vis, rec, link_holder, node_holder)).on("tick", fyke.graph.tick.call(null, vis));
  console.log(links);
  console.log(nodes);
  return fyke.graph.redraw.call(null, node_holder, link_holder, force, child_fn);
};
goog.provide("com.cognitect.transit.util");
goog.require("goog.object");
goog.scope(function() {
  var util = com.cognitect.transit.util, gobject = goog.object;
  if (typeof Object.keys != "undefined") {
    util.objectKeys = function(obj) {
      return Object.keys(obj);
    };
  } else {
    util.objectKeys = function(obj) {
      return gobject.getKeys(obj);
    };
  }
  if (typeof Array.isArray != "undefined") {
    util.isArray = function(obj) {
      return Array.isArray(obj);
    };
  } else {
    util.isArray = function(obj) {
      return goog.typeOf(obj) === "array";
    };
  }
  util.chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\x3d";
  util.randInt = function(ub) {
    return Math.round(Math.random() * ub);
  };
  util.randHex = function() {
    return util.randInt(15).toString(16);
  };
  util.randomUUID = function() {
    var rhex = (8 | 3 & util.randInt(14)).toString(16), ret = util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + "4" + util.randHex() + util.randHex() + util.randHex() + "-" + rhex + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + 
    util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex();
    return ret;
  };
  util.btoa = function(input) {
    if (typeof btoa != "undefined") {
      return btoa(input);
    } else {
      var str = String(input);
      for (var block, charCode, idx = 0, map = util.chars, output = "";str.charAt(idx | 0) || (map = "\x3d", idx % 1);output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {
        charCode = str.charCodeAt(idx += 3 / 4);
        if (charCode > 255) {
          throw new Error("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");
        }
        block = block << 8 | charCode;
      }
      return output;
    }
  };
  util.atob = function(input) {
    if (typeof atob != "undefined") {
      return atob(input);
    } else {
      var str = String(input).replace(/=+$/, "");
      if (str.length % 4 == 1) {
        throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");
      }
      for (var bc = 0, bs, buffer, idx = 0, output = "";buffer = str.charAt(idx++);~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {
        buffer = util.chars.indexOf(buffer);
      }
      return output;
    }
  };
  util.Uint8ToBase64 = function(u8Arr) {
    var CHUNK_SIZE = 32768, index = 0, length = u8Arr.length, result = "", slice = null;
    while (index < length) {
      slice = u8Arr.subarray(index, Math.min(index + CHUNK_SIZE, length));
      result += String.fromCharCode.apply(null, slice);
      index += CHUNK_SIZE;
    }
    return util.btoa(result);
  };
  util.Base64ToUint8 = function(base64) {
    var binary_string = util.atob(base64), len = binary_string.length, bytes = new Uint8Array(len);
    for (var i = 0;i < len;i++) {
      var ascii = binary_string.charCodeAt(i);
      bytes[i] = ascii;
    }
    return bytes;
  };
});
goog.provide("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.util");
goog.scope(function() {
  var eq = com.cognitect.transit.eq, util = com.cognitect.transit.util;
  eq.hashCodeProperty = "transit$hashCode$";
  eq.hashCodeCounter = 1;
  eq.equals = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      if (x === y) {
        return true;
      } else {
        if (typeof x === "object") {
          if (util.isArray(x)) {
            if (util.isArray(y)) {
              if (x.length === y.length) {
                for (var i = 0;i < x.length;i++) {
                  if (!eq.equals(x[i], y[i])) {
                    return false;
                  }
                }
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          } else {
            if (x.com$cognitect$transit$equals) {
              return x.com$cognitect$transit$equals(y);
            } else {
              if (y != null && typeof y === "object") {
                if (y.com$cognitect$transit$equals) {
                  return y.com$cognitect$transit$equals(x);
                } else {
                  var xklen = 0, yklen = util.objectKeys(y).length;
                  for (var p in x) {
                    if (!x.hasOwnProperty(p)) {
                      continue;
                    }
                    xklen++;
                    if (!y.hasOwnProperty(p)) {
                      return false;
                    } else {
                      if (!eq.equals(x[p], y[p])) {
                        return false;
                      }
                    }
                  }
                  return xklen === yklen;
                }
              } else {
                return false;
              }
            }
          }
        } else {
          return false;
        }
      }
    }
  };
  eq.hashCombine = function(seed, hash) {
    return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
  };
  eq.stringCodeCache = {};
  eq.stringCodeCacheSize = 0;
  eq.STR_CACHE_MAX = 256;
  eq.hashString = function(str) {
    var cached = eq.stringCodeCache[str];
    if (cached != null) {
      return cached;
    }
    var code = 0;
    for (var i = 0;i < str.length;++i) {
      code = 31 * code + str.charCodeAt(i);
      code %= 4294967296;
    }
    eq.stringCodeCacheSize++;
    if (eq.stringCodeCacheSize >= eq.STR_CACHE_MAX) {
      eq.stringCodeCache = {};
      eq.stringCodeCacheSize = 1;
    }
    eq.stringCodeCache[str] = code;
    return code;
  };
  eq.hashMapLike = function(m) {
    var code = 0;
    if (m.forEach != null) {
      m.forEach(function(val, key, m) {
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      });
    } else {
      var keys = util.objectKeys(m);
      for (var i = 0;i < keys.length;i++) {
        var key = keys[i];
        var val = m[key];
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      }
    }
    return code;
  };
  eq.hashArrayLike = function(arr) {
    var code = 0;
    if (util.isArray(arr)) {
      for (var i = 0;i < arr.length;i++) {
        code = eq.hashCombine(code, eq.hashCode(arr[i]));
      }
    } else {
      if (arr.forEach) {
        arr.forEach(function(x, i) {
          code = eq.hashCombine(code, eq.hashCode(x));
        });
      }
    }
    return code;
  };
  eq.hashCode = function(x) {
    if (x == null) {
      return 0;
    } else {
      switch(typeof x) {
        case "number":
          return x;
          break;
        case "boolean":
          return x === true ? 1 : 0;
          break;
        case "string":
          return eq.hashString(x);
          break;
        case "function":
          var code = x[eq.hashCodeProperty];
          if (code) {
            return code;
          } else {
            code = eq.hashCodeCounter;
            if (typeof Object.defineProperty != "undefined") {
              Object.defineProperty(x, eq.hashCodeProperty, {value:code, enumerable:false});
            } else {
              x[eq.hashCodeProperty] = code;
            }
            eq.hashCodeCounter++;
            return code;
          }
          break;
        default:
          if (x instanceof Date) {
            return x.valueOf();
          } else {
            if (util.isArray(x)) {
              return eq.hashArrayLike(x);
            }
          }
          if (x.com$cognitect$transit$hashCode) {
            return x.com$cognitect$transit$hashCode();
          } else {
            return eq.hashMapLike(x);
          }
          break;
      }
    }
  };
  eq.extendToEQ = function(obj, opts) {
    obj.com$cognitect$transit$hashCode = opts["hashCode"];
    obj.com$cognitect$transit$equals = opts["equals"];
    return obj;
  };
});
goog.provide("goog.math.Long");
goog.math.Long = function(low, high) {
  this.low_ = low | 0;
  this.high_ = high | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.valueCache_ = {};
goog.math.Long.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = goog.math.Long.IntCache_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }
  var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    goog.math.Long.IntCache_[value] = obj;
  }
  return obj;
};
goog.math.Long.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Long.getZero();
  } else {
    if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.getMinValue();
    } else {
      if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.getMaxValue();
      } else {
        if (value < 0) {
          return goog.math.Long.fromNumber(-value).negate();
        } else {
          return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
        }
      }
    }
  }
};
goog.math.Long.fromBits = function(lowBits, highBits) {
  return new goog.math.Long(lowBits, highBits);
};
goog.math.Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Long.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Long.getZero();
  for (var i = 0;i < str.length;i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Long.fromNumber(value));
    }
  }
  return result;
};
goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
goog.math.Long.getTwoPwr24DBL_ = 1 << 24;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_31_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ / 2;
goog.math.Long.TWO_PWR_48_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.getZero = function() {
  var idZero = goog.math.Long.ValueCacheId_.ZERO;
  if (!goog.math.Long.valueCache_[idZero]) {
    goog.math.Long.valueCache_[idZero] = goog.math.Long.fromInt(0);
  }
  return goog.math.Long.valueCache_[idZero];
};
goog.math.Long.getOne = function() {
  var idOne = goog.math.Long.ValueCacheId_.ONE;
  if (!goog.math.Long.valueCache_[idOne]) {
    goog.math.Long.valueCache_[idOne] = goog.math.Long.fromInt(1);
  }
  return goog.math.Long.valueCache_[idOne];
};
goog.math.Long.getNegOne = function() {
  var idNegOne = goog.math.Long.ValueCacheId_.NEG_ONE;
  if (!goog.math.Long.valueCache_[idNegOne]) {
    goog.math.Long.valueCache_[idNegOne] = goog.math.Long.fromInt(-1);
  }
  return goog.math.Long.valueCache_[idNegOne];
};
goog.math.Long.getMaxValue = function() {
  var idMaxValue = goog.math.Long.ValueCacheId_.MAX_VALUE;
  if (!goog.math.Long.valueCache_[idMaxValue]) {
    goog.math.Long.valueCache_[idMaxValue] = goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
  }
  return goog.math.Long.valueCache_[idMaxValue];
};
goog.math.Long.getMinValue = function() {
  var idMinValue = goog.math.Long.ValueCacheId_.MIN_VALUE;
  if (!goog.math.Long.valueCache_[idMinValue]) {
    goog.math.Long.valueCache_[idMinValue] = goog.math.Long.fromBits(0, 2147483648 | 0);
  }
  return goog.math.Long.valueCache_[idMinValue];
};
goog.math.Long.getTwoPwr24 = function() {
  var idTwoPwr24 = goog.math.Long.ValueCacheId_.TWO_PWR_24;
  if (!goog.math.Long.valueCache_[idTwoPwr24]) {
    goog.math.Long.valueCache_[idTwoPwr24] = goog.math.Long.fromInt(1 << 24);
  }
  return goog.math.Long.valueCache_[idTwoPwr24];
};
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      var radixLong = goog.math.Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31;bit > 0;bit--) {
      if ((val & 1 << bit) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};
goog.math.Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};
goog.math.Long.prototype.isNegative = function() {
  return this.high_ < 0;
};
goog.math.Long.prototype.isOdd = function() {
  return (this.low_ & 1) == 1;
};
goog.math.Long.prototype.equals = function(other) {
  return this.high_ == other.high_ && this.low_ == other.low_;
};
goog.math.Long.prototype.notEquals = function(other) {
  return this.high_ != other.high_ || this.low_ != other.low_;
};
goog.math.Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }
  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return -1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }
  if (this.subtract(other).isNegative()) {
    return -1;
  } else {
    return 1;
  }
};
goog.math.Long.prototype.negate = function() {
  if (this.equals(goog.math.Long.getMinValue())) {
    return goog.math.Long.getMinValue();
  } else {
    return this.not().add(goog.math.Long.getOne());
  }
};
goog.math.Long.prototype.add = function(other) {
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 + b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Long.getZero();
  } else {
    if (other.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    return other.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return this.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Long.getTwoPwr24()) && other.lessThan(goog.math.Long.getTwoPwr24())) {
    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
  }
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    if (other.equals(goog.math.Long.getOne()) || other.equals(goog.math.Long.getNegOne())) {
      return goog.math.Long.getMinValue();
    } else {
      if (other.equals(goog.math.Long.getMinValue())) {
        return goog.math.Long.getOne();
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.getZero())) {
          return other.isNegative() ? goog.math.Long.getOne() : goog.math.Long.getNegOne();
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    }
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
  }
  var res = goog.math.Long.getZero();
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Long.getOne();
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(other) {
  return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};
goog.math.Long.prototype.or = function(other) {
  return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};
goog.math.Long.prototype.xor = function(other) {
  return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};
goog.math.Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
    } else {
      return goog.math.Long.fromBits(0, low << numBits - 32);
    }
  }
};
goog.math.Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
    } else {
      return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
    }
  }
};
goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
    } else {
      if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  }
};
goog.math.Long.ValueCacheId_ = {MAX_VALUE:1, MIN_VALUE:2, ZERO:3, ONE:4, NEG_ONE:5, TWO_PWR_24:6};
goog.provide("com.cognitect.transit.types");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
goog.scope(function() {
  var types = com.cognitect.transit.types, util = com.cognitect.transit.util, eq = com.cognitect.transit.eq, Long = goog.math.Long;
  if (typeof Symbol != "undefined") {
    types.ITERATOR = Symbol.iterator;
  } else {
    types.ITERATOR = "@@iterator";
  }
  types.TaggedValue = function Transit$TaggedValue(tag, rep) {
    this.tag = tag;
    this.rep = rep;
    this.hashCode = -1;
  };
  types.TaggedValue.prototype.toString = function() {
    return "[TaggedValue: " + this.tag + ", " + this.rep + "]";
  };
  types.TaggedValue.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.TaggedValue.prototype["equiv"] = types.TaggedValue.prototype.equiv;
  types.TaggedValue.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TaggedValue) {
      return this.tag === other.tag && eq.equals(this.rep, other.rep);
    } else {
      return false;
    }
  };
  types.TaggedValue.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCombine(eq.hashCode(this.tag), eq.hashCode(this.rep));
    }
    return this.hashCode;
  };
  types.taggedValue = function(tag, rep) {
    return new types.TaggedValue(tag, rep);
  };
  types.isTaggedValue = function(x) {
    return x instanceof types.TaggedValue;
  };
  types.nullValue = function() {
    return null;
  };
  types.boolValue = function(s) {
    return s === "t";
  };
  types.MAX_INT = Long.fromString("9007199254740991");
  types.MIN_INT = Long.fromString("-9007199254740991");
  types.intValue = function(s) {
    if (typeof s === "number") {
      return s;
    } else {
      if (s instanceof Long) {
        return s;
      } else {
        var n = Long.fromString(s, 10);
        if (n.greaterThan(types.MAX_INT) || n.lessThan(types.MIN_INT)) {
          return n;
        } else {
          return n.toNumber();
        }
      }
    }
  };
  Long.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  Long.prototype["equiv"] = Long.prototype.equiv;
  Long.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof Long && this.equals(other);
  };
  Long.prototype.com$cognitect$transit$hashCode = function() {
    return this.toInt();
  };
  types.isInteger = function(x) {
    if (x instanceof Long) {
      return true;
    } else {
      return typeof x === "number" && !isNaN(x) && !(x === Infinity) && parseFloat(x) === parseInt(x, 10);
    }
  };
  types.floatValue = function(s) {
    return parseFloat(s);
  };
  types.bigInteger = function(s) {
    return types.taggedValue("n", s);
  };
  types.isBigInteger = function(x) {
    return x instanceof types.TaggedValue && x.tag === "n";
  };
  types.bigDecimalValue = function(s) {
    return types.taggedValue("f", s);
  };
  types.isBigDecimal = function(x) {
    return x instanceof types.TaggedValue && x.tag === "f";
  };
  types.charValue = function(s) {
    return s;
  };
  types.Keyword = function Transit$Keyword(name) {
    this._name = name;
    this.hashCode = -1;
  };
  types.Keyword.prototype.toString = function() {
    return ":" + this._name;
  };
  types.Keyword.prototype["namespace"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(0, idx);
    } else {
      return null;
    }
  };
  types.Keyword.prototype["name"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(idx + 1, this._name.length);
    } else {
      return this._name;
    }
  };
  types.Keyword.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Keyword.prototype["equiv"] = types.Keyword.prototype.equiv;
  types.Keyword.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Keyword && this._name == other._name;
  };
  types.Keyword.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this._name);
    }
    return this.hashCode;
  };
  types.keyword = function(s) {
    return new types.Keyword(s);
  };
  types.isKeyword = function(x) {
    return x instanceof types.Keyword;
  };
  types.Symbol = function Transit$Symbol(name) {
    this._name = name;
    this.hashCode = -1;
  };
  types.Symbol.prototype["namespace"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(0, idx);
    } else {
      return null;
    }
  };
  types.Symbol.prototype["name"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(idx + 1, this._name.length);
    } else {
      return this._name;
    }
  };
  types.Symbol.prototype.toString = function() {
    return this._name;
  };
  types.Symbol.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Symbol.prototype["equiv"] = types.Symbol.prototype.equiv;
  types.Symbol.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Symbol && this._name == other._name;
  };
  types.Symbol.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this._name);
    }
    return this.hashCode;
  };
  types.symbol = function(s) {
    return new types.Symbol(s);
  };
  types.isSymbol = function(x) {
    return x instanceof types.Symbol;
  };
  types.hexFor = function(aLong, sidx, eidx) {
    var ret = "", eidx = eidx || sidx + 1;
    for (var i = sidx, shift = (7 - i) * 8, mask = Long.fromInt(255).shiftLeft(shift);i < eidx;i++, shift -= 8, mask = mask.shiftRightUnsigned(8)) {
      var s = aLong.and(mask).shiftRightUnsigned(shift).toString(16);
      if (s.length == 1) {
        s = "0" + s;
      }
      ret += s;
    }
    return ret;
  };
  types.UUID = function Transit$UUID(high, low) {
    this.high = high;
    this.low = low;
    this.hashCode = -1;
  };
  types.UUID.prototype.getLeastSignificantBits = function() {
    return this.low;
  };
  types.UUID.prototype.getMostSignificantBits = function() {
    return this.high;
  };
  types.UUID.prototype.toString = function() {
    var s = "", hi64 = this.high, lo64 = this.low;
    s += types.hexFor(hi64, 0, 4) + "-";
    s += types.hexFor(hi64, 4, 6) + "-";
    s += types.hexFor(hi64, 6, 8) + "-";
    s += types.hexFor(lo64, 0, 2) + "-";
    s += types.hexFor(lo64, 2, 8);
    return s;
  };
  types.UUID.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.UUID.prototype["equiv"] = types.UUID.prototype.equiv;
  types.UUID.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.UUID && this.high.equals(other.high) && this.low.equals(other.low);
  };
  types.UUID.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.toString());
    }
    return this.hashCode;
  };
  types.UUIDfromString = function uuidFromString(s) {
    var s = s.replace(/-/g, ""), hi64 = null, lo64 = null, hi32 = 0, lo32 = 0, off = 24, i = 0;
    for (hi32 = 0, i = 0, off = 24;i < 8;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 8, off = 24;i < 16;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    hi64 = Long.fromBits(lo32, hi32);
    for (hi32 = 0, i = 16, off = 24;i < 24;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 24, off = 24;i < 32;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    lo64 = Long.fromBits(lo32, hi32);
    return new types.UUID(hi64, lo64);
  };
  types.uuid = function(s) {
    return types.UUIDfromString(s);
  };
  types.isUUID = function(x) {
    return x instanceof types.UUID;
  };
  types.date = function(s) {
    s = typeof s === "number" ? s : parseInt(s, 10);
    return new Date(s);
  };
  types.verboseDate = function(s) {
    return new Date(s);
  };
  Date.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof Date) {
      return this.valueOf() === other.valueOf();
    } else {
      return false;
    }
  };
  Date.prototype.com$cognitect$transit$hashCode = function() {
    return this.valueOf();
  };
  types.binary = function(str, decoder) {
    if ((!decoder || decoder.preferBuffers !== false) && typeof Buffer != "undefined") {
      return new Buffer(str, "base64");
    } else {
      if (typeof Uint8Array != "undefined") {
        return util.Base64ToUint8(str);
      } else {
        return types.taggedValue("b", str);
      }
    }
  };
  types.isBinary = function(x) {
    if (typeof Buffer != "undefined" && x instanceof Buffer) {
      return true;
    } else {
      if (typeof Uint8Array != "undefined" && x instanceof Uint8Array) {
        return true;
      } else {
        return x instanceof types.TaggedValue && x.tag === "b";
      }
    }
  };
  types.uri = function(s) {
    return types.taggedValue("r", s);
  };
  types.isURI = function(x) {
    return x instanceof types.TaggedValue && x.tag === "r";
  };
  types.KEYS = 0;
  types.VALUES = 1;
  types.ENTRIES = 2;
  types.TransitArrayMapIterator = function Transit$ArrayMapIterator(entries, type) {
    this.entries = entries;
    this.type = type || types.KEYS;
    this.idx = 0;
  };
  types.TransitArrayMapIterator.prototype.next = function() {
    if (this.idx < this.entries.length) {
      var value = null;
      if (this.type === types.KEYS) {
        value = this.entries[this.idx];
      } else {
        if (this.type === types.VALUES) {
          value = this.entries[this.idx + 1];
        } else {
          value = [this.entries[this.idx], this.entries[this.idx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitArrayMapIterator.prototype["next"] = types.TransitArrayMapIterator.prototype.next;
  types.TransitArrayMapIterator.prototype[types.ITERATOR] = function() {
    return this;
  };
  types.TransitMapIterator = function Transit$MapIterator(map, type) {
    this.map = map;
    this.type = type || types.KEYS;
    this.keys = this.map.getKeys();
    this.idx = 0;
    this.bucket = null;
    this.bucketIdx = 0;
  };
  types.TransitMapIterator.prototype.next = function() {
    if (this.idx < this.map.size) {
      if (this.bucket == null || !(this.bucketIdx < this.bucket.length)) {
        this.bucket = this.map.map[this.keys[this.idx]];
        this.bucketIdx = 0;
      }
      var value = null;
      if (this.type === types.KEYS) {
        value = this.bucket[this.bucketIdx];
      } else {
        if (this.type === types.VALUES) {
          value = this.bucket[this.bucketIdx + 1];
        } else {
          value = [this.bucket[this.bucketIdx], this.bucket[this.bucketIdx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx++;
      this.bucketIdx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitMapIterator.prototype["next"] = types.TransitMapIterator.prototype.next;
  types.TransitMapIterator.prototype[types.ITERATOR] = function() {
    return this;
  };
  types.mapEquals = function(me, you) {
    if (me instanceof types.TransitMap && types.isMap(you)) {
      if (me.size !== you.size) {
        return false;
      }
      for (var code in me.map) {
        var bucket = me.map[code];
        for (var j = 0;j < bucket.length;j += 2) {
          if (!eq.equals(bucket[j + 1], you.get(bucket[j]))) {
            return false;
          }
        }
      }
      return true;
    } else {
      if (me instanceof types.TransitArrayMap && types.isMap(you)) {
        if (me.size !== you.size) {
          return false;
        }
        var entries = me._entries;
        for (var j = 0;j < entries.length;j += 2) {
          if (!eq.equals(entries[j + 1], you.get(entries[j]))) {
            return false;
          }
        }
        return true;
      } else {
        if (you != null && typeof you === "object") {
          var ks = util.objectKeys(you), kslen = ks.length;
          if (me.size === kslen) {
            for (var i = 0;i < kslen;i++) {
              var k = ks[i];
              if (!me.has(k) || !eq.equals(you[k], me.get(k))) {
                return false;
              }
            }
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }
    }
  };
  types.SMALL_ARRAY_MAP_THRESHOLD = 8;
  types.ARRAY_MAP_THRESHOLD = 32;
  types.ARRAY_MAP_ACCESS_THRESHOLD = 32;
  types.print = function(x) {
    if (x == null) {
      return "null";
    }
    if (goog.isArray(x)) {
      return "[" + x.toString() + "]";
    } else {
      if (goog.isString(x)) {
        return '"' + x + '"';
      } else {
        return x.toString();
      }
    }
  };
  types.printMap = function(map) {
    var idx = 0, str = "TransitMap {";
    map.forEach(function(v, k) {
      str += types.print(k) + " \x3d\x3e " + types.print(v);
      if (idx < map.size - 1) {
        str += ", ";
      }
      idx++;
    });
    return str + "}";
  };
  types.printSet = function(set) {
    var idx = 0, str = "TransitSet {";
    set.forEach(function(v) {
      str += types.print(v);
      if (idx < set.size - 1) {
        str += ", ";
      }
      idx++;
    });
    return str + "}";
  };
  types.TransitArrayMap = function Transit$ArrayMap(entries) {
    this._entries = entries;
    this.backingMap = null;
    this.hashCode = -1;
    this.size = entries.length / 2;
    this.accesses = 0;
  };
  types.TransitArrayMap.prototype.toString = function() {
    return types.printMap(this);
  };
  types.TransitArrayMap.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitArrayMap.prototype.convert = function() {
    if (this.backingMap) {
      throw Error("Invalid operation, already converted");
    }
    if (this.size < types.SMALL_ARRAY_MAP_THRESHOLD) {
      return false;
    }
    this.accesses++;
    if (this.accesses > types.ARRAY_MAP_ACCESS_THRESHOLD) {
      this.backingMap = types.map(this._entries, false, true);
      this._entries = [];
      return true;
    } else {
      return false;
    }
  };
  types.TransitArrayMap.prototype.clear = function() {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.clear();
      this.size = 0;
    } else {
      this._entries = [];
      this.size = 0;
    }
  };
  types.TransitArrayMap.prototype["clear"] = types.TransitArrayMap.prototype.clear;
  types.TransitArrayMap.prototype.keys = function() {
    if (this.backingMap) {
      return this.backingMap.keys();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.KEYS);
    }
  };
  types.TransitArrayMap.prototype["keys"] = types.TransitArrayMap.prototype.keys;
  types.TransitArrayMap.prototype.keySet = function() {
    if (this.backingMap) {
      return this.backingMap.keySet();
    } else {
      var ret = [];
      for (var i = 0, j = 0;j < this._entries.length;i++, j += 2) {
        ret[i] = this._entries[j];
      }
      return ret;
    }
  };
  types.TransitArrayMap.prototype["keySet"] = types.TransitArrayMap.prototype.keySet;
  types.TransitArrayMap.prototype.entries = function() {
    if (this.backingMap) {
      return this.backingMap.entries();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.ENTRIES);
    }
  };
  types.TransitArrayMap.prototype["entries"] = types.TransitArrayMap.prototype.entries;
  types.TransitArrayMap.prototype.values = function() {
    if (this.backingMap) {
      return this.backingMap.values();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.VALUES);
    }
  };
  types.TransitArrayMap.prototype["values"] = types.TransitArrayMap.prototype.values;
  types.TransitArrayMap.prototype.forEach = function(f) {
    if (this.backingMap) {
      this.backingMap.forEach(f);
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        f(this._entries[i + 1], this._entries[i]);
      }
    }
  };
  types.TransitArrayMap.prototype["forEach"] = types.TransitArrayMap.prototype.forEach;
  types.TransitArrayMap.prototype.get = function(k, notFound) {
    if (this.backingMap) {
      return this.backingMap.get(k);
    } else {
      if (this.convert()) {
        return this.get(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return this._entries[i + 1];
          }
        }
        return notFound;
      }
    }
  };
  types.TransitArrayMap.prototype["get"] = types.TransitArrayMap.prototype.get;
  types.TransitArrayMap.prototype.has = function(k) {
    if (this.backingMap) {
      return this.backingMap.has(k);
    } else {
      if (this.convert()) {
        return this.has(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return true;
          }
        }
        return false;
      }
    }
  };
  types.TransitArrayMap.prototype["has"] = types.TransitArrayMap.prototype.has;
  types.TransitArrayMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.set(k, v);
      this.size = this.backingMap.size;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          this._entries[i + 1] = v;
          return;
        }
      }
      this._entries.push(k);
      this._entries.push(v);
      this.size++;
      if (this.size > types.ARRAY_MAP_THRESHOLD) {
        this.backingMap = types.map(this._entries, false, true);
        this._entries = null;
      }
    }
  };
  types.TransitArrayMap.prototype["set"] = types.TransitArrayMap.prototype.set;
  types.TransitArrayMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    if (this.backingMap) {
      var ret = this.backingMap["delete"](k);
      this.size = this.backingMap.size;
      return ret;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          var ret = this._entries[i + 1];
          this._entries.splice(i, 2);
          this.size--;
          return ret;
        }
      }
    }
  };
  types.TransitArrayMap.prototype.clone = function() {
    var clone = types.map();
    this.forEach(function(v, k) {
      clone.set(k, v);
    });
    return clone;
  };
  types.TransitArrayMap.prototype["clone"] = types.TransitArrayMap.prototype.clone;
  types.TransitArrayMap.prototype[types.ITERATOR] = function() {
    return this.entries();
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.backingMap) {
      return this.backingMap.com$cognitect$transit$hashCode();
    } else {
      if (this.hashCode === -1) {
        this.hashCode = eq.hashMapLike(this);
      }
      return this.hashCode;
    }
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$equals = function(other) {
    if (this.backingMap) {
      return types.mapEquals(this.backingMap, other);
    } else {
      return types.mapEquals(this, other);
    }
  };
  types.TransitMap = function Transit$Map(keys, map, size) {
    this.map = map || {};
    this._keys = keys || [];
    this.size = size || 0;
    this.hashCode = -1;
  };
  types.TransitMap.prototype.toString = function() {
    return types.printMap(this);
  };
  types.TransitMap.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitMap.prototype.clear = function() {
    this.hashCode = -1;
    this.map = {};
    this._keys = [];
    this.size = 0;
  };
  types.TransitMap.prototype["clear"] = types.TransitMap.prototype.clear;
  types.TransitMap.prototype.getKeys = function() {
    if (this._keys != null) {
      return this._keys;
    } else {
      return util.objectKeys(this.map);
    }
  };
  types.TransitMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    this._keys = null;
    var code = eq.hashCode(k), bucket = this.map[code];
    for (var i = 0;i < bucket.length;i += 2) {
      if (eq.equals(k, bucket[i])) {
        var ret = bucket[i + 1];
        bucket.splice(i, 2);
        if (bucket.length === 0) {
          delete this.map[code];
        }
        this.size--;
        return ret;
      }
    }
  };
  types.TransitMap.prototype.entries = function() {
    return new types.TransitMapIterator(this, types.ENTRIES);
  };
  types.TransitMap.prototype["entries"] = types.TransitMap.prototype.entries;
  types.TransitMap.prototype.forEach = function(callback) {
    var ks = this.getKeys();
    for (var i = 0;i < ks.length;i++) {
      var bucket = this.map[ks[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        callback(bucket[j + 1], bucket[j], this);
      }
    }
  };
  types.TransitMap.prototype["forEach"] = types.TransitMap.prototype.forEach;
  types.TransitMap.prototype.get = function(k, notFound) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return bucket[i + 1];
        }
      }
    } else {
      return notFound;
    }
  };
  types.TransitMap.prototype["get"] = types.TransitMap.prototype.get;
  types.TransitMap.prototype.has = function(k) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return true;
        }
      }
      return false;
    } else {
      return false;
    }
  };
  types.TransitMap.prototype["has"] = types.TransitMap.prototype.has;
  types.TransitMap.prototype.keys = function() {
    return new types.TransitMapIterator(this, types.KEYS);
  };
  types.TransitMap.prototype["keys"] = types.TransitMap.prototype.keys;
  types.TransitMap.prototype.keySet = function() {
    var keys = this.getKeys(), ret = [];
    for (var i = 0;i < keys.length;i++) {
      var bucket = this.map[keys[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        ret.push(bucket[j]);
      }
    }
    return ret;
  };
  types.TransitMap.prototype["keySet"] = types.TransitMap.prototype.keySet;
  types.TransitMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket == null) {
      if (this._keys) {
        this._keys.push(code);
      }
      this.map[code] = [k, v];
      this.size++;
    } else {
      var newEntry = true;
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(v, bucket[i])) {
          newEntry = false;
          bucket[i] = v;
          break;
        }
      }
      if (newEntry) {
        bucket.push(k);
        bucket.push(v);
        this.size++;
      }
    }
  };
  types.TransitMap.prototype["set"] = types.TransitMap.prototype.set;
  types.TransitMap.prototype.values = function() {
    return new types.TransitMapIterator(this, types.VALUES);
  };
  types.TransitMap.prototype["values"] = types.TransitMap.prototype.values;
  types.TransitMap.prototype.clone = function() {
    var clone = types.map();
    this.forEach(function(v, k) {
      clone.set(k, v);
    });
    return clone;
  };
  types.TransitMap.prototype["clone"] = types.TransitMap.prototype.clone;
  types.TransitMap.prototype[types.ITERATOR] = function() {
    return this.entries();
  };
  types.TransitMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashMapLike(this);
    }
    return this.hashCode;
  };
  types.TransitMap.prototype.com$cognitect$transit$equals = function(other) {
    return types.mapEquals(this, other);
  };
  types.map = function(arr, checkDups, hashMap) {
    arr = arr || [];
    checkDups = checkDups === false ? checkDups : true;
    hashMap = hashMap === true ? hashMap : false;
    if (!hashMap && arr.length <= types.ARRAY_MAP_THRESHOLD * 2) {
      if (checkDups) {
        var t = arr;
        arr = [];
        for (var i = 0;i < t.length;i += 2) {
          var seen = false;
          for (var j = 0;j < arr.length;j += 2) {
            if (eq.equals(arr[j], t[i])) {
              arr[j + 1] = t[i + 1];
              seen = true;
              break;
            }
          }
          if (!seen) {
            arr.push(t[i]);
            arr.push(t[i + 1]);
          }
        }
      }
      return new types.TransitArrayMap(arr);
    } else {
      var map = {}, keys = [], size = 0;
      for (var i = 0;i < arr.length;i += 2) {
        var code = eq.hashCode(arr[i]), bucket = map[code];
        if (bucket == null) {
          keys.push(code);
          map[code] = [arr[i], arr[i + 1]];
          size++;
        } else {
          var newEntry = true;
          for (var j = 0;j < bucket.length;j += 2) {
            if (eq.equals(bucket[j], arr[i])) {
              bucket[j + 1] = arr[i + 1];
              newEntry = false;
              break;
            }
          }
          if (newEntry) {
            bucket.push(arr[i]);
            bucket.push(arr[i + 1]);
            size++;
          }
        }
      }
      return new types.TransitMap(keys, map, size);
    }
  };
  types.isArrayMap = function(x) {
    return x instanceof types.TransitArrayMap;
  };
  types.isMap = function(x) {
    return x instanceof types.TransitArrayMap || x instanceof types.TransitMap;
  };
  types.TransitSet = function Transit$Set(map) {
    this.map = map;
    this.size = map.size;
  };
  types.TransitSet.prototype.toString = function() {
    return types.printSet(this);
  };
  types.TransitSet.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitSet.prototype.add = function(value) {
    this.map.set(value, value);
    this.size = this.map.size;
  };
  types.TransitSet.prototype["add"] = types.TransitSet.prototype.add;
  types.TransitSet.prototype.clear = function() {
    this.map = new types.TransitMap;
    this.size = 0;
  };
  types.TransitSet.prototype["clear"] = types.TransitSet.prototype.clear;
  types.TransitSet.prototype["delete"] = function(value) {
    var ret = this.map["delete"](value);
    this.size = this.map.size;
    return ret;
  };
  types.TransitSet.prototype.entries = function() {
    return this.map.entries();
  };
  types.TransitSet.prototype["entries"] = types.TransitSet.prototype.entries;
  types.TransitSet.prototype.forEach = function(iterator, thisArg) {
    var self = this;
    this.map.forEach(function(v, k, m) {
      iterator(k, self);
    });
  };
  types.TransitSet.prototype["forEach"] = types.TransitSet.prototype.forEach;
  types.TransitSet.prototype.has = function(value) {
    return this.map.has(value);
  };
  types.TransitSet.prototype["has"] = types.TransitSet.prototype.has;
  types.TransitSet.prototype.keys = function() {
    return this.map.keys();
  };
  types.TransitSet.prototype["keys"] = types.TransitSet.prototype.keys;
  types.TransitSet.prototype.keySet = function() {
    return this.map.keySet();
  };
  types.TransitSet.prototype["keySet"] = types.TransitSet.prototype.keySet;
  types.TransitSet.prototype.values = function() {
    return this.map.values();
  };
  types.TransitSet.prototype["values"] = types.TransitSet.prototype.values;
  types.TransitSet.prototype.clone = function() {
    var clone = types.set();
    this.forEach(function(k) {
      clone.add(k);
    });
    return clone;
  };
  types.TransitSet.prototype["clone"] = types.TransitSet.prototype.clone;
  types.TransitSet.prototype[types.ITERATOR] = function() {
    return this.values();
  };
  types.TransitSet.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TransitSet) {
      if (this.size === other.size) {
        return eq.equals(this.map, other.map);
      }
    } else {
      return false;
    }
  };
  types.TransitSet.prototype.com$cognitect$transit$hashCode = function(other) {
    return eq.hashCode(this.map);
  };
  types.set = function(arr) {
    arr = arr || [];
    var map = {}, keys = [], size = 0;
    for (var i = 0;i < arr.length;i++) {
      var code = eq.hashCode(arr[i]), vals = map[code];
      if (vals == null) {
        keys.push(code);
        map[code] = [arr[i], arr[i]];
        size++;
      } else {
        var newEntry = true;
        for (var j = 0;j < vals.length;j += 2) {
          if (eq.equals(vals[j], arr[i])) {
            newEntry = false;
            break;
          }
        }
        if (newEntry) {
          vals.push(arr[i]);
          vals.push(arr[i]);
          size++;
        }
      }
    }
    return new types.TransitSet(new types.TransitMap(keys, map, size));
  };
  types.isSet = function(x) {
    return x instanceof types.TransitSet;
  };
  types.quoted = function(obj) {
    return types.taggedValue("'", obj);
  };
  types.isQuoted = function(x) {
    return x instanceof types.TaggedValue && x.tag === "'";
  };
  types.list = function(xs) {
    return types.taggedValue("list", xs);
  };
  types.isList = function(x) {
    return x instanceof types.TaggedValue && x.tag === "list";
  };
  types.link = function(rep) {
    return types.taggedValue("link", rep);
  };
  types.isLink = function(x) {
    return x instanceof types.TaggedValue && x.tag === "link";
  };
  types.specialDouble = function(v) {
    switch(v) {
      case "-INF":
        return -Infinity;
      case "INF":
        return Infinity;
      case "NaN":
        return NaN;
      default:
        throw new Error("Invalid special double value " + v);break;
    }
  };
});
goog.provide("com.cognitect.transit.delimiters");
goog.scope(function() {
  var delimiters = com.cognitect.transit.delimiters;
  delimiters.ESC = "~";
  delimiters.TAG = "#";
  delimiters.SUB = "^";
  delimiters.RES = "`";
  delimiters.ESC_TAG = "~#";
});
goog.provide("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.delimiters");
goog.scope(function() {
  var caching = com.cognitect.transit.caching, d = com.cognitect.transit.delimiters;
  caching.MIN_SIZE_CACHEABLE = 3;
  caching.BASE_CHAR_IDX = 48;
  caching.CACHE_CODE_DIGITS = 44;
  caching.MAX_CACHE_ENTRIES = caching.CACHE_CODE_DIGITS * caching.CACHE_CODE_DIGITS;
  caching.MAX_CACHE_SIZE = 4096;
  caching.isCacheable = function(string, asMapKey) {
    if (string.length > caching.MIN_SIZE_CACHEABLE) {
      if (asMapKey) {
        return true;
      } else {
        var c0 = string.charAt(0), c1 = string.charAt(1);
        if (c0 === d.ESC) {
          return c1 === ":" || c1 === "$" || c1 === "#";
        } else {
          return false;
        }
      }
    } else {
      return false;
    }
  };
  caching.idxToCode = function(idx) {
    var hi = Math.floor(idx / caching.CACHE_CODE_DIGITS), lo = idx % caching.CACHE_CODE_DIGITS, loc = String.fromCharCode(lo + caching.BASE_CHAR_IDX);
    if (hi === 0) {
      return d.SUB + loc;
    } else {
      return d.SUB + String.fromCharCode(hi + caching.BASE_CHAR_IDX) + loc;
    }
  };
  caching.WriteCache = function() {
    this.idx = 0;
    this.gen = 0;
    this.cacheSize = 0;
    this.cache = {};
  };
  caching.WriteCache.prototype.write = function(string, asMapKey) {
    if (caching.isCacheable(string, asMapKey)) {
      if (this.cacheSize === caching.MAX_CACHE_SIZE) {
        this.clear();
        this.gen = 0;
        this.cache = {};
      } else {
        if (this.idx === caching.MAX_CACHE_ENTRIES) {
          this.clear();
        }
      }
      var entry = this.cache[string];
      if (entry == null) {
        this.cache[string] = [caching.idxToCode(this.idx), this.gen];
        this.idx++;
        return string;
      } else {
        if (entry[1] != this.gen) {
          entry[1] = this.gen;
          entry[0] = caching.idxToCode(this.idx);
          this.idx++;
          return string;
        } else {
          return entry[0];
        }
      }
    } else {
      return string;
    }
  };
  caching.WriteCache.prototype.clear = function Transit$WriteCache() {
    this.idx = 0;
    this.gen++;
  };
  caching.writeCache = function() {
    return new caching.WriteCache;
  };
  caching.isCacheCode = function(string) {
    return string.charAt(0) === d.SUB && string.charAt(1) !== " ";
  };
  caching.codeToIdx = function(code) {
    if (code.length === 2) {
      return code.charCodeAt(1) - caching.BASE_CHAR_IDX;
    } else {
      var hi = (code.charCodeAt(1) - caching.BASE_CHAR_IDX) * caching.CACHE_CODE_DIGITS, lo = code.charCodeAt(2) - caching.BASE_CHAR_IDX;
      return hi + lo;
    }
  };
  caching.ReadCache = function Transit$ReadCache() {
    this.idx = 0;
    this.cache = [];
  };
  caching.ReadCache.prototype.write = function(obj, asMapKey) {
    if (this.idx == caching.MAX_CACHE_ENTRIES) {
      this.idx = 0;
    }
    this.cache[this.idx] = obj;
    this.idx++;
    return obj;
  };
  caching.ReadCache.prototype.read = function(string, asMapKey) {
    return this.cache[caching.codeToIdx(string)];
  };
  caching.ReadCache.prototype.clear = function() {
    this.idx = 0;
  };
  caching.readCache = function() {
    return new caching.ReadCache;
  };
});
goog.provide("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.delimiters");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.types");
goog.scope(function() {
  var decoder = com.cognitect.transit.impl.decoder, util = com.cognitect.transit.util, d = com.cognitect.transit.delimiters, caching = com.cognitect.transit.caching, types = com.cognitect.transit.types;
  decoder.Tag = function Transit$Tag(s) {
    this.str = s;
  };
  decoder.tag = function(s) {
    return new decoder.Tag(s);
  };
  decoder.isTag = function(x) {
    return x && x instanceof decoder.Tag;
  };
  decoder.isGroundHandler = function(handler) {
    switch(handler) {
      case "_":
      ;
      case "s":
      ;
      case "?":
      ;
      case "i":
      ;
      case "d":
      ;
      case "b":
      ;
      case "'":
      ;
      case "array":
      ;
      case "map":
        return true;
    }
    return false;
  };
  decoder.Decoder = function Transit$Decoder(options) {
    this.options = options || {};
    this.handlers = {};
    for (var h in this.defaults.handlers) {
      this.handlers[h] = this.defaults.handlers[h];
    }
    for (var h in this.options["handlers"]) {
      if (decoder.isGroundHandler(h)) {
        throw new Error('Cannot override handler for ground type "' + h + '"');
      }
      this.handlers[h] = this.options["handlers"][h];
    }
    this.preferStrings = this.options["preferStrings"] != null ? this.options["preferStrings"] : this.defaults.preferStrings;
    this.preferBuffers = this.options["preferBuffers"] != null ? this.options["preferBuffers"] : this.defaults.preferBuffers;
    this.defaultHandler = this.options["defaultHandler"] || this.defaults.defaultHandler;
    this.mapBuilder = this.options["mapBuilder"];
    this.arrayBuilder = this.options["arrayBuilder"];
  };
  decoder.Decoder.prototype.defaults = {handlers:{"_":function(v, d) {
    return types.nullValue();
  }, "?":function(v, d) {
    return types.boolValue(v);
  }, "b":function(v, d) {
    return types.binary(v, d);
  }, "i":function(v, d) {
    return types.intValue(v);
  }, "n":function(v, d) {
    return types.bigInteger(v);
  }, "d":function(v, d) {
    return types.floatValue(v);
  }, "f":function(v, d) {
    return types.bigDecimalValue(v);
  }, "c":function(v, d) {
    return types.charValue(v);
  }, ":":function(v, d) {
    return types.keyword(v);
  }, "$":function(v, d) {
    return types.symbol(v);
  }, "r":function(v, d) {
    return types.uri(v);
  }, "z":function(v, d) {
    return types.specialDouble(v);
  }, "'":function(v, d) {
    return v;
  }, "m":function(v, d) {
    return types.date(v);
  }, "t":function(v, d) {
    return types.verboseDate(v);
  }, "u":function(v, d) {
    return types.uuid(v);
  }, "set":function(v, d) {
    return types.set(v);
  }, "list":function(v, d) {
    return types.list(v);
  }, "link":function(v, d) {
    return types.link(v);
  }, "cmap":function(v, d) {
    return types.map(v, false);
  }}, defaultHandler:function(c, val) {
    return types.taggedValue(c, val);
  }, preferStrings:true, preferBuffers:true};
  decoder.Decoder.prototype.decode = function(node, cache, asMapKey, tagValue) {
    if (node == null) {
      return null;
    }
    var t = typeof node;
    switch(t) {
      case "string":
        return this.decodeString(node, cache, asMapKey, tagValue);
        break;
      case "object":
        if (util.isArray(node)) {
          if (node[0] === "^ ") {
            return this.decodeArrayHash(node, cache, asMapKey, tagValue);
          } else {
            return this.decodeArray(node, cache, asMapKey, tagValue);
          }
        } else {
          return this.decodeHash(node, cache, asMapKey, tagValue);
        }
        break;
    }
    return node;
  };
  decoder.Decoder.prototype["decode"] = decoder.Decoder.prototype.decode;
  decoder.Decoder.prototype.decodeString = function(string, cache, asMapKey, tagValue) {
    if (caching.isCacheable(string, asMapKey)) {
      var val = this.parseString(string, cache, false);
      if (cache) {
        cache.write(val, asMapKey);
      }
      return val;
    } else {
      if (caching.isCacheCode(string)) {
        return cache.read(string, asMapKey);
      } else {
        return this.parseString(string, cache, asMapKey);
      }
    }
  };
  decoder.Decoder.prototype.decodeHash = function(hash, cache, asMapKey, tagValue) {
    var ks = util.objectKeys(hash), key = ks[0], tag = ks.length == 1 ? this.decode(key, cache, false, false) : null;
    if (decoder.isTag(tag)) {
      var val = hash[key], handler = this.handlers[tag.str];
      if (handler != null) {
        return handler(this.decode(val, cache, false, true), this);
      } else {
        return types.taggedValue(tag.str, this.decode(val, cache, false, false));
      }
    } else {
      if (this.mapBuilder) {
        if (ks.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 && this.mapBuilder.fromArray) {
          var nodep = [];
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            nodep.push(this.decode(strKey, cache, true, false));
            nodep.push(this.decode(hash[strKey], cache, false, false));
          }
          return this.mapBuilder.fromArray(nodep, hash);
        } else {
          var ret = this.mapBuilder.init(hash);
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            ret = this.mapBuilder.add(ret, this.decode(strKey, cache, true, false), this.decode(hash[strKey], cache, false, false), hash);
          }
          return this.mapBuilder.finalize(ret, hash);
        }
      } else {
        var nodep = [];
        for (var i = 0;i < ks.length;i++) {
          var strKey = ks[i];
          nodep.push(this.decode(strKey, cache, true, false));
          nodep.push(this.decode(hash[strKey], cache, false, false));
        }
        return types.map(nodep, false);
      }
    }
  };
  decoder.Decoder.prototype.decodeArrayHash = function(node, cache, asMapKey, tagValue) {
    if (this.mapBuilder) {
      if (node.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 + 1 && this.mapBuilder.fromArray) {
        var nodep = [];
        for (var i = 1;i < node.length;i += 2) {
          nodep.push(this.decode(node[i], cache, true, false));
          nodep.push(this.decode(node[i + 1], cache, false, false));
        }
        return this.mapBuilder.fromArray(nodep, node);
      } else {
        var ret = this.mapBuilder.init(node);
        for (var i = 1;i < node.length;i += 2) {
          ret = this.mapBuilder.add(ret, this.decode(node[i], cache, true, false), this.decode(node[i + 1], cache, false, false), node);
        }
        return this.mapBuilder.finalize(ret, node);
      }
    } else {
      var nodep = [];
      for (var i = 1;i < node.length;i += 2) {
        nodep.push(this.decode(node[i], cache, true, false));
        nodep.push(this.decode(node[i + 1], cache, false, false));
      }
      return types.map(nodep, false);
    }
  };
  decoder.Decoder.prototype.decodeArray = function(node, cache, asMapKey, tagValue) {
    if (tagValue) {
      var ret = [];
      for (var i = 0;i < node.length;i++) {
        ret.push(this.decode(node[i], cache, asMapKey, false));
      }
      return ret;
    } else {
      var cacheIdx = cache && cache.idx;
      if (node.length === 2 && typeof node[0] === "string") {
        var tag = this.decode(node[0], cache, false, false);
        if (decoder.isTag(tag)) {
          var val = node[1], handler = this.handlers[tag.str];
          if (handler != null) {
            var ret = handler(this.decode(val, cache, asMapKey, true), this);
            return ret;
          } else {
            return types.taggedValue(tag.str, this.decode(val, cache, asMapKey, false));
          }
        }
      }
      if (cache && cacheIdx != cache.idx) {
        cache.idx = cacheIdx;
      }
      if (this.arrayBuilder) {
        if (node.length <= 32 && this.arrayBuilder.fromArray) {
          var arr = [];
          for (var i = 0;i < node.length;i++) {
            arr.push(this.decode(node[i], cache, asMapKey, false));
          }
          return this.arrayBuilder.fromArray(arr, node);
        } else {
          var ret = this.arrayBuilder.init(node);
          for (var i = 0;i < node.length;i++) {
            ret = this.arrayBuilder.add(ret, this.decode(node[i], cache, asMapKey, false), node);
          }
          return this.arrayBuilder.finalize(ret, node);
        }
      } else {
        var ret = [];
        for (var i = 0;i < node.length;i++) {
          ret.push(this.decode(node[i], cache, asMapKey, false));
        }
        return ret;
      }
    }
  };
  decoder.Decoder.prototype.parseString = function(string, cache, asMapKey) {
    if (string.charAt(0) === d.ESC) {
      var c = string.charAt(1);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return string.substring(1);
      } else {
        if (c === d.TAG) {
          return decoder.tag(string.substring(2));
        } else {
          var handler = this.handlers[c];
          if (handler == null) {
            return this.defaultHandler(c, string.substring(2));
          } else {
            return handler(string.substring(2), this);
          }
        }
      }
    } else {
      return string;
    }
  };
  decoder.decoder = function(options) {
    return new decoder.Decoder(options);
  };
});
goog.provide("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
goog.scope(function() {
  var reader = com.cognitect.transit.impl.reader, decoder = com.cognitect.transit.impl.decoder, caching = com.cognitect.transit.caching;
  reader.JSONUnmarshaller = function Transit$JSONUnmarshaller(opts) {
    this.decoder = new decoder.Decoder(opts);
  };
  reader.JSONUnmarshaller.prototype.unmarshal = function(str, cache) {
    return this.decoder.decode(JSON.parse(str), cache);
  };
  reader.Reader = function Transit$Reader(unmarshaller, options) {
    this.unmarshaller = unmarshaller;
    this.options = options || {};
    this.cache = this.options["cache"] ? this.options["cache"] : new caching.ReadCache;
  };
  reader.Reader.prototype.read = function(str) {
    var ret = this.unmarshaller.unmarshal(str, this.cache);
    this.cache.clear();
    return ret;
  };
  reader.Reader.prototype["read"] = reader.Reader.prototype.read;
});
goog.provide("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.types");
goog.require("goog.math.Long");
goog.scope(function() {
  var handlers = com.cognitect.transit.handlers, util = com.cognitect.transit.util, types = com.cognitect.transit.types, Long = goog.math.Long;
  handlers.ctorGuid = 0;
  handlers.ctorGuidProperty = "transit$guid$" + util.randomUUID();
  handlers.typeTag = function(ctor) {
    if (ctor == null) {
      return "null";
    } else {
      if (ctor === String) {
        return "string";
      } else {
        if (ctor === Boolean) {
          return "boolean";
        } else {
          if (ctor === Number) {
            return "number";
          } else {
            if (ctor === Array) {
              return "array";
            } else {
              if (ctor === Object) {
                return "map";
              } else {
                var tag = ctor[handlers.ctorGuidProperty];
                if (tag == null) {
                  if (typeof Object.defineProperty != "undefined") {
                    tag = ++handlers.ctorGuid;
                    Object.defineProperty(ctor, handlers.ctorGuidProperty, {value:tag, enumerable:false});
                  } else {
                    ctor[handlers.ctorGuidProperty] = tag = ++handlers.ctorGuid;
                  }
                }
                return tag;
              }
            }
          }
        }
      }
    }
  };
  handlers.constructor = function(x) {
    if (x == null) {
      return null;
    } else {
      return x.constructor;
    }
  };
  handlers.padZeros = function(n, m) {
    var s = n.toString();
    for (var i = s.length;i < m;i++) {
      s = "0" + s;
    }
    return s;
  };
  handlers.stringableKeys = function(m) {
    var stringable = false, ks = util.objectKeys(m);
    for (var i = 0;i < ks.length;i++) {
    }
    return true;
  };
  handlers.NilHandler = function Transit$NilHandler() {
  };
  handlers.NilHandler.prototype.tag = function(v) {
    return "_";
  };
  handlers.NilHandler.prototype.rep = function(v) {
    return null;
  };
  handlers.NilHandler.prototype.stringRep = function(v) {
    return "null";
  };
  handlers.StringHandler = function Transit$StringHandler() {
  };
  handlers.StringHandler.prototype.tag = function(v) {
    return "s";
  };
  handlers.StringHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.StringHandler.prototype.stringRep = function(v) {
    return v;
  };
  handlers.NumberHandler = function Transit$NumberHandler() {
  };
  handlers.NumberHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.NumberHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.NumberHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler = function Transit$IntegerHandler() {
  };
  handlers.IntegerHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.IntegerHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.BooleanHandler = function Transit$BooleanHandler() {
  };
  handlers.BooleanHandler.prototype.tag = function(v) {
    return "?";
  };
  handlers.BooleanHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.BooleanHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.ArrayHandler = function Transit$ArrayHandler() {
  };
  handlers.ArrayHandler.prototype.tag = function(v) {
    return "array";
  };
  handlers.ArrayHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.ArrayHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.MapHandler = function Transit$MapHandler() {
  };
  handlers.MapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.MapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.MapHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.VerboseDateHandler = function Transit$VerboseDateHandler() {
  };
  handlers.VerboseDateHandler.prototype.tag = function(v) {
    return "t";
  };
  handlers.VerboseDateHandler.prototype.rep = function(v) {
    return v.getUTCFullYear() + "-" + handlers.padZeros(v.getUTCMonth() + 1, 2) + "-" + handlers.padZeros(v.getUTCDate(), 2) + "T" + handlers.padZeros(v.getUTCHours(), 2) + ":" + handlers.padZeros(v.getUTCMinutes(), 2) + ":" + handlers.padZeros(v.getUTCSeconds(), 2) + "." + handlers.padZeros(v.getUTCMilliseconds(), 3) + "Z";
  };
  handlers.VerboseDateHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.DateHandler = function Transit$DateHandler() {
  };
  handlers.DateHandler.prototype.tag = function(v) {
    return "m";
  };
  handlers.DateHandler.prototype.rep = function(v) {
    return v.valueOf();
  };
  handlers.DateHandler.prototype.stringRep = function(v) {
    return v.valueOf().toString();
  };
  handlers.DateHandler.prototype.getVerboseHandler = function(v) {
    return new handlers.VerboseDateHandler;
  };
  handlers.UUIDHandler = function Transit$UUIDHandler() {
  };
  handlers.UUIDHandler.prototype.tag = function(v) {
    return "u";
  };
  handlers.UUIDHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.UUIDHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.KeywordHandler = function Transit$KeywordHandler() {
  };
  handlers.KeywordHandler.prototype.tag = function(v) {
    return ":";
  };
  handlers.KeywordHandler.prototype.rep = function(v) {
    return v._name;
  };
  handlers.KeywordHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.SymbolHandler = function Transit$SymbolHandler() {
  };
  handlers.SymbolHandler.prototype.tag = function(v) {
    return "$";
  };
  handlers.SymbolHandler.prototype.rep = function(v) {
    return v._name;
  };
  handlers.SymbolHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.TaggedHandler = function Transit$TaggedHandler() {
  };
  handlers.TaggedHandler.prototype.tag = function(v) {
    return v.tag;
  };
  handlers.TaggedHandler.prototype.rep = function(v) {
    return v.rep;
  };
  handlers.TaggedHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitSetHandler = function Transit$TransitSetHandler() {
  };
  handlers.TransitSetHandler.prototype.tag = function(v) {
    return "set";
  };
  handlers.TransitSetHandler.prototype.rep = function(v) {
    var arr = [];
    v.forEach(function(key, set) {
      arr.push(key);
    });
    return types.taggedValue("array", arr);
  };
  handlers.TransitSetHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitArrayMapHandler = function Transit$ArrayMapHandler() {
  };
  handlers.TransitArrayMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitArrayMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitArrayMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitMapHandler = function Transit$MapHandler() {
  };
  handlers.TransitMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.BufferHandler = function Transit$BufferHandler() {
  };
  handlers.BufferHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.BufferHandler.prototype.rep = function(v) {
    return v.toString("base64");
  };
  handlers.BufferHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.Uint8ArrayHandler = function Transit$Uint8ArrayHandler() {
  };
  handlers.Uint8ArrayHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.Uint8ArrayHandler.prototype.rep = function(v) {
    return util.Uint8ToBase64(v);
  };
  handlers.Uint8ArrayHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.defaultHandlers = function(hs) {
    hs.set(null, new handlers.NilHandler);
    hs.set(String, new handlers.StringHandler);
    hs.set(Number, new handlers.NumberHandler);
    hs.set(Long, new handlers.IntegerHandler);
    hs.set(Boolean, new handlers.BooleanHandler);
    hs.set(Array, new handlers.ArrayHandler);
    hs.set(Object, new handlers.MapHandler);
    hs.set(Date, new handlers.DateHandler);
    hs.set(types.UUID, new handlers.UUIDHandler);
    hs.set(types.Keyword, new handlers.KeywordHandler);
    hs.set(types.Symbol, new handlers.SymbolHandler);
    hs.set(types.TaggedValue, new handlers.TaggedHandler);
    hs.set(types.TransitSet, new handlers.TransitSetHandler);
    hs.set(types.TransitArrayMap, new handlers.TransitArrayMapHandler);
    hs.set(types.TransitMap, new handlers.TransitMapHandler);
    if (typeof Buffer != "undefined") {
      hs.set(Buffer, new handlers.BufferHandler);
    }
    if (typeof Uint8Array != "undefined") {
      hs.set(Uint8Array, new handlers.Uint8ArrayHandler);
    }
    return hs;
  };
  handlers.Handlers = function Transit$Handlers() {
    this.handlers = {};
    handlers.defaultHandlers(this);
  };
  handlers.Handlers.prototype.get = function(ctor) {
    var h = null;
    if (typeof ctor === "string") {
      h = this.handlers[ctor];
    } else {
      h = this.handlers[handlers.typeTag(ctor)];
    }
    if (h != null) {
      return h;
    } else {
      return this.handlers["default"];
    }
  };
  handlers.Handlers.prototype["get"] = handlers.Handlers.prototype.get;
  handlers.validTag = function(tag) {
    switch(tag) {
      case "null":
      ;
      case "string":
      ;
      case "boolean":
      ;
      case "number":
      ;
      case "array":
      ;
      case "map":
        return false;
        break;
    }
    return true;
  };
  handlers.Handlers.prototype.set = function(ctor, handler) {
    if (typeof ctor === "string" && handlers.validTag(ctor)) {
      this.handlers[ctor] = handler;
    } else {
      this.handlers[handlers.typeTag(ctor)] = handler;
    }
  };
});
goog.provide("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.delimiters");
goog.require("goog.math.Long");
goog.scope(function() {
  var writer = com.cognitect.transit.impl.writer, util = com.cognitect.transit.util, caching = com.cognitect.transit.caching, handlers = com.cognitect.transit.handlers, types = com.cognitect.transit.types, d = com.cognitect.transit.delimiters, Long = goog.math.Long;
  writer.escape = function(string) {
    if (string.length > 0) {
      var c = string.charAt(0);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return d.ESC + string;
      } else {
        return string;
      }
    } else {
      return string;
    }
  };
  writer.JSONMarshaller = function Transit$JSONMarshaller(opts) {
    this.opts = opts || {};
    this.preferStrings = this.opts["preferStrings"] != null ? this.opts["preferStrings"] : true;
    this.objectBuilder = this.opts["objectBuilder"] || null;
    this.handlers = new handlers.Handlers;
    var optsHandlers = this.opts["handlers"];
    if (optsHandlers) {
      if (util.isArray(optsHandlers) || !optsHandlers.forEach) {
        throw new Error('transit writer "handlers" option must be a map');
      }
      var self = this;
      optsHandlers.forEach(function(v, k) {
        if (k !== undefined) {
          self.handlers.set(k, v);
        } else {
          throw new Error("Cannot create handler for JavaScript undefined");
        }
      });
    }
    this.handlerForForeign = this.opts["handlerForForeign"];
    this.unpack = this.opts["unpack"] || function(x) {
      if (types.isArrayMap(x) && x.backingMap === null) {
        return x._entries;
      } else {
        return false;
      }
    };
    this.verbose = this.opts && this.opts["verbose"] || false;
  };
  writer.JSONMarshaller.prototype.handler = function(obj) {
    var h = this.handlers.get(handlers.constructor(obj));
    if (h != null) {
      return h;
    } else {
      var tag = obj && obj["transitTag"];
      if (tag) {
        return this.handlers.get(tag);
      } else {
        return null;
      }
    }
  };
  writer.JSONMarshaller.prototype.registerHandler = function(ctor, handler) {
    this.handlers.set(ctor, handler);
  };
  writer.JSONMarshaller.prototype.emitNil = function(asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "_", "", asMapKey, cache);
    } else {
      return null;
    }
  };
  writer.JSONMarshaller.prototype.emitString = function(prefix, tag, s, asMapKey, cache) {
    var string = prefix + tag + s;
    if (cache) {
      return cache.write(string, asMapKey);
    } else {
      return string;
    }
  };
  writer.JSONMarshaller.prototype.emitBoolean = function(b, asMapKey, cache) {
    if (asMapKey) {
      var s = b.toString();
      return this.emitString(d.ESC, "?", s[0], asMapKey, cache);
    } else {
      return b;
    }
  };
  writer.JSONMarshaller.prototype.emitInteger = function(i, asMapKey, cache) {
    if (i === Infinity) {
      return this.emitString(d.ESC, "z", "INF", asMapKey, cache);
    } else {
      if (i === -Infinity) {
        return this.emitString(d.ESC, "z", "-INF", asMapKey, cache);
      } else {
        if (isNaN(i)) {
          return this.emitString(d.ESC, "z", "NaN", asMapKey, cache);
        } else {
          if (asMapKey || typeof i === "string" || i instanceof Long) {
            return this.emitString(d.ESC, "i", i.toString(), asMapKey, cache);
          } else {
            return i;
          }
        }
      }
    }
  };
  writer.JSONMarshaller.prototype.emitDouble = function(d, asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "d", d, asMapKey, cache);
    } else {
      return d;
    }
  };
  writer.JSONMarshaller.prototype.emitBinary = function(b, asMapKey, cache) {
    return this.emitString(d.ESC, "b", b, asMapKey, cache);
  };
  writer.JSONMarshaller.prototype.emitQuoted = function(em, obj, cache) {
    if (em.verbose) {
      var ret = {}, k = this.emitString(d.ESC_TAG, "'", "", true, cache);
      ret[k] = writer.marshal(this, obj, false, cache);
      return ret;
    } else {
      return [this.emitString(d.ESC_TAG, "'", "", true, cache), writer.marshal(this, obj, false, cache)];
    }
  };
  writer.emitObjects = function(em, iterable, cache) {
    var ret = [];
    if (util.isArray(iterable)) {
      for (var i = 0;i < iterable.length;i++) {
        ret.push(writer.marshal(em, iterable[i], false, cache));
      }
    } else {
      iterable.forEach(function(v, i) {
        ret.push(writer.marshal(em, v, false, cache));
      });
    }
    return ret;
  };
  writer.emitArray = function(em, iterable, skip, cache) {
    return writer.emitObjects(em, iterable, cache);
  };
  writer.isStringableKey = function(em, k) {
    if (typeof k !== "string") {
      var h = em.handler(k);
      return h && h.tag(k).length === 1;
    } else {
      return true;
    }
  };
  writer.stringableKeys = function(em, obj) {
    var arr = em.unpack(obj), stringableKeys = true;
    if (arr) {
      for (var i = 0;i < arr.length;i += 2) {
        stringableKeys = writer.isStringableKey(em, arr[i]);
        if (!stringableKeys) {
          break;
        }
      }
      return stringableKeys;
    } else {
      if (obj.keys) {
        var iter = obj.keys(), step = null;
        if (iter.next) {
          step = iter.next();
          while (!step.done) {
            stringableKeys = writer.isStringableKey(em, step.value);
            if (!stringableKeys) {
              break;
            }
            step = iter.next();
          }
          return stringableKeys;
        }
      }
    }
    if (obj.forEach) {
      obj.forEach(function(v, k) {
        stringableKeys = stringableKeys && writer.isStringableKey(em, k);
      });
      return stringableKeys;
    } else {
      throw new Error("Cannot walk keys of object type " + handlers.constructor(obj).name);
    }
  };
  writer.isForeignObject = function(x) {
    if (x.constructor["transit$isObject"]) {
      return true;
    }
    var ret = x.constructor.toString();
    ret = ret.substr("function ".length);
    ret = ret.substr(0, ret.indexOf("("));
    isObject = ret == "Object";
    if (typeof Object.defineProperty != "undefined") {
      Object.defineProperty(x.constructor, "transit$isObject", {value:isObject, enumerable:false});
    } else {
      x.constructor["transit$isObject"] = isObject;
    }
    return isObject;
  };
  writer.emitMap = function(em, obj, skip, cache) {
    var arr = null, rep = null, tag = null, ks = null, i = 0;
    if (obj.constructor === Object || obj.forEach != null || em.handlerForForeign && writer.isForeignObject(obj)) {
      if (em.verbose) {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            var ret = {};
            obj.forEach(function(v, k) {
              ret[writer.marshal(em, k, true, false)] = writer.marshal(em, v, false, cache);
            });
            return ret;
          } else {
            arr = em.unpack(obj);
            rep = [];
            tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], false, false));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, false, false));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            ret = {};
            ret[tag] = rep;
            return ret;
          }
        } else {
          ks = util.objectKeys(obj);
          ret = {};
          for (;i < ks.length;i++) {
            ret[writer.marshal(em, ks[i], true, false)] = writer.marshal(em, obj[ks[i]], false, cache);
          }
          return ret;
        }
      } else {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            arr = em.unpack(obj);
            ret = ["^ "];
            if (arr) {
              for (;i < arr.length;i += 2) {
                ret.push(writer.marshal(em, arr[i], true, cache));
                ret.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                ret.push(writer.marshal(em, k, true, cache));
                ret.push(writer.marshal(em, v, false, cache));
              });
            }
            return ret;
          } else {
            arr = em.unpack(obj);
            rep = [];
            tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], false, cache));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, false, cache));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            return [tag, rep];
          }
        } else {
          ret = ["^ "];
          ks = util.objectKeys(obj);
          for (;i < ks.length;i++) {
            ret.push(writer.marshal(em, ks[i], true, cache));
            ret.push(writer.marshal(em, obj[ks[i]], false, cache));
          }
          return ret;
        }
      }
    } else {
      if (em.objectBuilder != null) {
        return em.objectBuilder(obj, function(k) {
          return writer.marshal(em, k, true, cache);
        }, function(v) {
          return writer.marshal(em, v, false, cache);
        });
      } else {
        var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
        err.data = {obj:obj, type:name};
        throw err;
      }
    }
  };
  writer.emitTaggedMap = function(em, tag, rep, skip, cache) {
    if (em.verbose) {
      var ret = {};
      ret[em.emitString(d.ESC_TAG, tag, "", true, cache)] = writer.marshal(em, rep, false, cache);
      return ret;
    } else {
      return [em.emitString(d.ESC_TAG, tag, "", true, cache), writer.marshal(em, rep, false, cache)];
    }
  };
  writer.emitEncoded = function(em, h, tag, rep, obj, asMapKey, cache) {
    if (tag.length === 1) {
      if (typeof rep === "string") {
        return em.emitString(d.ESC, tag, rep, asMapKey, cache);
      } else {
        if (asMapKey || em.preferStrings) {
          var vh = em.verbose && h.getVerboseHandler();
          if (vh) {
            tag = vh.tag(obj);
            rep = vh.stringRep(obj, vh);
          } else {
            rep = h.stringRep(obj, h);
          }
          if (rep !== null) {
            return em.emitString(d.ESC, tag, rep, asMapKey, cache);
          } else {
            var err = new Error('Tag "' + tag + '" cannot be encoded as string');
            err.data = {tag:tag, rep:rep, obj:obj};
            throw err;
          }
        } else {
          return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
        }
      }
    } else {
      return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
    }
  };
  writer.marshal = function(em, obj, asMapKey, cache) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null), tag = h ? h.tag(obj) : null, rep = h ? h.rep(obj) : null;
    if (h != null && tag != null) {
      switch(tag) {
        case "_":
          return em.emitNil(asMapKey, cache);
          break;
        case "s":
          return em.emitString("", "", writer.escape(rep), asMapKey, cache);
          break;
        case "?":
          return em.emitBoolean(rep, asMapKey, cache);
          break;
        case "i":
          return em.emitInteger(rep, asMapKey, cache);
          break;
        case "d":
          return em.emitDouble(rep, asMapKey, cache);
          break;
        case "b":
          return em.emitBinary(rep, asMapKey, cache);
          break;
        case "'":
          return em.emitQuoted(em, rep, cache);
          break;
        case "array":
          return writer.emitArray(em, rep, asMapKey, cache);
          break;
        case "map":
          return writer.emitMap(em, rep, asMapKey, cache);
          break;
        default:
          return writer.emitEncoded(em, h, tag, rep, obj, asMapKey, cache);
          break;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.maybeQuoted = function(em, obj) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null);
    if (h != null) {
      if (h.tag(obj).length === 1) {
        return types.quoted(obj);
      } else {
        return obj;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.marshalTop = function(em, obj, asMapKey, cache) {
    return JSON.stringify(writer.marshal(em, writer.maybeQuoted(em, obj), asMapKey, cache));
  };
  writer.Writer = function Transit$Writer(marshaller, options) {
    this._marshaller = marshaller;
    this.options = options || {};
    if (this.options["cache"] === false) {
      this.cache = null;
    } else {
      this.cache = this.options["cache"] ? this.options["cache"] : new caching.WriteCache;
    }
  };
  writer.Writer.prototype.marshaller = function() {
    return this._marshaller;
  };
  writer.Writer.prototype["marshaller"] = writer.Writer.prototype.marshaller;
  writer.Writer.prototype.write = function(obj, opts) {
    var ret = null, ropts = opts || {}, asMapKey = ropts["asMapKey"] || false, cache = this._marshaller.verbose ? false : this.cache;
    if (ropts["marshalTop"] === false) {
      ret = writer.marshal(this._marshaller, obj, asMapKey, cache);
    } else {
      ret = writer.marshalTop(this._marshaller, obj, asMapKey, cache);
    }
    if (this.cache != null) {
      this.cache.clear();
    }
    return ret;
  };
  writer.Writer.prototype["write"] = writer.Writer.prototype.write;
  writer.Writer.prototype.register = function(type, handler) {
    this._marshaller.registerHandler(type, handler);
  };
  writer.Writer.prototype["register"] = writer.Writer.prototype.register;
});
goog.provide("com.cognitect.transit");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
var TRANSIT_DEV = true;
var TRANSIT_NODE_TARGET = false;
var TRANSIT_BROWSER_TARGET = false;
var TRANSIT_BROWSER_AMD_TARGET = false;
goog.scope(function() {
  var transit = com.cognitect.transit;
  var util = com.cognitect.transit.util, reader = com.cognitect.transit.impl.reader, writer = com.cognitect.transit.impl.writer, decoder = com.cognitect.transit.impl.decoder, types = com.cognitect.transit.types, eq = com.cognitect.transit.eq, caching = com.cognitect.transit.caching;
  transit.MapLike;
  transit.SetLike;
  transit.reader = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      type = "json";
      var unmarshaller = new reader.JSONUnmarshaller(opts);
      return new reader.Reader(unmarshaller, opts);
    } else {
      throw new Error("Cannot create reader of type " + type);
    }
  };
  transit.writer = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      if (type === "json-verbose") {
        if (opts == null) {
          opts = {};
        }
        opts["verbose"] = true;
      }
      var marshaller = new writer.JSONMarshaller(opts);
      return new writer.Writer(marshaller, opts);
    } else {
      var err = new Error('Type must be "json"');
      err.data = {type:type};
      throw err;
    }
  };
  transit.makeWriteHandler = function(obj) {
    var Handler = function() {
    };
    Handler.prototype.tag = obj["tag"];
    Handler.prototype.rep = obj["rep"];
    Handler.prototype.stringRep = obj["stringRep"];
    Handler.prototype.getVerboseHandler = obj["getVerboseHandler"];
    return new Handler;
  };
  transit.makeBuilder = function(obj) {
    var Builder = function() {
    };
    Builder.prototype.init = obj["init"];
    Builder.prototype.add = obj["add"];
    Builder.prototype.finalize = obj["finalize"];
    Builder.prototype.fromArray = obj["fromArray"];
    return new Builder;
  };
  transit.date = types.date;
  transit.integer = types.intValue;
  transit.isInteger = types.isInteger;
  transit.uuid = types.uuid;
  transit.isUUID = types.isUUID;
  transit.bigInt = types.bigInteger;
  transit.isBigInt = types.isBigInteger;
  transit.bigDec = types.bigDecimalValue;
  transit.isBigDec = types.isBigDecimal;
  transit.keyword = types.keyword;
  transit.isKeyword = types.isKeyword;
  transit.symbol = types.symbol;
  transit.isSymbol = types.isSymbol;
  transit.binary = types.binary;
  transit.isBinary = types.isBinary;
  transit.uri = types.uri;
  transit.isURI = types.isURI;
  transit.map = types.map;
  transit.isMap = types.isMap;
  transit.set = types.set;
  transit.isSet = types.isSet;
  transit.list = types.list;
  transit.isList = types.isList;
  transit.quoted = types.quoted;
  transit.isQuoted = types.isQuoted;
  transit.tagged = types.taggedValue;
  transit.isTaggedValue = types.isTaggedValue;
  transit.link = types.link;
  transit.isLink = types.isLink;
  transit.hash = eq.hashCode;
  transit.hashMapLike = eq.hashMapLike;
  transit.hashArrayLike = eq.hashArrayLike;
  transit.equals = eq.equals;
  transit.extendToEQ = eq.extendToEQ;
  transit.mapToObject = function(m) {
    var ret = {};
    m.forEach(function(v, k) {
      if (typeof k !== "string") {
        throw Error("Cannot convert map with non-string keys");
      } else {
        ret[k] = v;
      }
    });
    return ret;
  };
  transit.objectToMap = function(obj) {
    var ret = transit.map();
    for (var p in obj) {
      if (obj.hasOwnProperty(p)) {
        ret.set(p, obj[p]);
      }
    }
    return ret;
  };
  transit.decoder = decoder.decoder;
  transit.readCache = caching.readCache;
  transit.writeCache = caching.writeCache;
  transit.UUIDfromString = types.UUIDfromString;
  transit.randomUUID = util.randomUUID;
  transit.stringableKeys = writer.stringableKeys;
  if (TRANSIT_BROWSER_TARGET) {
    goog.exportSymbol("transit.reader", transit.reader);
    goog.exportSymbol("transit.writer", transit.writer);
    goog.exportSymbol("transit.makeBuilder", transit.makeBuilder);
    goog.exportSymbol("transit.makeWriteHandler", transit.makeWriteHandler);
    goog.exportSymbol("transit.date", types.date);
    goog.exportSymbol("transit.integer", types.intValue);
    goog.exportSymbol("transit.isInteger", types.isInteger);
    goog.exportSymbol("transit.uuid", types.uuid);
    goog.exportSymbol("transit.isUUID", types.isUUID);
    goog.exportSymbol("transit.bigInt", types.bigInteger);
    goog.exportSymbol("transit.isBigInt", types.isBigInteger);
    goog.exportSymbol("transit.bigDec", types.bigDecimalValue);
    goog.exportSymbol("transit.isBigDec", types.isBigDecimal);
    goog.exportSymbol("transit.keyword", types.keyword);
    goog.exportSymbol("transit.isKeyword", types.isKeyword);
    goog.exportSymbol("transit.symbol", types.symbol);
    goog.exportSymbol("transit.isSymbol", types.isSymbol);
    goog.exportSymbol("transit.binary", types.binary);
    goog.exportSymbol("transit.isBinary", types.isBinary);
    goog.exportSymbol("transit.uri", types.uri);
    goog.exportSymbol("transit.isURI", types.isURI);
    goog.exportSymbol("transit.map", types.map);
    goog.exportSymbol("transit.isMap", types.isMap);
    goog.exportSymbol("transit.set", types.set);
    goog.exportSymbol("transit.isSet", types.isSet);
    goog.exportSymbol("transit.list", types.list);
    goog.exportSymbol("transit.isList", types.isList);
    goog.exportSymbol("transit.quoted", types.quoted);
    goog.exportSymbol("transit.isQuoted", types.isQuoted);
    goog.exportSymbol("transit.tagged", types.taggedValue);
    goog.exportSymbol("transit.isTaggedValue", types.isTaggedValue);
    goog.exportSymbol("transit.link", types.link);
    goog.exportSymbol("transit.isLink", types.isLink);
    goog.exportSymbol("transit.hash", eq.hashCode);
    goog.exportSymbol("transit.hashMapLike", eq.hashMapLike);
    goog.exportSymbol("transit.hashArrayLike", eq.hashArrayLike);
    goog.exportSymbol("transit.equals", eq.equals);
    goog.exportSymbol("transit.extendToEQ", eq.extendToEQ);
    goog.exportSymbol("transit.mapToObject", transit.mapToObject);
    goog.exportSymbol("transit.objectToMap", transit.objectToMap);
    goog.exportSymbol("transit.decoder", decoder.decoder);
    goog.exportSymbol("transit.UUIDfromString", types.UUIDfromString);
    goog.exportSymbol("transit.randomUUID", util.randomUUID);
    goog.exportSymbol("transit.stringableKeys", writer.stringableKeys);
    goog.exportSymbol("transit.readCache", caching.readCache);
    goog.exportSymbol("transit.writeCache", caching.writeCache);
  }
  if (TRANSIT_NODE_TARGET) {
    module.exports = {reader:transit.reader, writer:transit.writer, makeBuilder:transit.makeBuilder, makeWriteHandler:transit.makeWriteHandler, date:types.date, integer:types.intValue, isInteger:types.isInteger, uuid:types.uuid, isUUID:types.isUUID, bigInt:types.bigInteger, isBigInt:types.isBigInteger, bigDec:types.bigDecimalValue, isBigDec:types.isBigDecimal, keyword:types.keyword, isKeyword:types.isKeyword, symbol:types.symbol, isSymbol:types.isSymbol, binary:types.binary, isBinary:types.isBinary, 
    uri:types.uri, isURI:types.isURI, map:types.map, isMap:types.isMap, set:types.set, isSet:types.isSet, list:types.list, isList:types.isList, quoted:types.quoted, isQuoted:types.isQuoted, tagged:types.taggedValue, isTaggedValue:types.isTaggedValue, link:types.link, isLink:types.isLink, hash:eq.hashCode, hashArrayLike:eq.hashArrayLike, hashMapLike:eq.hashMapLike, equals:eq.equals, extendToEQ:eq.extendToEQ, mapToObject:transit.mapToObject, objectToMap:transit.objectToMap, decoder:decoder.decoder, 
    UUIDfromString:types.UUIDfromString, randomUUID:util.randomUUID, stringableKeys:writer.stringableKeys, readCache:caching.readCache, writeCache:caching.writeCache};
  }
});
goog.provide("cognitect.transit");
goog.require("cljs.core");
goog.require("com.cognitect.transit");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
cljs.core.UUID.prototype.cljs$core$IEquiv$ = true;
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return this$__$1.uuid === other.uuid;
  } else {
    if (other instanceof com.cognitect.transit.types.UUID) {
      return this$__$1.uuid === other.toString();
    } else {
      return false;
    }
  }
};
cljs.core.UUID.prototype.cljs$core$IComparable$ = true;
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare.call(null, this$__$1.toString(), other.toString());
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare.call(null, this$__$1.toString(), other.toString());
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
goog.math.Long.prototype.cljs$core$IEquiv$ = true;
goog.math.Long.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return cljs.core._equiv.call(null, other, this$__$1);
  } else {
    return this$__$1.equiv(other);
  }
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
goog.math.Long.prototype.cljs$core$IHash$ = true;
goog.math.Long.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.hash.call(null, this$__$1.toString());
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(uuid, writer, _) {
  var uuid__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(uuid__$1.toString()), cljs.core.str('"')].join(""));
};
cognitect.transit.opts_merge = function cognitect$transit$opts_merge(a, b) {
  var seq__23352_23356 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, b));
  var chunk__23353_23357 = null;
  var count__23354_23358 = 0;
  var i__23355_23359 = 0;
  while (true) {
    if (i__23355_23359 < count__23354_23358) {
      var k_23360 = cljs.core._nth.call(null, chunk__23353_23357, i__23355_23359);
      var v_23361 = b[k_23360];
      a[k_23360] = v_23361;
      var G__23362 = seq__23352_23356;
      var G__23363 = chunk__23353_23357;
      var G__23364 = count__23354_23358;
      var G__23365 = i__23355_23359 + 1;
      seq__23352_23356 = G__23362;
      chunk__23353_23357 = G__23363;
      count__23354_23358 = G__23364;
      i__23355_23359 = G__23365;
      continue;
    } else {
      var temp__4657__auto___23366 = cljs.core.seq.call(null, seq__23352_23356);
      if (temp__4657__auto___23366) {
        var seq__23352_23367__$1 = temp__4657__auto___23366;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__23352_23367__$1)) {
          var c__7021__auto___23368 = cljs.core.chunk_first.call(null, seq__23352_23367__$1);
          var G__23369 = cljs.core.chunk_rest.call(null, seq__23352_23367__$1);
          var G__23370 = c__7021__auto___23368;
          var G__23371 = cljs.core.count.call(null, c__7021__auto___23368);
          var G__23372 = 0;
          seq__23352_23356 = G__23369;
          chunk__23353_23357 = G__23370;
          count__23354_23358 = G__23371;
          i__23355_23359 = G__23372;
          continue;
        } else {
          var k_23373 = cljs.core.first.call(null, seq__23352_23367__$1);
          var v_23374 = b[k_23373];
          a[k_23373] = v_23374;
          var G__23375 = cljs.core.next.call(null, seq__23352_23367__$1);
          var G__23376 = null;
          var G__23377 = 0;
          var G__23378 = 0;
          seq__23352_23356 = G__23375;
          chunk__23353_23357 = G__23376;
          count__23354_23358 = G__23377;
          i__23355_23359 = G__23378;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return a;
};
cognitect.transit.MapBuilder = function() {
};
cognitect.transit.MapBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.MapBuilder.prototype.add = function(m, k, v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.assoc_BANG_.call(null, m, k, v);
};
cognitect.transit.MapBuilder.prototype.finalize = function(m, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, m);
};
cognitect.transit.MapBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentArrayMap.fromArray.call(null, arr, true, true);
};
cognitect.transit.MapBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapBuilder.cljs$lang$type = true;
cognitect.transit.MapBuilder.cljs$lang$ctorStr = "cognitect.transit/MapBuilder";
cognitect.transit.MapBuilder.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cognitect.transit/MapBuilder");
};
cognitect.transit.__GT_MapBuilder = function cognitect$transit$__GT_MapBuilder() {
  return new cognitect.transit.MapBuilder;
};
cognitect.transit.VectorBuilder = function() {
};
cognitect.transit.VectorBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
};
cognitect.transit.VectorBuilder.prototype.add = function(v, x, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.conj_BANG_.call(null, v, x);
};
cognitect.transit.VectorBuilder.prototype.finalize = function(v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, v);
};
cognitect.transit.VectorBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentVector.fromArray.call(null, arr, true);
};
cognitect.transit.VectorBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorBuilder.cljs$lang$type = true;
cognitect.transit.VectorBuilder.cljs$lang$ctorStr = "cognitect.transit/VectorBuilder";
cognitect.transit.VectorBuilder.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cognitect.transit/VectorBuilder");
};
cognitect.transit.__GT_VectorBuilder = function cognitect$transit$__GT_VectorBuilder() {
  return new cognitect.transit.VectorBuilder;
};
cognitect.transit.reader = function cognitect$transit$reader(var_args) {
  var args23379 = [];
  var len__7279__auto___23382 = arguments.length;
  var i__7280__auto___23383 = 0;
  while (true) {
    if (i__7280__auto___23383 < len__7279__auto___23382) {
      args23379.push(arguments[i__7280__auto___23383]);
      var G__23384 = i__7280__auto___23383 + 1;
      i__7280__auto___23383 = G__23384;
      continue;
    } else {
    }
    break;
  }
  var G__23381 = args23379.length;
  switch(G__23381) {
    case 1:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23379.length)].join(""));;
  }
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.reader.call(null, type, null);
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  return com.cognitect.transit.reader.call(null, cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"handlers":cljs.core.clj__GT_js.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, ["$", function(v) {
    return cljs.core.symbol.call(null, v);
  }, ":", function(v) {
    return cljs.core.keyword.call(null, v);
  }, "set", function(v) {
    return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, v);
  }, "list", function(v) {
    return cljs.core.into.call(null, cljs.core.List.EMPTY, v.reverse());
  }, "cmap", function(v) {
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < v.length) {
        var G__23386 = i + 2;
        var G__23387 = cljs.core.assoc_BANG_.call(null, ret, v[i], v[i + 1]);
        i = G__23386;
        ret = G__23387;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, ret);
      }
      break;
    }
  }], null), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts))), "mapBuilder":new cognitect.transit.MapBuilder, "arrayBuilder":new cognitect.transit.VectorBuilder, "prefersStrings":false}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
};
cognitect.transit.reader.cljs$lang$maxFixedArity = 2;
cognitect.transit.read = function cognitect$transit$read(r, str) {
  return r.read(str);
};
cognitect.transit.KeywordHandler = function() {
};
cognitect.transit.KeywordHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return ":";
};
cognitect.transit.KeywordHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.KeywordHandler.cljs$lang$type = true;
cognitect.transit.KeywordHandler.cljs$lang$ctorStr = "cognitect.transit/KeywordHandler";
cognitect.transit.KeywordHandler.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cognitect.transit/KeywordHandler");
};
cognitect.transit.__GT_KeywordHandler = function cognitect$transit$__GT_KeywordHandler() {
  return new cognitect.transit.KeywordHandler;
};
cognitect.transit.SymbolHandler = function() {
};
cognitect.transit.SymbolHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "$";
};
cognitect.transit.SymbolHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SymbolHandler.cljs$lang$type = true;
cognitect.transit.SymbolHandler.cljs$lang$ctorStr = "cognitect.transit/SymbolHandler";
cognitect.transit.SymbolHandler.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cognitect.transit/SymbolHandler");
};
cognitect.transit.__GT_SymbolHandler = function cognitect$transit$__GT_SymbolHandler() {
  return new cognitect.transit.SymbolHandler;
};
cognitect.transit.ListHandler = function() {
};
cognitect.transit.ListHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "list";
};
cognitect.transit.ListHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__23388_23392 = cljs.core.seq.call(null, v);
  var chunk__23389_23393 = null;
  var count__23390_23394 = 0;
  var i__23391_23395 = 0;
  while (true) {
    if (i__23391_23395 < count__23390_23394) {
      var x_23396 = cljs.core._nth.call(null, chunk__23389_23393, i__23391_23395);
      ret.push(x_23396);
      var G__23397 = seq__23388_23392;
      var G__23398 = chunk__23389_23393;
      var G__23399 = count__23390_23394;
      var G__23400 = i__23391_23395 + 1;
      seq__23388_23392 = G__23397;
      chunk__23389_23393 = G__23398;
      count__23390_23394 = G__23399;
      i__23391_23395 = G__23400;
      continue;
    } else {
      var temp__4657__auto___23401 = cljs.core.seq.call(null, seq__23388_23392);
      if (temp__4657__auto___23401) {
        var seq__23388_23402__$1 = temp__4657__auto___23401;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__23388_23402__$1)) {
          var c__7021__auto___23403 = cljs.core.chunk_first.call(null, seq__23388_23402__$1);
          var G__23404 = cljs.core.chunk_rest.call(null, seq__23388_23402__$1);
          var G__23405 = c__7021__auto___23403;
          var G__23406 = cljs.core.count.call(null, c__7021__auto___23403);
          var G__23407 = 0;
          seq__23388_23392 = G__23404;
          chunk__23389_23393 = G__23405;
          count__23390_23394 = G__23406;
          i__23391_23395 = G__23407;
          continue;
        } else {
          var x_23408 = cljs.core.first.call(null, seq__23388_23402__$1);
          ret.push(x_23408);
          var G__23409 = cljs.core.next.call(null, seq__23388_23402__$1);
          var G__23410 = null;
          var G__23411 = 0;
          var G__23412 = 0;
          seq__23388_23392 = G__23409;
          chunk__23389_23393 = G__23410;
          count__23390_23394 = G__23411;
          i__23391_23395 = G__23412;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.ListHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.ListHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.ListHandler.cljs$lang$type = true;
cognitect.transit.ListHandler.cljs$lang$ctorStr = "cognitect.transit/ListHandler";
cognitect.transit.ListHandler.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cognitect.transit/ListHandler");
};
cognitect.transit.__GT_ListHandler = function cognitect$transit$__GT_ListHandler() {
  return new cognitect.transit.ListHandler;
};
cognitect.transit.MapHandler = function() {
};
cognitect.transit.MapHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "map";
};
cognitect.transit.MapHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v;
};
cognitect.transit.MapHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.MapHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapHandler.cljs$lang$type = true;
cognitect.transit.MapHandler.cljs$lang$ctorStr = "cognitect.transit/MapHandler";
cognitect.transit.MapHandler.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cognitect.transit/MapHandler");
};
cognitect.transit.__GT_MapHandler = function cognitect$transit$__GT_MapHandler() {
  return new cognitect.transit.MapHandler;
};
cognitect.transit.SetHandler = function() {
};
cognitect.transit.SetHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "set";
};
cognitect.transit.SetHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__23413_23417 = cljs.core.seq.call(null, v);
  var chunk__23414_23418 = null;
  var count__23415_23419 = 0;
  var i__23416_23420 = 0;
  while (true) {
    if (i__23416_23420 < count__23415_23419) {
      var x_23421 = cljs.core._nth.call(null, chunk__23414_23418, i__23416_23420);
      ret.push(x_23421);
      var G__23422 = seq__23413_23417;
      var G__23423 = chunk__23414_23418;
      var G__23424 = count__23415_23419;
      var G__23425 = i__23416_23420 + 1;
      seq__23413_23417 = G__23422;
      chunk__23414_23418 = G__23423;
      count__23415_23419 = G__23424;
      i__23416_23420 = G__23425;
      continue;
    } else {
      var temp__4657__auto___23426 = cljs.core.seq.call(null, seq__23413_23417);
      if (temp__4657__auto___23426) {
        var seq__23413_23427__$1 = temp__4657__auto___23426;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__23413_23427__$1)) {
          var c__7021__auto___23428 = cljs.core.chunk_first.call(null, seq__23413_23427__$1);
          var G__23429 = cljs.core.chunk_rest.call(null, seq__23413_23427__$1);
          var G__23430 = c__7021__auto___23428;
          var G__23431 = cljs.core.count.call(null, c__7021__auto___23428);
          var G__23432 = 0;
          seq__23413_23417 = G__23429;
          chunk__23414_23418 = G__23430;
          count__23415_23419 = G__23431;
          i__23416_23420 = G__23432;
          continue;
        } else {
          var x_23433 = cljs.core.first.call(null, seq__23413_23427__$1);
          ret.push(x_23433);
          var G__23434 = cljs.core.next.call(null, seq__23413_23427__$1);
          var G__23435 = null;
          var G__23436 = 0;
          var G__23437 = 0;
          seq__23413_23417 = G__23434;
          chunk__23414_23418 = G__23435;
          count__23415_23419 = G__23436;
          i__23416_23420 = G__23437;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.SetHandler.prototype.stringRep = function() {
  var self__ = this;
  var v = this;
  return null;
};
cognitect.transit.SetHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SetHandler.cljs$lang$type = true;
cognitect.transit.SetHandler.cljs$lang$ctorStr = "cognitect.transit/SetHandler";
cognitect.transit.SetHandler.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cognitect.transit/SetHandler");
};
cognitect.transit.__GT_SetHandler = function cognitect$transit$__GT_SetHandler() {
  return new cognitect.transit.SetHandler;
};
cognitect.transit.VectorHandler = function() {
};
cognitect.transit.VectorHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "array";
};
cognitect.transit.VectorHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__23438_23442 = cljs.core.seq.call(null, v);
  var chunk__23439_23443 = null;
  var count__23440_23444 = 0;
  var i__23441_23445 = 0;
  while (true) {
    if (i__23441_23445 < count__23440_23444) {
      var x_23446 = cljs.core._nth.call(null, chunk__23439_23443, i__23441_23445);
      ret.push(x_23446);
      var G__23447 = seq__23438_23442;
      var G__23448 = chunk__23439_23443;
      var G__23449 = count__23440_23444;
      var G__23450 = i__23441_23445 + 1;
      seq__23438_23442 = G__23447;
      chunk__23439_23443 = G__23448;
      count__23440_23444 = G__23449;
      i__23441_23445 = G__23450;
      continue;
    } else {
      var temp__4657__auto___23451 = cljs.core.seq.call(null, seq__23438_23442);
      if (temp__4657__auto___23451) {
        var seq__23438_23452__$1 = temp__4657__auto___23451;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__23438_23452__$1)) {
          var c__7021__auto___23453 = cljs.core.chunk_first.call(null, seq__23438_23452__$1);
          var G__23454 = cljs.core.chunk_rest.call(null, seq__23438_23452__$1);
          var G__23455 = c__7021__auto___23453;
          var G__23456 = cljs.core.count.call(null, c__7021__auto___23453);
          var G__23457 = 0;
          seq__23438_23442 = G__23454;
          chunk__23439_23443 = G__23455;
          count__23440_23444 = G__23456;
          i__23441_23445 = G__23457;
          continue;
        } else {
          var x_23458 = cljs.core.first.call(null, seq__23438_23452__$1);
          ret.push(x_23458);
          var G__23459 = cljs.core.next.call(null, seq__23438_23452__$1);
          var G__23460 = null;
          var G__23461 = 0;
          var G__23462 = 0;
          seq__23438_23442 = G__23459;
          chunk__23439_23443 = G__23460;
          count__23440_23444 = G__23461;
          i__23441_23445 = G__23462;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return ret;
};
cognitect.transit.VectorHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.VectorHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorHandler.cljs$lang$type = true;
cognitect.transit.VectorHandler.cljs$lang$ctorStr = "cognitect.transit/VectorHandler";
cognitect.transit.VectorHandler.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cognitect.transit/VectorHandler");
};
cognitect.transit.__GT_VectorHandler = function cognitect$transit$__GT_VectorHandler() {
  return new cognitect.transit.VectorHandler;
};
cognitect.transit.UUIDHandler = function() {
};
cognitect.transit.UUIDHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "u";
};
cognitect.transit.UUIDHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.uuid;
};
cognitect.transit.UUIDHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var this$ = this;
  return this$.rep(v);
};
cognitect.transit.UUIDHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.UUIDHandler.cljs$lang$type = true;
cognitect.transit.UUIDHandler.cljs$lang$ctorStr = "cognitect.transit/UUIDHandler";
cognitect.transit.UUIDHandler.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cognitect.transit/UUIDHandler");
};
cognitect.transit.__GT_UUIDHandler = function cognitect$transit$__GT_UUIDHandler() {
  return new cognitect.transit.UUIDHandler;
};
cognitect.transit.writer = function cognitect$transit$writer(var_args) {
  var args23463 = [];
  var len__7279__auto___23474 = arguments.length;
  var i__7280__auto___23475 = 0;
  while (true) {
    if (i__7280__auto___23475 < len__7279__auto___23474) {
      args23463.push(arguments[i__7280__auto___23475]);
      var G__23476 = i__7280__auto___23475 + 1;
      i__7280__auto___23475 = G__23476;
      continue;
    } else {
    }
    break;
  }
  var G__23465 = args23463.length;
  switch(G__23465) {
    case 1:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23463.length)].join(""));;
  }
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.writer.call(null, type, null);
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  var keyword_handler = new cognitect.transit.KeywordHandler;
  var symbol_handler = new cognitect.transit.SymbolHandler;
  var list_handler = new cognitect.transit.ListHandler;
  var map_handler = new cognitect.transit.MapHandler;
  var set_handler = new cognitect.transit.SetHandler;
  var vector_handler = new cognitect.transit.VectorHandler;
  var uuid_handler = new cognitect.transit.UUIDHandler;
  var handlers = cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([cljs.core.PersistentHashMap, cljs.core.Cons, cljs.core.PersistentArrayMap, cljs.core.NodeSeq, cljs.core.PersistentQueue, cljs.core.IndexedSeq, cljs.core.Keyword, cljs.core.EmptyList, cljs.core.LazySeq, cljs.core.Subvec, cljs.core.PersistentQueueSeq, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentArrayMapSeq, cljs.core.PersistentVector, cljs.core.List, cljs.core.RSeq, cljs.core.PersistentHashSet, cljs.core.PersistentTreeMap, 
  cljs.core.KeySeq, cljs.core.ChunkedSeq, cljs.core.PersistentTreeSet, cljs.core.ChunkedCons, cljs.core.Symbol, cljs.core.UUID, cljs.core.Range, cljs.core.PersistentTreeMapSeq], [map_handler, list_handler, map_handler, list_handler, list_handler, list_handler, keyword_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, set_handler, map_handler, list_handler, list_handler, set_handler, list_handler, 
  symbol_handler, uuid_handler, list_handler, list_handler]), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts));
  return com.cognitect.transit.writer.call(null, cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"objectBuilder":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
    return function(m, kfn, vfn) {
      return cljs.core.reduce_kv.call(null, function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
        return function(obj, k, v) {
          var G__23466 = obj;
          G__23466.push(kfn.call(null, k), vfn.call(null, v));
          return G__23466;
        };
      }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), ["^ "], m);
    };
  }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), "handlers":function() {
    var x23467 = cljs.core.clone.call(null, handlers);
    x23467.forEach = function(x23467, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
      return function(f) {
        var coll = this;
        var seq__23468 = cljs.core.seq.call(null, coll);
        var chunk__23469 = null;
        var count__23470 = 0;
        var i__23471 = 0;
        while (true) {
          if (i__23471 < count__23470) {
            var vec__23472 = cljs.core._nth.call(null, chunk__23469, i__23471);
            var k = cljs.core.nth.call(null, vec__23472, 0, null);
            var v = cljs.core.nth.call(null, vec__23472, 1, null);
            f.call(null, v, k);
            var G__23478 = seq__23468;
            var G__23479 = chunk__23469;
            var G__23480 = count__23470;
            var G__23481 = i__23471 + 1;
            seq__23468 = G__23478;
            chunk__23469 = G__23479;
            count__23470 = G__23480;
            i__23471 = G__23481;
            continue;
          } else {
            var temp__4657__auto__ = cljs.core.seq.call(null, seq__23468);
            if (temp__4657__auto__) {
              var seq__23468__$1 = temp__4657__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__23468__$1)) {
                var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__23468__$1);
                var G__23482 = cljs.core.chunk_rest.call(null, seq__23468__$1);
                var G__23483 = c__7021__auto__;
                var G__23484 = cljs.core.count.call(null, c__7021__auto__);
                var G__23485 = 0;
                seq__23468 = G__23482;
                chunk__23469 = G__23483;
                count__23470 = G__23484;
                i__23471 = G__23485;
                continue;
              } else {
                var vec__23473 = cljs.core.first.call(null, seq__23468__$1);
                var k = cljs.core.nth.call(null, vec__23473, 0, null);
                var v = cljs.core.nth.call(null, vec__23473, 1, null);
                f.call(null, v, k);
                var G__23486 = cljs.core.next.call(null, seq__23468__$1);
                var G__23487 = null;
                var G__23488 = 0;
                var G__23489 = 0;
                seq__23468 = G__23486;
                chunk__23469 = G__23487;
                count__23470 = G__23488;
                i__23471 = G__23489;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(x23467, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers);
    return x23467;
  }(), "unpack":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
    return function(x) {
      if (x instanceof cljs.core.PersistentArrayMap) {
        return x.arr;
      } else {
        return false;
      }
    };
  }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers)}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
};
cognitect.transit.writer.cljs$lang$maxFixedArity = 2;
cognitect.transit.write = function cognitect$transit$write(w, o) {
  return w.write(o);
};
cognitect.transit.read_handler = function cognitect$transit$read_handler(from_rep) {
  return from_rep;
};
cognitect.transit.write_handler = function cognitect$transit$write_handler(var_args) {
  var args23490 = [];
  var len__7279__auto___23496 = arguments.length;
  var i__7280__auto___23497 = 0;
  while (true) {
    if (i__7280__auto___23497 < len__7279__auto___23496) {
      args23490.push(arguments[i__7280__auto___23497]);
      var G__23498 = i__7280__auto___23497 + 1;
      i__7280__auto___23497 = G__23498;
      continue;
    } else {
    }
    break;
  }
  var G__23492 = args23490.length;
  switch(G__23492) {
    case 2:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23490.length)].join(""));;
  }
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2 = function(tag_fn, rep_fn) {
  return cognitect.transit.write_handler.call(null, tag_fn, rep_fn, null, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3 = function(tag_fn, rep_fn, str_rep_fn) {
  return cognitect.transit.write_handler.call(null, tag_fn, rep_fn, str_rep_fn, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn) {
  if (typeof cognitect.transit.t_cognitect$transit23493 !== "undefined") {
  } else {
    cognitect.transit.t_cognitect$transit23493 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, meta23494) {
      this.tag_fn = tag_fn;
      this.rep_fn = rep_fn;
      this.str_rep_fn = str_rep_fn;
      this.verbose_handler_fn = verbose_handler_fn;
      this.meta23494 = meta23494;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cognitect.transit.t_cognitect$transit23493.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23495, meta23494__$1) {
      var self__ = this;
      var _23495__$1 = this;
      return new cognitect.transit.t_cognitect$transit23493(self__.tag_fn, self__.rep_fn, self__.str_rep_fn, self__.verbose_handler_fn, meta23494__$1);
    };
    cognitect.transit.t_cognitect$transit23493.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23495) {
      var self__ = this;
      var _23495__$1 = this;
      return self__.meta23494;
    };
    cognitect.transit.t_cognitect$transit23493.prototype.tag = function(o) {
      var self__ = this;
      var _ = this;
      return self__.tag_fn.call(null, o);
    };
    cognitect.transit.t_cognitect$transit23493.prototype.rep = function(o) {
      var self__ = this;
      var _ = this;
      return self__.rep_fn.call(null, o);
    };
    cognitect.transit.t_cognitect$transit23493.prototype.stringRep = function(o) {
      var self__ = this;
      var _ = this;
      if (cljs.core.truth_(self__.str_rep_fn)) {
        return self__.str_rep_fn.call(null, o);
      } else {
        return null;
      }
    };
    cognitect.transit.t_cognitect$transit23493.prototype.getVerboseHandler = function() {
      var self__ = this;
      var _ = this;
      if (cljs.core.truth_(self__.verbose_handler_fn)) {
        return self__.verbose_handler_fn.call(null);
      } else {
        return null;
      }
    };
    cognitect.transit.t_cognitect$transit23493.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag-fn", "tag-fn", 242055482, null), new cljs.core.Symbol(null, "rep-fn", "rep-fn", -1724891035, null), new cljs.core.Symbol(null, "str-rep-fn", "str-rep-fn", -1179615016, null), new cljs.core.Symbol(null, "verbose-handler-fn", "verbose-handler-fn", 547340594, null), new cljs.core.Symbol(null, "meta23494", "meta23494", 977913308, null)], null);
    };
    cognitect.transit.t_cognitect$transit23493.cljs$lang$type = true;
    cognitect.transit.t_cognitect$transit23493.cljs$lang$ctorStr = "cognitect.transit/t_cognitect$transit23493";
    cognitect.transit.t_cognitect$transit23493.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
      return cljs.core._write.call(null, writer__6817__auto__, "cognitect.transit/t_cognitect$transit23493");
    };
    cognitect.transit.__GT_t_cognitect$transit23493 = function cognitect$transit$__GT_t_cognitect$transit23493(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta23494) {
      return new cognitect.transit.t_cognitect$transit23493(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta23494);
    };
  }
  return new cognitect.transit.t_cognitect$transit23493(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.write_handler.cljs$lang$maxFixedArity = 4;
cognitect.transit.tagged_value = function cognitect$transit$tagged_value(tag, rep) {
  return com.cognitect.transit.types.taggedValue.call(null, tag, rep);
};
cognitect.transit.tagged_value_QMARK_ = function cognitect$transit$tagged_value_QMARK_(x) {
  return com.cognitect.transit.types.isTaggedValue.call(null, x);
};
cognitect.transit.integer = function cognitect$transit$integer(s) {
  return com.cognitect.transit.types.intValue.call(null, s);
};
cognitect.transit.integer_QMARK_ = function cognitect$transit$integer_QMARK_(x) {
  return com.cognitect.transit.types.isInteger.call(null, x);
};
cognitect.transit.bigint = function cognitect$transit$bigint(s) {
  return com.cognitect.transit.types.bigInteger.call(null, s);
};
cognitect.transit.bigint_QMARK_ = function cognitect$transit$bigint_QMARK_(x) {
  return com.cognitect.transit.types.isBigInteger.call(null, x);
};
cognitect.transit.bigdec = function cognitect$transit$bigdec(s) {
  return com.cognitect.transit.types.bigDecimalValue.call(null, s);
};
cognitect.transit.bigdec_QMARK_ = function cognitect$transit$bigdec_QMARK_(x) {
  return com.cognitect.transit.types.isBigDecimal.call(null, x);
};
cognitect.transit.uri = function cognitect$transit$uri(s) {
  return com.cognitect.transit.types.uri.call(null, s);
};
cognitect.transit.uri_QMARK_ = function cognitect$transit$uri_QMARK_(x) {
  return com.cognitect.transit.types.isURI.call(null, x);
};
cognitect.transit.uuid = function cognitect$transit$uuid(s) {
  return com.cognitect.transit.types.uuid.call(null, s);
};
cognitect.transit.uuid_QMARK_ = function cognitect$transit$uuid_QMARK_(x) {
  var or__6210__auto__ = com.cognitect.transit.types.isUUID.call(null, x);
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    return x instanceof cljs.core.UUID;
  }
};
cognitect.transit.binary = function cognitect$transit$binary(s) {
  return com.cognitect.transit.types.binary.call(null, s);
};
cognitect.transit.binary_QMARK_ = function cognitect$transit$binary_QMARK_(x) {
  return com.cognitect.transit.types.isBinary.call(null, x);
};
cognitect.transit.quoted = function cognitect$transit$quoted(x) {
  return com.cognitect.transit.types.quoted.call(null, x);
};
cognitect.transit.quoted_QMARK_ = function cognitect$transit$quoted_QMARK_(x) {
  return com.cognitect.transit.types.isQuoted.call(null, x);
};
cognitect.transit.link = function cognitect$transit$link(x) {
  return com.cognitect.transit.types.link.call(null, x);
};
cognitect.transit.link_QMARK_ = function cognitect$transit$link_QMARK_(x) {
  return com.cognitect.transit.types.isLink.call(null, x);
};
goog.provide("fyke.core");
goog.require("cljs.core");
goog.require("fyke.graph");
goog.require("cognitect.transit");
fyke.core.data = cognitect.transit.read.call(null, cognitect.transit.reader.call(null, new cljs.core.Keyword(null, "json", "json", 1279968570)), '["^ ","come",["^ ","~:noun",["~#list",[["time",0.6226077813826313],["alice",0.5806214017078704],["minute",0.5433223562855042],["hand",0.52999894000318],["moment",0.5226167007457295],["room",0.5028011423654931],["foot",0.4976616431135427],["caterpillar",0.47404546313997725],["window",0.47404546313997725],["glass",0.46942763257424514],["head",0.4684573056224134],["rabbit",0.4684573056224134],["ann",0.4620423639315076],["mary",0.4620423639315076],["eye",0.46067415730337086]]],"~:verb",["^2",[["hurry",0.5519998785600402],["eat",0.519561180444343],["peep",0.519561180444343],["sit",0.519445314727137],["grow",0.5104349962146899],["wait",0.5092065106881741],["feel",0.5067759168069629],["change",0.5028011423654931],["meet",0.5028011423654931],["fall",0.4770363159209564],["spread",0.47404546313997725],["stretch",0.47404546313997725],["pull",0.47404546313997725],["wonder",0.46470964717743407],["think",0.4601883601523796]]],"~:adjective",["^2",[["good",0.5473805515039734],["sleepy",0.47404546313997725],["tired",0.47404546313997725],["angry",0.47404546313997725],["afraid",0.46470964717743407],["large",0.45853001832587276]]]],"low",["^ ","^1",["^2",[["voice",0.6335246665953216],["illustration",0.5916079783099616],["alice",0.5504818825631802],["people",0.5303300858899106],["hurry",0.5303300858899106],["court",0.5303300858899106],["tart",0.4999999999999999],["witness",0.4999999999999999],["rabbit",0.49410588440130926],["sort",0.4791574237499549],["time",0.4758668672668006],["king",0.4743416490252569],["white",0.4714045207910317]]],"^3",["^2",[["tremble",0.582222509739582],["talk",0.5345224838248488],["quarrel",0.4999999999999999],["leave",0.4517539514526256]]],"^4",["^2",[["great",0.5486726407127174],["fond",0.4999999999999999],["shrill",0.4999999999999999],["pale",0.4999999999999999],["moral",0.4999999999999999],["curious",0.4743416490252569],["large",0.474152026131801]]]],"stop",["^ ","^1",["^2",[["eye",0.5805847497871377],["room",0.5773502691896257],["foot",0.5042194840896107],["rabbit",0.48412291827592707]]],"^3",["^2",[["fall",0.6162360225133208],["ornament",0.5773502691896257],["stand",0.5163977794943223],["hurry",0.4753826885415284],["think",0.4662524041201569]]],"^4",["^2",[["tired",0.8164965809277259],["late",0.6666666666666666],["bright",0.5847053462046861],["asshe",0.5773502691896257],["footstepsand",0.5773502691896257],["thinkabout",0.5773502691896257],["quiteenough",0.5773502691896257],["grand",0.5773502691896257],["large",0.4645722098118832]]]],"table",["^ ","^1",["^2",[["hall",0.71156806696482],["key",0.7026171689305275],["glass",0.6268346876587848],["door",0.559753305965301],["alice",0.5470305514707786],["garden",0.5378948988811055],["half",0.533676050223615],["child",0.533676050223615],["moment",0.5329551283324001],["pool",0.5224589204868025],["illustration",0.5017870415638235],["head",0.4972233026098313],["rabbit",0.4972233026098313],["tear",0.49041444627368397],["eye",0.48896222381898036],["time",0.4788692116704649],["bit",0.47733437050543803],["white",0.4743787113098801],["hand",0.4500351603704096]]],"^3",["^2",[["look",0.6436375338874891],["walk",0.5809928937741268],["begin",0.5363646115729076],["find",0.5282209558934706],["lose",0.5031546054266276],["trot",0.5031546054266276],["cry",0.4936708860759494],["set",0.47733437050543803],["wonder",0.47733437050543803],["hear",0.47272990876593224]]],"^4",["^2",[["golden",0.7026171689305275],["high",0.6671459726935458],["white",0.6162360225133208],["large",0.582115132514221],["small",0.5712484774591146],["great",0.5413081687180258]]]],"surprised",["^ ","^1",["^2",[["tear",0.7254762501100116],["cake",0.7071067811865475],["english",0.5063696835418332],["pool",0.5063696835418332],["key",0.5063696835418332],["inch",0.4999999999999999],["hall",0.4999999999999999],["half",0.4999999999999999],["top",0.4999999999999999],["glass",0.4517539514526256]]],"^3",["^2",[["lie",0.9999999999999998],["happen",0.7071067811865475],["finish",0.4999999999999999],["forget",0.4999999999999999],["eat",0.4999999999999999]]],"^4",["^2",[["good-by",0.9999999999999998],["lovely",0.7071067811865475],["round",0.5773502691896257],["golden",0.5063696835418332],["poor",0.5063696835418332]]]],"happen",["^ ","^1",["^2",[["cake",0.9999999999999998],["size",0.5773502691896257],["garden",0.5345224838248488],["tear",0.512989176042577],["bill",0.4999999999999999],["door",0.45407660918649984]]],"^3",["^2",[["lie",0.7071067811865475],["eat",0.7071067811865475],["grow",0.5383819020581655],["hold",0.5345224838248488],["tuck",0.4999999999999999],["draw",0.4999999999999999],["drink",0.4999999999999999],["suppose",0.4999999999999999],["shrink",0.4999999999999999]]],"^4",["^2",[["lovely",0.9999999999999998],["safe",0.7071067811865475],["good-by",0.7071067811865475],["shewandered",0.7071067811865475],["thesecond",0.7071067811865475],["surprised",0.7071067811865475],["small",0.582222509739582],["delighted",0.4999999999999999],["general",0.4999999999999999],["sharp",0.4999999999999999]]]],"look",["^ ","^1",["^2",[["moment",0.7373976607709373],["rabbit",0.674199862463242],["duchess",0.6674238124719146],["alice",0.6454972243679028],["table",0.6436375338874891],["foot",0.6231907557303261],["white",0.6030226891555273],["child",0.6030226891555271],["time",0.5843817042692088],["door",0.5808567501533299],["chin",0.5222329678670935],["head",0.514077395128222],["illustration",0.504524979109513],["face",0.4923659639173309],["hand",0.4862659205152521],["hall",0.4673425840955336],["garden",0.46723836348451564],["key",0.45802861241434445],["change",0.4522670168666454],["animal",0.4522670168666454],["bird",0.4522670168666454]]],"^3",["^2",[["think",0.6574294173028599],["drop",0.6030226891555271],["feel",0.5811989399441536],["begin",0.5545454545454546],["hurry",0.5213470758503291],["leave",0.5008341835441227],["walk",0.4923659639173309],["notice",0.4591336287667879],["find",0.45642139856305575],["round",0.4522670168666454]]],"^4",["^2",[["large",0.5903629815353423],["high",0.5749595745760689],["white",0.5222329678670935],["small",0.49652102461936104],["bright",0.4732962328281559],["great",0.46790960017870326],["golden",0.45802861241434445],["poor",0.45802861241434445],["sure",0.4522670168666454]]]],"window",["^ ","^1",["^2",[["chimney",0.8304547985373997],["air",0.7071067811865475],["bill",0.5499999999999999],["mary",0.512989176042577],["ann",0.512989176042577],["bottle",0.4999999999999999],["arm",0.47673129462279606]]],"^3",["^2",[["spread",0.9999999999999998],["sha",0.8164965809277259],["wait",0.7161148740394329],["fall",0.5031546054266276],["prove",0.4999999999999999],["know",0.4999999999999999],["kneel",0.4999999999999999],["help",0.4999999999999999],["pull",0.4999999999999999],["hope",0.4999999999999999],["come",0.47404546313997725]]],"^4",["^2",[["quiteenough",0.7071067811865475],["broken",0.7071067811865475],["yer",0.7071067811865475],["angry",0.5499999999999999],["full",0.5499999999999999],["tired",0.4999999999999999],["tiny",0.4999999999999999]]]],"fan",["^ ","^1",["^2",[["glove",1.0000000000000002],["pair",1.0000000000000002],["mary",0.8094272134003795],["ann",0.8094272134003795],["rabbit",0.47598581911649424],["time",0.45841567112854237]]],"^3",["^2",[["trot",0.8304547985373997],["drop",0.5872202195147035],["hurry",0.45933400317823764],["tremble",0.45933400317823764],["shrink",0.45675013919556984]]],"^4",["^2",[["white",0.6780635036208105],["tosave",0.5872202195147035],["to-day",0.5872202195147035],["aremarkable",0.5872202195147035],["little",0.5872202195147035],["agreat",0.5872202195147035],["quiteenough",0.5872202195147035],["great",0.5181877251716008]]]],"hear",["^ ","^1",["^2",[["alice",0.7177405625652733],["illustration",0.6935779842008158],["cat",0.671094365241449],["moment",0.638306669296326],["silence",0.6063390625908324],["voice",0.6022313946307564],["side",0.5535093034625594],["house",0.5470167438441554],["air",0.5423261445466403],["animal",0.5423261445466403],["eye",0.5362750031916913],["pool",0.5355041604715625],["arm",0.5301725074921697],["head",0.5153882032022076],["rabbit",0.5153882032022076],["duchess",0.5144957554275266],["thing",0.5091212048077888],["minute",0.5084695618284355],["time",0.5036630526336385],["door",0.4962717276383203],["glass",0.47774605861127456],["table",0.47272990876593224],["dinah",0.4696682183138621],["foot",0.46573787123862104],["chimney",0.46177407259139946],["mouse",0.4538776288392988]]],"^3",["^2",[["think",0.5693582334119391],["fall",0.5692054003508163],["tremble",0.5470167438441554],["find",0.5446764934824551],["talk",0.5124500385567423],["begin",0.498728329377893],["cry",0.47272990876593224],["swim",0.4696682183138621]]],"^4",["^2",[["great",0.5693348372115877],["large",0.5091212048077888],["late",0.4696682183138621],["round",0.4696682183138621]]]],"ready",["^ ","^1",["^2",[["creature",0.8164965809277259],["cook",0.4999999999999999],["baby",0.4999999999999999],["dodo",0.4999999999999999],["cat",0.4999999999999999]]],"^3",["^2",[["grunt",0.7071067811865475],["sit",0.5345224838248488],["grin",0.4999999999999999],["hate",0.4999999999999999],["hurt",0.4999999999999999]]],"^4",["^2",[["draggled",0.7071067811865475],["queer-shapedlittle",0.7071067811865475],["loud",0.7071067811865475],["violentlythat",0.7071067811865475],["naturalto",0.7071067811865475],["found",0.4999999999999999],["pale",0.4999999999999999],["wet",0.4999999999999999],["dry",0.4999999999999999]]]],"free",["^ ","^1",["^2",[["serpent",0.9999999999999998],["change",0.7071067811865475],["neck",0.7071067811865475],["mushroom",0.7071067811865475],["pigeon",0.7071067811865475],["deal",0.6324555320336758],["size",0.5773502691896257],["caterpillar",0.4999999999999999]]],"^3",["^2",[["nibble",0.7071067811865475],["work",0.6324555320336758],["grow",0.5383819020581655],["break",0.4999999999999999],["continue",0.4999999999999999],["fly",0.4999999999999999],["mind",0.4999999999999999],["stretch",0.4999999999999999]]],"^4",["^2",[["sulky",0.7071067811865475],["right-hand",0.7071067811865475],["numberof",0.7071067811865475],["raw",0.7071067811865475],["andshe",0.7071067811865475],["good",0.5773502691896257],["usual",0.4999999999999999],["left-hand",0.4999999999999999],["delighted",0.4999999999999999],["sudden",0.4999999999999999],["entangled",0.4999999999999999],["sharp",0.4999999999999999]]]],"forget",["^ ","^1",["^2",[["bottle",0.7071067811865475],["garden",0.5858449331643021],["head",0.5590169943749475],["hall",0.5249999999999999],["key",0.5063696835418332],["air",0.4999999999999999],["inch",0.4999999999999999],["half",0.4999999999999999],["neck",0.4999999999999999],["people",0.4999999999999999],["ear",0.4999999999999999],["minute",0.49262233777688935],["door",0.4816209743009517],["illustration",0.47809144373375745],["glass",0.47434164902525683],["moment",0.4585633803868072],["sort",0.4517539514526256]]],"^3",["^2",[["know",0.7071067811865475],["kneel",0.7071067811865475],["hope",0.7071067811865475],["hurry",0.6175402271944638],["find",0.5822225097395819],["open",0.5669467095138407],["lie",0.4999999999999999],["finish",0.4999999999999999],["leave",0.4791574237499549],["wonder",0.4695742752749558]]],"^4",["^2",[["tiny",0.7071067811865475],["round",0.5773502691896257],["golden",0.5063696835418332],["bright",0.5063696835418332],["nice",0.4999999999999999],["helpless",0.4999999999999999],["quiteenough",0.4999999999999999],["good-by",0.4999999999999999],["alive",0.4999999999999999],["underher",0.4999999999999999],["marked",0.4999999999999999],["surprised",0.4999999999999999],["great",0.47164998007389297]]]],"mad",["^ ","^1",["^2",[["dormouse",0.5773502691896257],["tea",0.5773502691896257],["march",0.5773502691896257],["hare",0.5773502691896257],["hatter",0.5773502691896257],["room",0.4999999999999999],["tree",0.4999999999999999],["direction",0.4999999999999999],["croquet",0.4999999999999999],["people",0.4999999999999999]]],"^3",["^2",[["wave",0.9999999999999998],["grin",0.7071067811865475],["help",0.7071067811865475],["crowd",0.5773502691896257],["guess",0.5773502691896257],["live",0.5773502691896257],["nibble",0.4999999999999999],["remark",0.4999999999999999]]],"^4",["^2",[["satdown",0.9999999999999998],["left-hand",0.7071067811865475],["glad",0.5773502691896257]]]],"fond",["^ ","^1",["^2",[["tone",0.5031546054266276],["hedgehog",0.4999999999999999],["cat",0.4999999999999999]]],"^3",["^2",[["talk",0.5345224838248488],["tuck",0.4999999999999999],["quarrel",0.4999999999999999],["fly",0.4999999999999999],["offend",0.4999999999999999]]],"^4",["^2",[["nicelittle",0.7071067811865475],["helpless",0.7071067811865475],["fancy",0.7071067811865475],["passionate",0.7071067811865475],["alive",0.7071067811865475],["underher",0.7071067811865475],["subject",0.7071067811865475],["moral",0.4999999999999999],["shrill",0.4999999999999999],["low",0.4999999999999999]]]],"ear",["^ ","^1",["^2",[["hedgehog",0.7071067811865475],["people",0.4999999999999999],["direction",0.4999999999999999],["tree",0.4999999999999999],["duchess",0.4743416490252569],["queen",0.4743416490252569],["day",0.4695742752749558],["sort",0.4517539514526256]]],"^3",["^2",[["catch",0.5773502691896257],["jump",0.5773502691896257],["grunt",0.4999999999999999],["forget",0.4999999999999999]]],"^4",["^2",[["underher",0.4999999999999999],["alive",0.4999999999999999],["queer-shapedlittle",0.4999999999999999],["loud",0.4999999999999999],["violentlythat",0.4999999999999999],["helpless",0.4999999999999999],["nice",0.4999999999999999],["hush",0.4999999999999999],["marked",0.4999999999999999]]]],"sharp",["^ ","^1",["^2",[["change",0.7071067811865475],["face",0.5773502691896257],["size",0.5773502691896257],["bill",0.4999999999999999],["cake",0.4999999999999999],["serpent",0.4999999999999999],["caterpillar",0.4999999999999999]]],"^3",["^2",[["eat",0.7071067811865475],["grow",0.5383819020581655],["stretch",0.4999999999999999],["suppose",0.4999999999999999],["mind",0.4999999999999999],["drink",0.4999999999999999],["draw",0.4999999999999999],["fly",0.4999999999999999],["tuck",0.4999999999999999],["break",0.4999999999999999],["shrink",0.4999999999999999],["happen",0.4999999999999999]]],"^4",["^2",[["delighted",0.9999999999999998],["safe",0.7071067811865475],["right-hand",0.7071067811865475],["shewandered",0.7071067811865475],["thesecond",0.7071067811865475],["left-hand",0.4999999999999999],["lovely",0.4999999999999999],["general",0.4999999999999999],["sudden",0.4999999999999999],["free",0.4999999999999999]]]],"begin",["^ ","^1",["^2",[["foot",0.7987374474853475],["duchess",0.6769584383643705],["alice",0.6454972243679028],["croquet",0.6030226891555271],["rabbit",0.5983523779361274],["door",0.5808567501533299],["moment",0.553048245578203],["question",0.5393598899705937],["table",0.5363646115729076],["eye",0.5255475280981654],["illustration",0.504524979109513],["time",0.5032175786762632],["white",0.502518907629606],["minute",0.49829829796592645],["face",0.4923659639173309],["queen",0.4862659205152521],["hand",0.4862659205152521],["garden",0.46723836348451564],["voice",0.46417705225754263],["hall",0.4522670168666454]]],"^3",["^2",[["drop",0.6030226891555271],["look",0.5545454545454546],["find",0.5354174098528154],["live",0.5222329678670935],["move",0.5222329678670935],["run",0.5222329678670935],["think",0.5113339912355577],["hear",0.498728329377893],["notice",0.4591336287667879],["feel",0.45584230583855184],["peep",0.4522670168666454]]],"^4",["^2",[["large",0.5822758174047212],["great",0.5504818825631803],["white",0.5222329678670935],["high",0.47913297881339084]]]],"play",["^ ","^1",["^2",[["soldier",0.7745966692414834],["queen",0.7071067811865475],["croquet",0.6708203932499369],["hedgehog",0.6324555320336758],["sort",0.6060915267313264],["duchess",0.565685424949238],["face",0.5477225575051661],["side",0.5477225575051661],["hearts",0.5163977794943223],["head",0.4999999999999999],["arm",0.4522670168666454]]],"^3",["^2",[["stand",0.7999999999999999],["stamp",0.6324555320336758],["quarrel",0.6324555320336758],["think",0.6019292654288461],["walk",0.5477225575051661],["run",0.5422176684690384],["live",0.5163977794943223],["take",0.5163977794943223],["shout",0.5163977794943223]]],"^4",["^2",[["moral",0.6324555320336758]]]],"thing",["^ ","^1",["^2",[["alice",0.7256136379059805],["illustration",0.6988759143648766],["voice",0.6024663296921114],["mouse",0.5584536718449636],["house",0.5410814859990275],["animal",0.5364417807858202],["round",0.517027634185852],["time",0.5126387196522173],["cat",0.49311810717707305],["day",0.4798081151232538],["question",0.4798081151232538],["tea",0.4645722098118832],["course",0.4645722098118832],["creature",0.4645722098118832],["arm",0.45208621853167075]]],"^3",["^2",[["turn",0.6447744407179492],["cry",0.5725722614893977],["meet",0.5364417807858202],["talk",0.517027634185852],["hear",0.5091212048077888],["think",0.5054184559951438],["let",0.4798081151232538],["reply",0.4798081151232538],["find",0.4763009319058935],["crowd",0.4645722098118832],["speak",0.45208621853167075]]],"^4",["^2",[["afraid",0.5997601439040672],["large",0.5827338129496404],["great",0.4978638086556316],["hard",0.4645722098118832],["small",0.4527416515502067]]]],"white",["^ ","^1",["^2",[["king",0.7453559924999298],["glove",0.6780635036208105],["pair",0.6780635036208105],["fan",0.6780635036208105],["majesty",0.6666666666666666],["court",0.6666666666666666],["head",0.6521864934374386],["queen",0.6324555320336758],["table",0.6162360225133208],["alice",0.5838742081211422],["soldier",0.5773502691896257],["evidence",0.5773502691896257],["hall",0.5773502691896257],["child",0.5773502691896257],["time",0.5383819020581655],["duchess",0.5270462766947298],["voice",0.5131670395438199],["moment",0.5095148670964524],["letter",0.49999999999999994],["knave",0.49999999999999994],["rabbit",0.48412291827592707],["tart",0.4714045207910317],["witness",0.4714045207910317]]],"^3",["^2",[["trot",0.8164965809277259],["read",0.6666666666666666],["ornament",0.5773502691896257],["drop",0.5773502691896257],["shout",0.5773502691896257],["begin",0.5222329678670935],["look",0.5222329678670935],["write",0.4714045207910317],["carry",0.4714045207910317],["lose",0.4714045207910317],["execute",0.4714045207910317],["stamp",0.4714045207910317],["walk",0.4714045207910317],["stand",0.46212071534995647]]],"^4",["^2",[["curious",0.5962847939999438],["grand",0.5773502691896257],["agreat",0.5773502691896257],["little",0.5773502691896257],["aremarkable",0.5773502691896257],["footstepsand",0.5773502691896257],["to-day",0.5773502691896257],["asshe",0.5773502691896257],["tosave",0.5773502691896257],["high",0.5504818825631803],["dark",0.4714045207910317],["low",0.4714045207910317],["large",0.4559755136679471]]]],"deal",["^ ","^1",["^2",[["change",0.6708203932499369],["serpent",0.6324555320336758],["hand",0.565685424949238],["size",0.5477225575051661],["garden",0.5239956379316802],["foot",0.5207556439232954],["english",0.45291081365783825]]],"^3",["^2",[["continue",0.6324555320336758],["work",0.5999999999999999],["find",0.5207556439232954],["frighten",0.5163977794943223],["ask",0.5163977794943223],["grow",0.5107539184552492],["hold",0.5070925528371099],["speak",0.4522670168666454]]],"^4",["^2",[["good",0.7302967433402214],["free",0.6324555320336758],["usual",0.6324555320336758],["poor",0.45291081365783825]]]],"mouse",["^ ","^1",["^2",[["party",0.8164965809277259],["english",0.6201736729460422],["pool",0.6201736729460422],["cat",0.5917840259193663],["dodo",0.5773502691896257],["thing",0.5584536718449636],["illustration",0.48795003647426655],["round",0.47834038488248487],["alice",0.4767312946227961],["course",0.4714045207910317],["dinah",0.4714045207910317]]],"^3",["^2",[["swim",0.7071067811865475],["talk",0.6326437348445767],["offend",0.5773502691896257],["hate",0.5773502691896257],["call",0.5773502691896257],["tremble",0.5042194840896107],["move",0.4714045207910317],["crowd",0.4714045207910317],["beg",0.4714045207910317],["hear",0.4538776288392988]]],"^4",["^2",[["found",0.5773502691896257],["wet",0.5773502691896257],["dry",0.5773502691896257],["afraid",0.5659799760886717]]]],"wonder",["^ ","^1",["^2",[["glass",0.8081220356417685],["hall",0.6708203932499369],["garden",0.5070925528371099],["time",0.48154341234307685],["table",0.47733437050543803],["neck",0.4695742752749558],["inch",0.4695742752749558],["key",0.45291081365783825],["pool",0.45291081365783825]]],"^3",["^2",[["lose",0.6324555320336758],["hurry",0.552344770738994],["hold",0.5070925528371099],["forget",0.4695742752749558],["come",0.46470964717743407]]],"^4",["^2",[["angry",0.6324555320336758],["good",0.5659799760886717],["golden",0.45291081365783825]]]],"shrill",["^ ","^1",["^2",[["hurry",0.7071067811865475],["tone",0.5031546054266276],["witness",0.4999999999999999]]],"^3",["^2",[["tremble",0.582222509739582],["cry",0.5031546054266276],["offend",0.4999999999999999],["write",0.4999999999999999]]],"^4",["^2",[["passionate",0.7071067811865475],["proper",0.7071067811865475],["fancy",0.7071067811865475],["nicelittle",0.7071067811865475],["subject",0.7071067811865475],["fond",0.4999999999999999],["pale",0.4999999999999999],["low",0.4999999999999999]]]],"chin",["^ ","^1",["^2",[["animal",0.5773502691896257],["moment",0.5295033822136559],["side",0.49497474683058323]]],"^3",["^2",[["speak",0.5838742081211422],["steal",0.5773502691896257],["round",0.5773502691896257],["look",0.5222329678670935],["think",0.4662524041201569]]],"^4",["^2",[["sudden",0.8164965809277259],["poor",0.5847053462046861],["fair",0.5773502691896257],["french",0.5773502691896257],["right-hand",0.5773502691896257],["shebegan",0.5773502691896257],["toomuch",0.5773502691896257]]]],"sleepy",["^ ","^1",["^2",[["mind",0.8164965809277259],["caterpillar",0.4999999999999999],["eye",0.47404546313997725]]],"^3",["^2",[["remember",0.8164965809277259],["peep",0.7071067811865475],["sit",0.5345224838248488],["produce",0.4999999999999999],["draw",0.4999999999999999],["stretch",0.4999999999999999],["sir",0.4999999999999999],["come",0.47404546313997725]]],"^4",["^2",[["thinkabout",0.7071067811865475],["iused",0.7071067811865475],["dark",0.5499999999999999],["tired",0.4999999999999999]]]],"top",["^ ","^1",["^2",[["jury",0.5773502691896257],["evidence",0.5773502691896257],["letter",0.5249999999999999],["court",0.4999999999999999],["majesty",0.4999999999999999]]],"^3",["^2",[["write",0.7071067811865475],["lie",0.4999999999999999],["sign",0.4999999999999999],["read",0.4999999999999999],["turn",0.45643546458763834]]],"^4",["^2",[["good-by",0.4999999999999999],["iused",0.4999999999999999],["proper",0.4999999999999999],["dead",0.4999999999999999],["surprised",0.4999999999999999]]]],"court",["^ ","^1",["^2",[["king",0.8944271909999159],["evidence",0.8660254037844386],["majesty",0.7499999999999999],["tart",0.7071067811865475],["witness",0.7071067811865475],["white",0.6666666666666666],["queen",0.6324555320336758],["jury",0.5773502691896257],["rabbit",0.5590169943749475],["voice",0.5047544651250687],["trial",0.4999999999999999],["letter",0.4999999999999999],["knave",0.4999999999999999],["top",0.4999999999999999]]],"^3",["^2",[["read",0.7499999999999999],["write",0.7071067811865475],["shout",0.5773502691896257],["steal",0.4999999999999999],["give",0.4999999999999999],["sign",0.4999999999999999],["leave",0.4791574237499549]]],"^4",["^2",[["low",0.5303300858899106],["proper",0.4999999999999999],["fair",0.4999999999999999],["dead",0.4999999999999999],["first",0.4999999999999999],["toomuch",0.4999999999999999]]]],"hatter",["^ ","^1",["^2",[["hare",1.0],["march",1.0],["dormouse",1.0],["tea",0.6666666666666666],["people",0.5773502691896257]]],"^3",["^2",[["guess",0.6666666666666666],["wave",0.5773502691896257],["give",0.5773502691896257],["remark",0.5773502691896257],["reply",0.5163977794943223]]],"^4",["^2",[["asleep",0.5773502691896257],["satdown",0.5773502691896257],["first",0.5773502691896257],["mad",0.5773502691896257]]]],"tired",["^ ","^1",["^2",[["room",0.7071067811865475],["mary",0.512989176042577],["ann",0.512989176042577],["bottle",0.4999999999999999],["window",0.4999999999999999],["eye",0.47404546313997725]]],"^3",["^2",[["stop",0.8164965809277259],["hurry",0.582222509739582],["fall",0.5031546054266276],["spread",0.4999999999999999],["prove",0.4999999999999999],["know",0.4999999999999999],["kneel",0.4999999999999999],["produce",0.4999999999999999],["hope",0.4999999999999999],["come",0.47404546313997725]]],"^4",["^2",[["late",0.8164965809277259],["thinkabout",0.7071067811865475],["quiteenough",0.7071067811865475],["sleepy",0.4999999999999999],["tiny",0.4999999999999999],["full",0.4999999999999999],["dark",0.4999999999999999]]]],"call",["^ ","^1",["^2",[["mouse",0.5773502691896257],["alice",0.5504818825631802],["voice",0.5442958403142903],["party",0.5303300858899106],["illustration",0.50709255283711],["tone",0.5031546054266276],["dodo",0.4999999999999999],["witness",0.4999999999999999],["minute",0.47193990372426947]]],"^3",["^2",[["turn",0.5486726407127174],["meet",0.5480077554195742],["sit",0.5345224838248488],["hate",0.4999999999999999],["execute",0.4999999999999999],["sneeze",0.4999999999999999],["leave",0.4517539514526256]]],"^4",["^2",[["found",0.4999999999999999],["pale",0.4999999999999999],["wet",0.4999999999999999],["dry",0.4999999999999999],["large",0.48363506665443706],["high",0.4607032393498821]]]],"shout",["^ ","^1",["^2",[["soldier",0.6666666666666666],["knave",0.5773502691896257],["court",0.5773502691896257],["white",0.5773502691896257],["queen",0.5477225575051661],["day",0.5163977794943223],["king",0.5163977794943223],["silence",0.5163977794943223],["head",0.48412291827592707],["rabbit",0.48412291827592707]]],"^3",["^2",[["stamp",0.8164965809277259],["steal",0.5773502691896257],["sign",0.5773502691896257],["read",0.5773502691896257],["let",0.5163977794943223],["play",0.5163977794943223],["stand",0.5163977794943223]]],"^4",["^2",[["fair",0.5773502691896257],["dead",0.5773502691896257],["toomuch",0.5773502691896257],["hush",0.5773502691896257]]]],"creature",["^ ","^1",["^2",[["animal",0.5773502691896257],["silence",0.5163977794943223],["day",0.5163977794943223],["time",0.4662524041201569],["thing",0.4645722098118832]]],"^3",["^2",[["steal",0.5773502691896257],["grunt",0.5773502691896257],["let",0.5163977794943223],["tremble",0.4753826885415284]]],"^4",["^2",[["ready",0.8164965809277259],["draggled",0.5773502691896257],["queer-shapedlittle",0.5773502691896257],["loud",0.5773502691896257],["violentlythat",0.5773502691896257],["naturalto",0.5773502691896257],["fair",0.5773502691896257],["toomuch",0.5773502691896257],["large",0.4645722098118832]]]],"high",["^ ","^1",["^2",[["table",0.6671459726935458],["inch",0.6356417261637282],["hall",0.6356417261637282],["pool",0.6276459144608478],["key",0.6276459144608478],["alice",0.6123724356957945],["door",0.6020721620072499],["illustration",0.6001923693540933],["glass",0.5743073230052641],["moment",0.5732479700402708],["foot",0.555127381653369],["head",0.533001790889026],["garden",0.4804999801042981],["letter",0.4767312946227961],["child",0.4767312946227961],["hurry",0.4767312946227961],["english",0.466711064599092],["rabbit",0.45305152225567213]]],"^3",["^2",[["look",0.5749595745760689],["find",0.5643795046809251],["swim",0.5504818825631803],["frighten",0.5504818825631803],["shut",0.5504818825631803],["open",0.4925124796069056],["begin",0.47913297881339084],["lead",0.4767312946227961],["fall",0.4636099132277183],["call",0.4607032393498821]]],"^4",["^2",[["golden",0.6276459144608478],["great",0.5802588531856595],["white",0.5504818825631803],["large",0.5200017887756906],["small",0.5102946367862587],["poor",0.466711064599092]]]],"witness",["^ ","^1",["^2",[["evidence",0.8164965809277259],["court",0.7071067811865475],["majesty",0.7071067811865475],["king",0.6324555320336758],["tart",0.4999999999999999],["cook",0.4999999999999999],["white",0.4714045207910317]]],"^3",["^2",[["give",0.7071067811865475],["mind",0.4999999999999999],["execute",0.4999999999999999],["write",0.4999999999999999],["sneeze",0.4999999999999999],["carry",0.4999999999999999],["call",0.4999999999999999],["leave",0.4517539514526256]]],"^4",["^2",[["proper",0.7071067811865475],["first",0.7071067811865475],["shrill",0.4999999999999999],["pale",0.4999999999999999],["low",0.4999999999999999]]]],"talk",["^ ","^1",["^2",[["cat",0.6681531047810609],["mouse",0.6326437348445767],["illustration",0.5421047417431508],["thing",0.517027634185852],["alice",0.5149286505444371]]],"^3",["^2",[["hate",0.5345224838248488],["offend",0.5345224838248488],["hear",0.5124500385567423]]],"^4",["^2",[["fond",0.5345224838248488],["low",0.5345224838248488],["afraid",0.5070925528371099],["small",0.46681653306710785],["round",0.45825756949558394]]]],"silence",["^ ","^1",["^2",[["animal",0.6708203932499369],["bill",0.6324555320336758],["voice",0.5643326479831002],["chimney",0.5252257314388902],["creature",0.5163977794943223],["rabbit",0.4999999999999999],["air",0.4695742752749558],["arm",0.4522670168666454]]],"^3",["^2",[["suppose",0.6324555320336758],["hear",0.6063390625908324],["let",0.5999999999999999],["shout",0.5163977794943223],["hold",0.5070925528371099],["wait",0.45291081365783825]]],"^4",["^2",[["general",0.6324555320336758],["hard",0.5163977794943223]]]],"hurry",["^ ","^1",["^2",[["time",0.6538625481582945],["hall",0.6175402271944638],["moment",0.6167060164999725],["bottle",0.582222509739582],["ann",0.5674803065350239],["mary",0.5674803065350239],["glass",0.5579524756321023],["bit",0.552344770738994],["door",0.5155285648784764],["change",0.4999999999999999],["mind",0.4991518229686048],["illustration",0.48222647467902047],["dinah",0.4753826885415284],["alice",0.47274184126735436],["glove",0.45933400317823764],["pair",0.45933400317823764],["fan",0.45933400317823764],["cat",0.45122244504817605]]],"^3",["^2",[["feel",0.6224220440894771],["forget",0.6175402271944638],["know",0.582222509739582],["lose",0.582222509739582],["kneel",0.582222509739582],["hope",0.582222509739582],["frighten",0.5773502691896257],["wonder",0.552344770738994],["come",0.5519998785600402],["look",0.5213470758503291],["leave",0.5128915728290658],["change",0.4999999999999999],["notice",0.48585999643274613],["sit",0.48237708416934477],["jump",0.4753826885415284],["stop",0.4753826885415284],["open",0.46681653306710785]]],"^4",["^2",[["shrill",0.7071067811865475],["dark",0.582222509739582],["tiny",0.582222509739582],["tired",0.582222509739582],["large",0.5521239653051301],["low",0.5303300858899106],["nicelittle",0.4999999999999999],["right-hand",0.4999999999999999],["fancy",0.4999999999999999],["agreat",0.4999999999999999],["proper",0.4999999999999999],["passionate",0.4999999999999999],["to-day",0.4999999999999999],["tosave",0.4999999999999999],["subject",0.4999999999999999],["great",0.48856991820183876],["high",0.4767312946227961],["late",0.4753826885415284]]]],"find",["^ ","^1",["^2",[["alice",0.6685579234215214],["round",0.6601782722034923],["garden",0.6601782722034923],["head",0.6428077479678178],["foot",0.5847457627118644],["minute",0.555127381653369],["illustration",0.5427934204985924],["table",0.5282209558934706],["question",0.5207556439232954],["bit",0.5207556439232954],["deal",0.5207556439232954],["voice",0.5069419848157268],["rabbit",0.480071609241788],["thing",0.4763009319058935],["door",0.4580039349211806],["hall",0.451222445048176]]],"^3",["^2",[["forget",0.5822225097395819],["open",0.5501485601695769],["hear",0.5446764934824551],["begin",0.5354174098528154],["turn",0.522635770061855],["set",0.5207556439232954],["crowd",0.5042194840896107],["speak",0.48085456158705153],["think",0.4701870933220125],["look",0.45642139856305575],["leave",0.45566118843288356]]],"^4",["^2",[["bright",0.5748986646151399],["high",0.5643795046809251],["large",0.546574839892009],["great",0.522635770061855],["hard",0.5042194840896107],["round",0.5042194840896107],["glad",0.5042194840896107],["small",0.4793944279230831]]]],"bill",["^ ","^1",["^2",[["chimney",0.8304547985373997],["silence",0.6324555320336758],["window",0.5499999999999999],["cake",0.4999999999999999],["arm",0.47673129462279606]]],"^3",["^2",[["wait",0.7161148740394329],["spread",0.5499999999999999],["hold",0.5345224838248488],["suppose",0.4999999999999999],["drink",0.4999999999999999],["help",0.4999999999999999],["draw",0.4999999999999999],["tuck",0.4999999999999999],["pull",0.4999999999999999],["shrink",0.4999999999999999],["happen",0.4999999999999999]]],"^4",["^2",[["safe",0.7071067811865475],["sure",0.7071067811865475],["shewandered",0.7071067811865475],["thesecond",0.7071067811865475],["yer",0.7071067811865475],["broken",0.7071067811865475],["long",0.5383819020581655],["delighted",0.4999999999999999],["lovely",0.4999999999999999],["angry",0.4999999999999999],["general",0.4999999999999999],["sharp",0.4999999999999999]]]],"bit",["^ ","^1",["^2",[["direction",0.6708203932499369],["inch",0.6708203932499369],["table",0.47733437050543803],["key",0.45291081365783825]]],"^3",["^2",[["set",0.7999999999999999],["open",0.6761234037828132],["grin",0.6324555320336758],["work",0.5999999999999999],["hurry",0.552344770738994],["find",0.5207556439232954],["jump",0.5163977794943223],["feel",0.5070925528371099],["cry",0.47733437050543803],["speak",0.4522670168666454]]],"^4",["^2",[["left-hand",0.6324555320336758],["large",0.4798081151232538],["golden",0.45291081365783825],["poor",0.45291081365783825]]]],"bird",["^ ","^1",["^2",[["half",0.4999999999999999],["animal",0.4999999999999999],["trial",0.4999999999999999],["duchess",0.4743416490252569],["moment",0.4585633803868072]]],"^3",["^2",[["suppose",0.7071067811865475],["move",0.5773502691896257],["steal",0.4999999999999999],["eat",0.4999999999999999],["look",0.4522670168666454]]],"^4",["^2",[["toomuch",0.4999999999999999],["safe",0.4999999999999999],["sure",0.4999999999999999],["fair",0.4999999999999999],["little",0.4999999999999999],["onea-piece",0.4999999999999999],["shewandered",0.4999999999999999],["aremarkable",0.4999999999999999],["thesecond",0.4999999999999999],["sad",0.4999999999999999],["great",0.45643546458763834]]]],"illustration",["^ ","^1",["^2",[["alice",0.814173684098662],["voice",0.7118904333399787],["thing",0.6988759143648766],["tone",0.6718843437888484],["time",0.637054557566909],["moment",0.6357821628604264],["door",0.5909977584690689],["head",0.5879747322073337],["eye",0.5528853253483527],["foot",0.5427934204985924],["garden",0.5421047417431508],["duchess",0.5291502622129182],["sort",0.529150262212918],["rabbit",0.5278409527770381],["minute",0.5242186517143346],["cat",0.50709255283711],["table",0.5017870415638235],["size",0.48795003647426655],["side",0.48795003647426655],["mouse",0.48795003647426655],["wood",0.47809144373375745],["party",0.47809144373375745],["animal",0.47809144373375745],["arm",0.47543554877497435],["english",0.4720774754816659],["pool",0.4720774754816659]]],"^3",["^2",[["hear",0.6935779842008158],["notice",0.6279217421667403],["tremble",0.5806400409400451],["think",0.5727056123581303],["turn",0.5673665146135802],["find",0.5427934204985924],["talk",0.5421047417431508],["leave",0.5192504128584245],["fall",0.5102919066750747],["call",0.50709255283711],["begin",0.504524979109513],["look",0.504524979109513],["cry",0.5017870415638235],["walk",0.48795003647426655],["hurry",0.48222647467902047],["lead",0.47809144373375745],["forget",0.47809144373375745],["open",0.45175395145262565],["sit",0.45175395145262565]]],"^4",["^2",[["great",0.7855844048495726],["high",0.6001923693540933],["low",0.5916079783099616],["large",0.5706418016373763],["small",0.48222647467902047]]]],"solemn",["^ ","^1",["^2",[["baby",0.7071067811865475],["letter",0.4999999999999999],["wood",0.4999999999999999],["inch",0.4999999999999999],["croquet",0.4999999999999999],["sort",0.4517539514526256]]],"^3",["^2",[["knock",0.9999999999999998],["produce",0.7071067811865475],["break",0.7071067811865475],["sneeze",0.7071067811865475],["live",0.5773502691896257],["ask",0.5773502691896257],["frighten",0.5773502691896257],["run",0.5773502691896257],["lead",0.4999999999999999],["peep",0.4999999999999999]]],"^4",["^2",[["open",0.9999999999999998],["lowand",0.9999999999999998],["three-legged",0.9999999999999998],["entangled",0.7071067811865475],["full",0.7071067811865475]]]],"reply",["^ ","^1",["^2",[["caterpillar",0.6324555320336758],["tea",0.5163977794943223],["hare",0.5163977794943223],["march",0.5163977794943223],["course",0.5163977794943223],["dormouse",0.5163977794943223],["hatter",0.5163977794943223],["thing",0.4798081151232538]]],"^3",["^2",[["remark",0.6708203932499369],["stretch",0.6324555320336758],["open",0.5239956379316802],["crowd",0.5163977794943223],["guess",0.5163977794943223],["ask",0.5163977794943223],["round",0.4695742752749558]]],"^4",["^2",[["offended",0.6324555320336758],["easy",0.6324555320336758],["left-hand",0.6324555320336758]]]],"bottle",["^ ","^1",["^2",[["neck",0.7071067811865475],["round",0.5345224838248488],["mary",0.512989176042577],["ann",0.512989176042577],["window",0.4999999999999999],["door",0.45407660918649984]]],"^3",["^2",[["know",0.9999999999999998],["kneel",0.9999999999999998],["hope",0.9999999999999998],["forget",0.7071067811865475],["hurry",0.582222509739582],["lose",0.5499999999999999],["drink",0.5499999999999999],["open",0.5345224838248488],["spread",0.4999999999999999],["prove",0.4999999999999999]]],"^4",["^2",[["tiny",0.9999999999999998],["bright",0.7161148740394329],["quiteenough",0.7071067811865475],["nice",0.7071067811865475],["marked",0.7071067811865475],["tired",0.4999999999999999],["hot",0.4999999999999999],["full",0.4999999999999999],["dark",0.4999999999999999]]]],"side",["^ ","^1",["^2",[["moment",0.6240257203741472],["inch",0.6123724356957945],["sort",0.5532833351724881],["minute",0.518999296107682],["duchess",0.5163977794943223],["size",0.49999999999999994],["chin",0.49497474683058323],["illustration",0.48795003647426655],["foot",0.4872672557550666],["alice",0.4767312946227961],["head",0.45643546458763834]]],"^3",["^2",[["fly",0.5773502691896257],["produce",0.5773502691896257],["quarrel",0.5773502691896257],["break",0.5773502691896257],["think",0.560473402386419],["hear",0.5535093034625594],["speak",0.5504818825631802],["play",0.5477225575051661],["leave",0.5216405309573011],["ask",0.49497474683058323],["frighten",0.4714045207910317],["open",0.46291004988627565],["feel",0.46291004988627565],["sit",0.46291004988627565]]],"^4",["^2",[["moral",0.5773502691896257],["round",0.4714045207910317]]]],"dry",["^ ","^1",["^2",[["dodo",0.9999999999999998],["course",0.8164965809277259],["english",0.7161148740394329],["party",0.7071067811865475],["question",0.6324555320336758],["mouse",0.5773502691896257],["round",0.5345224838248488]]],"^3",["^2",[["crowd",0.8164965809277259],["continue",0.4999999999999999],["hate",0.4999999999999999],["call",0.4999999999999999]]],"^4",["^2",[["found",0.9999999999999998],["wet",0.9999999999999998],["draggled",0.7071067811865475],["naturalto",0.7071067811865475],["ready",0.4999999999999999],["offended",0.4999999999999999],["easy",0.4999999999999999],["pale",0.4999999999999999]]]],"peep",["^ ","^1",["^2",[["mind",0.5773502691896257],["eye",0.5028011423654931],["croquet",0.4999999999999999],["minute",0.4767312946227961],["duchess",0.4743416490252569]]],"^3",["^2",[["produce",0.7071067811865475],["remember",0.5773502691896257],["live",0.5773502691896257],["run",0.5773502691896257],["sit",0.5669467095138407],["come",0.519561180444343],["knock",0.4999999999999999],["begin",0.4522670168666454]]],"^4",["^2",[["sleepy",0.7071067811865475],["open",0.4999999999999999],["thinkabout",0.4999999999999999],["iused",0.4999999999999999],["lowand",0.4999999999999999],["three-legged",0.4999999999999999],["solemn",0.4999999999999999],["hush",0.4999999999999999]]]],"child",["^ ","^1",["^2",[["table",0.533676050223615],["cat",0.5303300858899106],["hall",0.5249999999999999],["key",0.5063696835418332],["pool",0.5063696835418332],["door",0.4816209743009517],["glass",0.4517539514526256]]],"^3",["^2",[["hurt",0.7071067811865475],["look",0.6030226891555271],["swim",0.5773502691896257],["ornament",0.4999999999999999],["grunt",0.4999999999999999],["work",0.4695742752749558],["set",0.4695742752749558]]],"^4",["^2",[["white",0.5773502691896257],["golden",0.5063696835418332],["grand",0.4999999999999999],["shebegan",0.4999999999999999],["sure",0.4999999999999999],["french",0.4999999999999999],["little",0.4999999999999999],["violentlythat",0.4999999999999999],["loud",0.4999999999999999],["queer-shapedlittle",0.4999999999999999],["aremarkable",0.4999999999999999],["footstepsand",0.4999999999999999],["asshe",0.4999999999999999],["high",0.4767312946227961]]]],"offended",["^ ","^1",["^2",[["course",0.8164965809277259],["tone",0.5031546054266276],["dodo",0.4999999999999999]]],"^3",["^2",[["reply",0.6324555320336758],["notice",0.5383819020581655],["continue",0.4999999999999999],["waste",0.4999999999999999]]],"^4",["^2",[["easy",0.9999999999999998],["asleep",0.7071067811865475],["hot",0.4999999999999999],["found",0.4999999999999999],["wet",0.4999999999999999],["dry",0.4999999999999999]]]],"hare",["^ ","^1",["^2",[["march",1.0],["dormouse",1.0],["hatter",1.0],["tea",0.6666666666666666],["people",0.5773502691896257]]],"^3",["^2",[["guess",0.6666666666666666],["wave",0.5773502691896257],["give",0.5773502691896257],["remark",0.5773502691896257],["reply",0.5163977794943223]]],"^4",["^2",[["asleep",0.5773502691896257],["satdown",0.5773502691896257],["first",0.5773502691896257],["mad",0.5773502691896257]]]],"shut",["^ ","^1",["^2",[["rate",0.7745966692414834],["key",0.5847053462046861],["letter",0.5773502691896257],["glass",0.5216405309573011],["idea",0.4714045207910317]]],"^3",["^2",[["beg",0.6666666666666666],["jump",0.6666666666666666]]],"^4",["^2",[["golden",0.5847053462046861],["proper",0.5773502691896257],["french",0.5773502691896257],["nice",0.5773502691896257],["shebegan",0.5773502691896257],["marked",0.5773502691896257],["high",0.5504818825631803],["small",0.4753826885415284]]]],"long",["^ ","^1",["^2",[["round",0.589943324645678],["bill",0.5383819020581655],["alice",0.5112373581455452],["idea",0.4662524041201569]]],"^3",["^2",[["meet",0.5900749154108327],["turn",0.5676225715998147],["pull",0.5383819020581655],["draw",0.5383819020581655],["drink",0.5383819020581655]]],"^4",["^2",[["bright",0.5783149319662402],["small",0.4701870933220124]]]],"jury",["^ ","^1",["^2",[["evidence",0.6666666666666666],["top",0.5773502691896257],["letter",0.5773502691896257],["court",0.5773502691896257],["majesty",0.5773502691896257],["trial",0.5773502691896257],["king",0.5163977794943223],["idea",0.4714045207910317]]],"^3",["^2",[["write",0.8164965809277259],["beg",0.6666666666666666],["sign",0.5773502691896257],["read",0.5773502691896257],["turn",0.5270462766947299],["let",0.5163977794943223]]],"^4",["^2",[["onea-piece",0.5773502691896257],["proper",0.5773502691896257],["dead",0.5773502691896257],["sad",0.5773502691896257]]]],"hot",["^ ","^1",["^2",[["rate",0.6324555320336758],["idea",0.5773502691896257],["bottle",0.4999999999999999],["door",0.45407660918649984]]],"^3",["^2",[["lead",0.7071067811865475],["walk",0.5773502691896257],["notice",0.5383819020581655],["open",0.5345224838248488],["waste",0.4999999999999999],["know",0.4999999999999999],["lose",0.4999999999999999],["kneel",0.4999999999999999],["drink",0.4999999999999999],["hope",0.4999999999999999]]],"^4",["^2",[["asleep",0.7071067811865475],["nice",0.7071067811865475],["marked",0.7071067811865475],["alittle",0.7071067811865475],["offended",0.4999999999999999],["tiny",0.4999999999999999],["easy",0.4999999999999999],["dark",0.4999999999999999]]]],"hush",["^ ","^1",["^2",[["hedgehog",0.7071067811865475],["soldier",0.5773502691896257],["ear",0.4999999999999999],["direction",0.4999999999999999],["croquet",0.4999999999999999]]],"^3",["^2",[["stamp",0.7071067811865475],["live",0.5773502691896257],["run",0.5773502691896257],["shout",0.5773502691896257],["wait",0.5063696835418332],["peep",0.4999999999999999]]],"^4",["^2",[["timid",0.7071067811865475]]]],"tiny",["^ ","^1",["^2",[["bottle",0.9999999999999998],["neck",0.7071067811865475],["round",0.5345224838248488],["mary",0.512989176042577],["ann",0.512989176042577],["window",0.4999999999999999],["door",0.45407660918649984]]],"^3",["^2",[["know",0.9999999999999998],["kneel",0.9999999999999998],["hope",0.9999999999999998],["forget",0.7071067811865475],["hurry",0.582222509739582],["lose",0.5499999999999999],["drink",0.5499999999999999],["open",0.5345224838248488],["spread",0.4999999999999999],["prove",0.4999999999999999]]],"^4",["^2",[["bright",0.7161148740394329],["quiteenough",0.7071067811865475],["nice",0.7071067811865475],["marked",0.7071067811865475],["tired",0.4999999999999999],["hot",0.4999999999999999],["full",0.4999999999999999],["dark",0.4999999999999999]]]],"key",["^ ","^1",["^2",[["hall",0.7595545253127499],["table",0.7026171689305275],["tear",0.6979824404521127],["glass",0.6633880657639324],["door",0.6340834768940941],["garden",0.5741692517632145],["eye",0.5092065106881741],["inch",0.5063696835418332],["half",0.5063696835418332],["child",0.5063696835418332],["english",0.48717948717948717],["pool",0.48717948717948717],["rate",0.45291081365783825],["bit",0.45291081365783825]]],"^3",["^2",[["shut",0.5847053462046861],["fall",0.5224589204868025],["lie",0.5063696835418332],["ornament",0.5063696835418332],["finish",0.5063696835418332],["forget",0.5063696835418332],["look",0.45802861241434445],["set",0.45291081365783825],["work",0.45291081365783825],["wonder",0.45291081365783825]]],"^4",["^2",[["golden",1.0],["high",0.6276459144608478],["small",0.6045603888763706],["bright",0.5128205128205128],["grand",0.5063696835418332],["shebegan",0.5063696835418332],["nice",0.5063696835418332],["french",0.5063696835418332],["good-by",0.5063696835418332],["footstepsand",0.5063696835418332],["asshe",0.5063696835418332],["alittle",0.5063696835418332],["marked",0.5063696835418332],["surprised",0.5063696835418332],["poor",0.48717948717948717],["curious",0.45291081365783825]]]],"serpent",["^ ","^1",["^2",[["change",0.7071067811865475],["neck",0.7071067811865475],["mushroom",0.7071067811865475],["pigeon",0.7071067811865475],["deal",0.6324555320336758],["size",0.5773502691896257],["caterpillar",0.4999999999999999]]],"^3",["^2",[["nibble",0.7071067811865475],["work",0.6324555320336758],["grow",0.5383819020581655],["break",0.4999999999999999],["continue",0.4999999999999999],["fly",0.4999999999999999],["mind",0.4999999999999999],["stretch",0.4999999999999999]]],"^4",["^2",[["free",0.9999999999999998],["sulky",0.7071067811865475],["right-hand",0.7071067811865475],["numberof",0.7071067811865475],["raw",0.7071067811865475],["andshe",0.7071067811865475],["good",0.5773502691896257],["usual",0.4999999999999999],["left-hand",0.4999999999999999],["delighted",0.4999999999999999],["sudden",0.4999999999999999],["entangled",0.4999999999999999],["sharp",0.4999999999999999]]]],"glass",["^ ","^1",["^2",[["hall",0.6776309271789384],["pool",0.6633880657639324],["key",0.6633880657639324],["table",0.6268346876587848],["tear",0.622699849077239],["rate",0.6060915267313264],["door",0.5801978086477824],["moment",0.5524208508832363],["time",0.48643230329071346],["inch",0.47434164902525683],["half",0.4517539514526256],["child",0.4517539514526256]]],"^3",["^2",[["wonder",0.8081220356417685],["lose",0.6388765649999398],["hurry",0.5579524756321023],["swim",0.5216405309573011],["shut",0.5216405309573011],["fall",0.482180528968296],["hear",0.47774605861127456],["forget",0.47434164902525683],["come",0.46942763257424514],["lie",0.4517539514526256],["finish",0.4517539514526256]]],"^4",["^2",[["golden",0.6633880657639324],["angry",0.6388765649999398],["high",0.5743073230052641],["small",0.5393540597776989],["shebegan",0.4517539514526256],["nice",0.4517539514526256],["sure",0.4517539514526256],["french",0.4517539514526256],["little",0.4517539514526256],["good-by",0.4517539514526256],["aremarkable",0.4517539514526256],["yer",0.4517539514526256],["broken",0.4517539514526256],["marked",0.4517539514526256],["surprised",0.4517539514526256]]]],"hard",["^ ","^1",["^2",[["question",0.7745966692414834],["change",0.5773502691896257],["animal",0.5773502691896257],["silence",0.5163977794943223],["thing",0.4645722098118832]]],"^3",["^2",[["shrink",0.8164965809277259],["find",0.5042194840896107]]],"^4",["^2",[["tosave",0.5773502691896257],["thesecond",0.5773502691896257],["to-day",0.5773502691896257],["draggled",0.5773502691896257],["shewandered",0.5773502691896257],["naturalto",0.5773502691896257],["agreat",0.5773502691896257],["safe",0.5773502691896257],["small",0.4753826885415284]]]],"found",["^ ","^1",["^2",[["dodo",0.9999999999999998],["course",0.8164965809277259],["english",0.7161148740394329],["party",0.7071067811865475],["question",0.6324555320336758],["mouse",0.5773502691896257],["round",0.5345224838248488]]],"^3",["^2",[["crowd",0.8164965809277259],["continue",0.4999999999999999],["hate",0.4999999999999999],["call",0.4999999999999999]]],"^4",["^2",[["wet",0.9999999999999998],["dry",0.9999999999999998],["draggled",0.7071067811865475],["naturalto",0.7071067811865475],["ready",0.4999999999999999],["offended",0.4999999999999999],["easy",0.4999999999999999],["pale",0.4999999999999999]]]],"people",["^ ","^1",["^2",[["hare",0.5773502691896257],["march",0.5773502691896257],["dormouse",0.5773502691896257],["hatter",0.5773502691896257],["ear",0.4999999999999999],["tree",0.4999999999999999],["queen",0.4743416490252569],["sort",0.4517539514526256]]],"^3",["^2",[["wave",0.4999999999999999],["give",0.4999999999999999],["finish",0.4999999999999999],["forget",0.4999999999999999]]],"^4",["^2",[["glad",0.5773502691896257],["low",0.5303300858899106],["first",0.4999999999999999],["nice",0.4999999999999999],["helpless",0.4999999999999999],["satdown",0.4999999999999999],["alive",0.4999999999999999],["underher",0.4999999999999999],["marked",0.4999999999999999],["mad",0.4999999999999999]]]],"good",["^ ","^1",["^2",[["deal",0.7302967433402214],["size",0.6833333333333332],["hand",0.6454972243679028],["change",0.6123724356957945],["mushroom",0.6123724356957945],["serpent",0.5773502691896257],["caterpillar",0.5773502691896257],["garden",0.47834038488248487],["alice",0.4767312946227961]]],"^3",["^2",[["grow",0.6216698721602092],["hold",0.6172133998483675],["stretch",0.5773502691896257],["sir",0.5773502691896257],["wonder",0.5659799760886717],["work",0.5477225575051661],["come",0.5473805515039734],["frighten",0.49497474683058323],["remember",0.4714045207910317],["think",0.4505766568204545]]],"^4",["^2",[["free",0.5773502691896257],["usual",0.5773502691896257]]]],"lead",["^ ","^1",["^2",[["course",0.5773502691896257],["letter",0.4999999999999999],["wood",0.4999999999999999],["inch",0.4999999999999999],["door",0.4816209743009517],["illustration",0.47809144373375745],["rate",0.4695742752749558],["sort",0.4517539514526256]]],"^3",["^2",[["open",0.5669467095138407],["knock",0.4999999999999999],["turn",0.45643546458763834]]],"^4",["^2",[["hot",0.7071067811865475],["nice",0.4999999999999999],["three-legged",0.4999999999999999],["lowand",0.4999999999999999],["naturalto",0.4999999999999999],["open",0.4999999999999999],["draggled",0.4999999999999999],["asleep",0.4999999999999999],["alittle",0.4999999999999999],["marked",0.4999999999999999],["solemn",0.4999999999999999],["high",0.4767312946227961]]]],"croquet",["^ ","^1",["^2",[["queen",0.6324555320336758],["face",0.6123724356957945],["soldier",0.5773502691896257],["eye",0.5028011423654931],["direction",0.4999999999999999]]],"^3",["^2",[["live",0.8660254037844386],["stand",0.6708203932499369],["play",0.6708203932499369],["begin",0.6030226891555271],["run",0.5773502691896257],["wave",0.4999999999999999],["knock",0.4999999999999999],["ornament",0.4999999999999999],["nibble",0.4999999999999999],["peep",0.4999999999999999]]],"^4",["^2",[["grand",0.4999999999999999],["three-legged",0.4999999999999999],["satdown",0.4999999999999999],["lowand",0.4999999999999999],["open",0.4999999999999999],["footstepsand",0.4999999999999999],["asshe",0.4999999999999999],["hush",0.4999999999999999],["solemn",0.4999999999999999],["mad",0.4999999999999999]]]],"caterpillar",["^ ","^1",["^2",[["mushroom",0.7071067811865475],["size",0.5773502691896257],["serpent",0.4999999999999999]]],"^3",["^2",[["stretch",0.9999999999999998],["change",0.7071067811865475],["reply",0.6324555320336758],["grow",0.5383819020581655],["mind",0.4999999999999999],["draw",0.4999999999999999],["fly",0.4999999999999999],["break",0.4999999999999999],["sir",0.4999999999999999],["come",0.47404546313997725]]],"^4",["^2",[["iused",0.7071067811865475],["right-hand",0.7071067811865475],["good",0.5773502691896257],["free",0.4999999999999999],["sharp",0.4999999999999999],["sleepy",0.4999999999999999],["sudden",0.4999999999999999],["delighted",0.4999999999999999],["left-hand",0.4999999999999999]]]],"easy",["^ ","^1",["^2",[["course",0.8164965809277259],["tone",0.5031546054266276],["dodo",0.4999999999999999]]],"^3",["^2",[["reply",0.6324555320336758],["notice",0.5383819020581655],["continue",0.4999999999999999],["waste",0.4999999999999999]]],"^4",["^2",[["offended",0.9999999999999998],["asleep",0.7071067811865475],["hot",0.4999999999999999],["found",0.4999999999999999],["wet",0.4999999999999999],["dry",0.4999999999999999]]]],"pale",["^ ","^1",["^2",[["dodo",0.4999999999999999],["witness",0.4999999999999999]]],"^3",["^2",[["tremble",0.582222509739582],["hate",0.4999999999999999],["write",0.4999999999999999],["call",0.4999999999999999]]],"^4",["^2",[["draggled",0.7071067811865475],["naturalto",0.7071067811865475],["proper",0.7071067811865475],["ready",0.4999999999999999],["shrill",0.4999999999999999],["found",0.4999999999999999],["wet",0.4999999999999999],["dry",0.4999999999999999],["low",0.4999999999999999]]]],"nibble",["^ ","^1",["^2",[["mushroom",0.7499999999999999],["serpent",0.7071067811865475],["change",0.4999999999999999],["pigeon",0.4999999999999999],["room",0.4999999999999999],["tree",0.4999999999999999],["direction",0.4999999999999999],["neck",0.4999999999999999],["croquet",0.4999999999999999],["hand",0.4743416490252569]]],"^3",["^2",[["work",0.6708203932499369],["set",0.6708203932499369],["ornament",0.4999999999999999],["wave",0.4999999999999999],["remark",0.4999999999999999]]],"^4",["^2",[["left-hand",0.7071067811865475],["free",0.7071067811865475],["sulky",0.4999999999999999],["grand",0.4999999999999999],["right-hand",0.4999999999999999],["satdown",0.4999999999999999],["numberof",0.4999999999999999],["raw",0.4999999999999999],["footstepsand",0.4999999999999999],["asshe",0.4999999999999999],["andshe",0.4999999999999999],["alittle",0.4999999999999999],["mad",0.4999999999999999]]]],"marked",["^ ","^1",["^2",[["bottle",0.7071067811865475],["key",0.5063696835418332],["letter",0.4999999999999999],["inch",0.4999999999999999],["hall",0.4999999999999999],["half",0.4999999999999999],["neck",0.4999999999999999],["people",0.4999999999999999],["ear",0.4999999999999999],["sort",0.4517539514526256],["glass",0.4517539514526256]]],"^3",["^2",[["know",0.7071067811865475],["lose",0.7071067811865475],["kneel",0.7071067811865475],["drink",0.7071067811865475],["hope",0.7071067811865475],["jump",0.5773502691896257],["shut",0.5773502691896257],["round",0.4999999999999999],["finish",0.4999999999999999],["lead",0.4999999999999999],["forget",0.4999999999999999]]],"^4",["^2",[["nice",0.9999999999999998],["hot",0.7071067811865475],["tiny",0.7071067811865475],["dark",0.7071067811865475],["bright",0.5063696835418332],["golden",0.5063696835418332],["alittle",0.4999999999999999]]]],"beg",["^ ","^1",["^2",[["jury",0.6666666666666666],["trial",0.5773502691896257],["rate",0.5163977794943223],["idea",0.4714045207910317],["mouse",0.4714045207910317]]],"^3",["^2",[["shut",0.6666666666666666]]],"^4",["^2",[["onea-piece",0.5773502691896257],["proper",0.5773502691896257],["french",0.5773502691896257],["shebegan",0.5773502691896257],["sad",0.5773502691896257],["afraid",0.5163977794943223],["small",0.4753826885415284]]]],"small",["^ ","^1",["^2",[["idea",0.6722926454528143],["garden",0.6224220440894771],["half",0.6175402271944638],["key",0.6045603888763706],["cake",0.582222509739582],["table",0.5712484774591146],["tear",0.5674803065350239],["glass",0.5393540597776989],["door",0.5155285648784764],["moment",0.4908476457856924],["illustration",0.48222647467902047],["alice",0.47274184126735436],["foot",0.46740956722500604],["thing",0.4527416515502067]]],"^3",["^2",[["eat",0.6175402271944638],["finish",0.6175402271944638],["drink",0.582222509739582],["shrink",0.582222509739582],["happen",0.582222509739582],["look",0.49652102461936104],["find",0.4793944279230831],["beg",0.4753826885415284],["shut",0.4753826885415284],["hold",0.46681653306710785],["talk",0.46681653306710785]]],"^4",["^2",[["golden",0.6045603888763706],["lovely",0.582222509739582],["high",0.5102946367862587],["great",0.5010973520018859],["hard",0.4753826885415284],["long",0.4701870933220124],["large",0.4527416515502067]]]],"run",["^ ","^1",["^2",[["croquet",0.5773502691896257],["sort",0.5216405309573011],["question",0.5163977794943223],["foot",0.5042194840896107],["face",0.4714045207910317]]],"^3",["^2",[["live",0.6666666666666666],["ask",0.6666666666666666],["knock",0.5773502691896257],["peep",0.5773502691896257],["play",0.5422176684690384],["begin",0.5222329678670935],["stand",0.5163977794943223]]],"^4",["^2",[["open",0.5773502691896257],["lowand",0.5773502691896257],["three-legged",0.5773502691896257],["solemn",0.5773502691896257],["hush",0.5773502691896257]]]],"shrink",["^ ","^1",["^2",[["change",0.7071067811865475],["question",0.6324555320336758],["garden",0.5345224838248488],["bill",0.4999999999999999],["cake",0.4999999999999999],["glove",0.45675013919556984],["pair",0.45675013919556984],["fan",0.45675013919556984]]],"^3",["^2",[["hold",0.5345224838248488],["trot",0.4999999999999999],["tuck",0.4999999999999999],["draw",0.4999999999999999],["drink",0.4999999999999999],["suppose",0.4999999999999999],["happen",0.4999999999999999],["sir",0.4999999999999999]]],"^4",["^2",[["hard",0.8164965809277259],["safe",0.7071067811865475],["agreat",0.7071067811865475],["shewandered",0.7071067811865475],["to-day",0.7071067811865475],["thesecond",0.7071067811865475],["tosave",0.7071067811865475],["small",0.582222509739582],["timid",0.4999999999999999],["usual",0.4999999999999999],["delighted",0.4999999999999999],["lovely",0.4999999999999999],["general",0.4999999999999999],["sharp",0.4999999999999999]]]],"animal",["^ ","^1",["^2",[["silence",0.6708203932499369],["chin",0.5773502691896257],["creature",0.5773502691896257],["thing",0.5364417807858202],["english",0.5063696835418332],["pool",0.5063696835418332],["bird",0.4999999999999999],["illustration",0.47809144373375745],["moment",0.4585633803868072]]],"^3",["^2",[["suppose",0.7071067811865475],["swim",0.5773502691896257],["hear",0.5423261445466403],["steal",0.4999999999999999],["look",0.4522670168666454]]],"^4",["^2",[["hard",0.5773502691896257],["toomuch",0.4999999999999999],["safe",0.4999999999999999],["shebegan",0.4999999999999999],["french",0.4999999999999999],["fair",0.4999999999999999],["naturalto",0.4999999999999999],["shewandered",0.4999999999999999],["draggled",0.4999999999999999],["thesecond",0.4999999999999999]]]],"dinah",["^ ","^1",["^2",[["cat",0.6123724356957945],["party",0.5773502691896257],["mouse",0.4714045207910317]]],"^3",["^2",[["feel",0.6546536707079771],["drop",0.5773502691896257],["change",0.5773502691896257],["hurry",0.4753826885415284],["tremble",0.4753826885415284],["hear",0.4696682183138621]]],"^4",["^2",[["aremarkable",0.5773502691896257],["passionate",0.5773502691896257],["thinkabout",0.5773502691896257],["little",0.5773502691896257],["fancy",0.5773502691896257],["nicelittle",0.5773502691896257],["subject",0.5773502691896257]]]],"read",["^ ","^1",["^2",[["court",0.7499999999999999],["king",0.6708203932499369],["white",0.6666666666666666],["evidence",0.5773502691896257],["jury",0.5773502691896257],["rabbit",0.5590169943749475],["trial",0.4999999999999999],["letter",0.4999999999999999],["knave",0.4999999999999999],["majesty",0.4999999999999999],["top",0.4999999999999999],["queen",0.4743416490252569]]],"^3",["^2",[["write",0.7071067811865475],["shout",0.5773502691896257],["steal",0.4999999999999999],["sign",0.4999999999999999]]],"^4",["^2",[["thinkabout",0.4999999999999999],["proper",0.4999999999999999],["fair",0.4999999999999999],["dead",0.4999999999999999],["toomuch",0.4999999999999999]]]],"hand",["^ ","^1",["^2",[["alice",0.6154574548966636],["deal",0.565685424949238],["foot",0.5615505169179773],["soldier",0.5477225575051661],["rabbit",0.5303300858899106],["time",0.5107539184552492],["voice",0.4788521306805733],["garden",0.47809144373375745],["change",0.4743416490252569],["mushroom",0.4743416490252569],["half",0.4743416490252569],["table",0.4500351603704096]]],"^3",["^2",[["think",0.6043921368387115],["work",0.565685424949238],["come",0.52999894000318],["begin",0.4862659205152521],["look",0.4862659205152521],["grow",0.48154341234307685],["hold",0.47809144373375745],["eat",0.4743416490252569],["finish",0.4743416490252569],["nibble",0.4743416490252569]]],"^4",["^2",[["good",0.6454972243679028],["large",0.5173952471047824],["poor",0.4803844614152614]]]],"catch",["^ ","^1",["^2",[["arm",0.5838742081211422],["ear",0.5773502691896257],["tree",0.5773502691896257],["duchess",0.5477225575051661],["face",0.4714045207910317]]],"^3",["^2",[["tuck",0.8164965809277259],["grunt",0.5773502691896257],["think",0.4662524041201569]]],"^4",["^2",[["safe",0.5773502691896257],["sure",0.5773502691896257],["helpless",0.5773502691896257],["violentlythat",0.5773502691896257],["loud",0.5773502691896257],["queer-shapedlittle",0.5773502691896257],["shewandered",0.5773502691896257],["alive",0.5773502691896257],["thesecond",0.5773502691896257],["underher",0.5773502691896257]]]],"cry",["^ ","^1",["^2",[["thing",0.5725722614893977],["alice",0.5470305514707786],["tree",0.533676050223615],["cat",0.5031546054266276],["illustration",0.5017870415638235],["table",0.4936708860759494],["tear",0.49041444627368397],["day",0.47733437050543803],["bit",0.47733437050543803],["queen",0.4500351603704096]]],"^3",["^2",[["grin",0.5031546054266276],["hurt",0.5031546054266276],["work",0.47733437050543803],["set",0.47733437050543803],["hear",0.47272990876593224],["speak",0.46774561555889377],["leave",0.45460416238613144]]],"^4",["^2",[["shrill",0.5031546054266276]]]],"take",["^ ","^1",["^2",[["hearts",1.0],["knave",0.8660254037844386],["soldier",0.6666666666666666],["trial",0.5773502691896257],["king",0.5163977794943223],["head",0.48412291827592707]]],"^3",["^2",[["walk",0.7071067811865475],["ornament",0.5773502691896257],["steal",0.5773502691896257],["play",0.5163977794943223],["stand",0.5163977794943223]]],"^4",["^2",[["asleep",0.5773502691896257],["asshe",0.5773502691896257],["footstepsand",0.5773502691896257],["fair",0.5773502691896257],["grand",0.5773502691896257],["toomuch",0.5773502691896257],["alittle",0.5773502691896257]]]],"speak",["^ ","^1",["^2",[["chin",0.5838742081211422],["alice",0.5773502691896257],["side",0.5504818825631802],["half",0.5056498968474316],["english",0.49502183794921617],["head",0.4711114759027556],["tear",0.46466018864229247],["bit",0.4522670168666454],["deal",0.4522670168666454],["thing",0.45208621853167075]]],"^3",["^2",[["leave",0.6353274760745733],["round",0.5056498968474316],["eat",0.5056498968474316],["find",0.48085456158705153],["hurt",0.47673129462279606],["fly",0.47673129462279606],["quarrel",0.47673129462279606],["cry",0.46774561555889377],["think",0.4537212554003924],["set",0.4522670168666454],["work",0.4522670168666454],["let",0.4522670168666454]]],"^4",["^2",[["poor",0.49502183794921617],["sudden",0.47673129462279606],["moral",0.47673129462279606]]]],"great",["^ ","^1",["^2",[["illustration",0.7855844048495726],["alice",0.6396021490668312],["moment",0.6325649818107405],["voice",0.6143675701121218],["head",0.586856917541803],["rabbit",0.586856917541803],["door",0.5666700357018642],["sort",0.549857399228215],["tone",0.5413081687180258],["table",0.5413081687180258],["foot",0.522635770061855],["glove",0.5181877251716008],["pair",0.5181877251716008],["fan",0.5181877251716008],["thing",0.4978638086556316],["time",0.4914731871829905],["duchess",0.4907477288111819],["house",0.48856991820183876],["garden",0.4715447988839421],["letter",0.45643546458763834],["inch",0.45643546458763834],["hall",0.45643546458763834],["party",0.45643546458763834],["half",0.45643546458763834],["bird",0.45643546458763834],["hurry",0.45643546458763834]]],"^3",["^2",[["tremble",0.6138442562023102],["leave",0.5734916461278076],["hear",0.5693348372115877],["begin",0.5504818825631803],["move",0.5270462766947299],["find",0.522635770061855],["hurry",0.48856991820183876],["forget",0.47164998007389297],["look",0.46790960017870326],["notice",0.46336536457127725],["open",0.46004370622823615],["round",0.45643546458763834],["turn",0.4537037037037037]]],"^4",["^2",[["high",0.5802588531856595],["low",0.5486726407127174],["small",0.5010973520018859],["large",0.48970210687439175]]]],"frighten",["^ ","^1",["^2",[["change",0.5773502691896257],["hurry",0.5773502691896257],["inch",0.5773502691896257],["deal",0.5163977794943223],["foot",0.5042194840896107],["face",0.4714045207910317],["side",0.4714045207910317],["size",0.4714045207910317]]],"^3",["^2",[["break",0.8164965809277259],["ask",0.6666666666666666],["knock",0.5773502691896257],["think",0.4662524041201569]]],"^4",["^2",[["three-legged",0.5773502691896257],["right-hand",0.5773502691896257],["agreat",0.5773502691896257],["lowand",0.5773502691896257],["open",0.5773502691896257],["to-day",0.5773502691896257],["tosave",0.5773502691896257],["solemn",0.5773502691896257],["high",0.5504818825631803],["good",0.49497474683058323]]]],"alice",["^ ","^1",["^2",[["illustration",0.814173684098662],["voice",0.7711659806403351],["thing",0.7256136379059805],["time",0.7229988054812212],["head",0.6963106238227913],["rabbit",0.6963106238227913],["foot",0.6685579234215214],["moment",0.636634141641045],["duchess",0.6154574548966636],["queen",0.6154574548966636],["hand",0.6154574548966636],["minute",0.6123724356957945],["door",0.6061552956332581],["white",0.5838742081211422],["eye",0.5806214017078704],["arm",0.5773502691896257],["cat",0.5504818825631802],["tone",0.5470305514707786],["table",0.5470305514707786],["round",0.5149286505444371],["garden",0.5149286505444371],["idea",0.4767312946227961],["size",0.4767312946227961],["face",0.4767312946227961],["side",0.4767312946227961],["mouse",0.4767312946227961],["house",0.47274184126735436]]],"^3",["^2",[["think",0.7229988054812212],["hear",0.7177405625652733],["find",0.6685579234215214],["begin",0.6454972243679028],["look",0.6454972243679028],["turn",0.6396021490668312],["leave",0.6092717958449424],["come",0.5806214017078704],["speak",0.5773502691896257],["call",0.5504818825631802],["fall",0.5470305514707786],["cry",0.5470305514707786],["open",0.5149286505444371],["feel",0.5149286505444371],["hold",0.5149286505444371],["sit",0.5149286505444371],["talk",0.5149286505444371],["grow",0.5112373581455452],["notice",0.5112373581455452],["walk",0.4767312946227961],["tremble",0.47274184126735436],["hurry",0.47274184126735436]]],"^4",["^2",[["large",0.7256136379059805],["great",0.6396021490668312],["high",0.6123724356957945],["low",0.5504818825631802],["long",0.5112373581455452],["good",0.4767312946227961],["small",0.47274184126735436]]]],"sort",["^ ","^1",["^2",[["side",0.5532833351724881],["illustration",0.529150262212918],["arm",0.47208730050170883],["tone",0.4661078446693528],["people",0.4517539514526256],["half",0.4517539514526256],["letter",0.4517539514526256],["ear",0.4517539514526256],["inch",0.4517539514526256]]],"^3",["^2",[["round",0.6776309271789384],["quarrel",0.6388765649999398],["play",0.6060915267313264],["walk",0.5532833351724881],["ask",0.5216405309573011],["run",0.5216405309573011],["notice",0.4987413913553295],["knock",0.4517539514526256],["steal",0.4517539514526256],["lead",0.4517539514526256],["forget",0.4517539514526256]]],"^4",["^2",[["moral",0.6388765649999398],["great",0.549857399228215],["low",0.4791574237499549],["toomuch",0.4517539514526256],["nice",0.4517539514526256],["three-legged",0.4517539514526256],["helpless",0.4517539514526256],["fair",0.4517539514526256],["lowand",0.4517539514526256],["open",0.4517539514526256],["alive",0.4517539514526256],["underher",0.4517539514526256],["marked",0.4517539514526256],["solemn",0.4517539514526256]]]],"tone",["^ ","^1",["^2",[["illustration",0.6718843437888484],["alice",0.5470305514707786],["voice",0.5387507385613604],["party",0.533676050223615],["wood",0.533676050223615],["sort",0.4661078446693528]]],"^3",["^2",[["notice",0.5282342003228814],["continue",0.5031546054266276],["call",0.5031546054266276]]],"^4",["^2",[["great",0.5413081687180258],["fond",0.5031546054266276],["shrill",0.5031546054266276],["offended",0.5031546054266276],["easy",0.5031546054266276],["entangled",0.5031546054266276]]]],"majesty",["^ ","^1",["^2",[["king",0.8944271909999159],["evidence",0.8660254037844386],["court",0.7499999999999999],["witness",0.7071067811865475],["piece",0.6708203932499369],["white",0.6666666666666666],["queen",0.6324555320336758],["jury",0.5773502691896257],["rabbit",0.5590169943749475],["letter",0.4999999999999999],["knave",0.4999999999999999],["top",0.4999999999999999]]],"^3",["^2",[["write",0.7071067811865475],["carry",0.7071067811865475],["ornament",0.4999999999999999],["give",0.4999999999999999],["sign",0.4999999999999999],["read",0.4999999999999999]]],"^4",["^2",[["asshe",0.4999999999999999],["footstepsand",0.4999999999999999],["proper",0.4999999999999999],["grand",0.4999999999999999],["dead",0.4999999999999999],["first",0.4999999999999999]]]],"swim",["^ ","^1",["^2",[["pool",0.8770580193070291],["mouse",0.7071067811865475],["cat",0.6123724356957945],["english",0.5847053462046861],["child",0.5773502691896257],["animal",0.5773502691896257],["party",0.5773502691896257],["glass",0.5216405309573011]]],"^3",["^2",[["tremble",0.4753826885415284],["hear",0.4696682183138621]]],"^4",["^2",[["draggled",0.5773502691896257],["aremarkable",0.5773502691896257],["naturalto",0.5773502691896257],["little",0.5773502691896257],["french",0.5773502691896257],["shebegan",0.5773502691896257],["high",0.5504818825631803]]]],"sneeze",["^ ","^1",["^2",[["piece",0.6324555320336758],["tart",0.4999999999999999],["cook",0.4999999999999999],["baby",0.4999999999999999],["witness",0.4999999999999999],["arm",0.47673129462279606],["door",0.45407660918649984]]],"^3",["^2",[["knock",0.7071067811865475],["give",0.7071067811865475],["break",0.4999999999999999],["produce",0.4999999999999999],["mind",0.4999999999999999],["execute",0.4999999999999999],["carry",0.4999999999999999],["call",0.4999999999999999]]],"^4",["^2",[["open",0.7071067811865475],["lowand",0.7071067811865475],["three-legged",0.7071067811865475],["first",0.7071067811865475],["solemn",0.7071067811865475],["entangled",0.4999999999999999],["full",0.4999999999999999]]]],"mary",["^ ","^1",["^2",[["ann",0.9999999999999998],["glove",0.8094272134003795],["pair",0.8094272134003795],["fan",0.8094272134003795],["bottle",0.512989176042577],["window",0.512989176042577]]],"^3",["^2",[["tremble",0.5674803065350239],["hurry",0.5674803065350239],["spread",0.512989176042577],["prove",0.512989176042577],["know",0.512989176042577],["lose",0.512989176042577],["kneel",0.512989176042577],["execute",0.512989176042577],["trot",0.512989176042577],["hope",0.512989176042577],["come",0.4620423639315076],["move",0.46073929912086503]]],"^4",["^2",[["aremarkable",0.7254762501100116],["little",0.7254762501100116],["quiteenough",0.7254762501100116],["tired",0.512989176042577],["tiny",0.512989176042577],["angry",0.512989176042577],["full",0.512989176042577]]]],"hope",["^ ","^1",["^2",[["bottle",0.9999999999999998],["neck",0.7071067811865475],["round",0.5345224838248488],["mary",0.512989176042577],["ann",0.512989176042577],["window",0.4999999999999999],["door",0.45407660918649984]]],"^3",["^2",[["kneel",0.9999999999999998],["know",0.9999999999999998],["forget",0.7071067811865475],["hurry",0.582222509739582],["drink",0.5499999999999999],["lose",0.5499999999999999],["open",0.5345224838248488],["prove",0.4999999999999999],["spread",0.4999999999999999]]],"^4",["^2",[["tiny",0.9999999999999998],["bright",0.7161148740394329],["quiteenough",0.7071067811865475],["nice",0.7071067811865475],["marked",0.7071067811865475],["tired",0.4999999999999999],["hot",0.4999999999999999],["full",0.4999999999999999],["dark",0.4999999999999999]]]],"garden",["^ ","^1",["^2",[["key",0.5741692517632145],["change",0.5669467095138407],["hall",0.5669467095138407],["illustration",0.5421047417431508],["table",0.5378948988811055],["cake",0.5345224838248488],["head",0.5282214092053229],["deal",0.5239956379316802],["alice",0.5149286505444371],["door",0.4854283139782661],["size",0.47834038488248487],["hand",0.47809144373375745],["foot",0.4511218193390531]]],"^3",["^2",[["find",0.6601782722034923],["forget",0.5858449331643021],["hold",0.5714285714285714],["drink",0.5345224838248488],["tuck",0.5345224838248488],["shrink",0.5345224838248488],["happen",0.5345224838248488],["think",0.5188975413172557],["work",0.5070925528371099],["wonder",0.5070925528371099],["begin",0.46723836348451564],["look",0.46723836348451564],["walk",0.46291004988627565]]],"^4",["^2",[["small",0.6224220440894771],["bright",0.5741692517632145],["golden",0.5741692517632145],["alittle",0.5669467095138407],["lovely",0.5345224838248488],["usual",0.5345224838248488],["high",0.4804999801042981],["good",0.47834038488248487],["great",0.4715447988839421]]]],"remember",["^ ","^1",["^2",[["mind",0.6666666666666666],["mushroom",0.5773502691896257],["pigeon",0.5773502691896257],["day",0.5163977794943223],["size",0.4714045207910317]]],"^3",["^2",[["peep",0.5773502691896257]]],"^4",["^2",[["sleepy",0.8164965809277259],["andshe",0.5773502691896257],["raw",0.5773502691896257],["numberof",0.5773502691896257],["thinkabout",0.5773502691896257],["iused",0.5773502691896257],["sulky",0.5773502691896257],["good",0.4714045207910317]]]],"~:cnt",["^ ","^3",["^ ","facebrighten",10,"^0",100,"drip",10,"^5",30,"bow",20,"dare",10,"unfold",10,"^8",30,"^9",160,"fan",10,"confuse",10,"^;",230,"wasgrinn",10,"werenowhere",10,"swallow",20,"thatle",10,"fetch",10,"light",10,"^\x3e",50,"inone",10,"doubt",10,"wink",10,"promise",10,"appear",10,"save",20,"hearoneself",10,"beganagain",10,"tumble",10,"^A",150,"hatch",10,"llget",10,"^B",60,"mutter",10,"fit",10,"engrave",10,"^G",50,"pat",10,"andpick",10,"printedon",10,"choke",20,"prosecute",10,"squeak",10,"^N",140,"^O",60,"fanciedshe",10,"succeed",10,"keep",20,"weretry",10,"pour",10,"asthe",10,"^S",110,"wander",10,"explain",20,"quiteforgot",10,"breathe",20,"morethan",10,"^U",60,"^V",160,"itfelt",10,"roar",10,"wasly",10,"onpuzzle",10,"peg",10,"theyarrive",10,"offer",10,"reachit",10,"werefill",10,"pass",10,"shetuck",10,"tip",10,"^[",60,"burn",10,"dry",10,"^12",40,"shake",20,"certainlywa",10,"havenothe",10,"mean",10,"wasbeginn",10,"lookedat",10,"weep",10,"send",10,"veoffend",10,"gaveherself",10,"settle",20,"^16",50,"unlock",10,"pop",10,"^17",10,"bring",20,"engagedin",10,"encourage",10,"matter",20,"paw",10,"label",10,"decide",10,"thecrown",10,"rise",10,"return",10,"repeat",20,"startle",10,"please",20,"^1A",40,"proceed",10,"condemn",10,"care",10,"^1B",10,"itmark",10,"sheremember",10,"disappear",10,"strike",20,"^1F",40,"conclude",10,"assemble",20,"inthe",10,"smile",10,"itmutter",10,"betalk",10,"hopethey",10,"beg",30,"bottlemark",10,"stir",10,"snatch",10,"run",40,"^1I",30,"playcroquet",10,"press",20,"^1L",70,"^1M",20,"^1N",30,"cry",130,"surprise",10,"busilypaint",10,"^1O",40,"hadknown",10,"^1P",100,"box",10,"blow",20,"scratch",10,"andcrawl",10,"remain",20,"disagree",10,"thenunroll",10,"^1R",30,"dress",10,"watch",20,"wasgrow",10,"creep",10,"sleep",20,"lean",10,"^1W",50,"tie",10,"stare",10,"^1X",30,"^1Z",30,"wear",10,"^20",30,"escape",10,"mopen",10,"sir",30,"slip",20,"win",20,"reach",20,"jump",40,"bendabout",10,"haveyou",10,"attend",10,"sheadd",10,"cause",20,"atone",10,"theyca",10,"upset",10,"pant",10,"listen",20,"let",50,"drop",50,"consider",20,"make",20,"fall",100,"crowd",30,"hang",20,"notlook",10,"shift",10,"skurry",10,"itwa",10,"climb",10,"onedo",10,"vanish",10,"sit",80,"broughtherself",10,"godown",10,"wait",60,"understand",20,"hold",70,"howl",10,"think",200,"finish",40,"start",10,"have",10,"somanage",10,"fold",10,"alltalk",10,"todry",10,"waswalk",10,"nurse",10,"advise",10,"lay",10,"seethat",10,"leave",110,"walk",60,"mindinghi",10,"break",20,"rap",10,"belong",10,"mention",10,"riselike",10,"stoop",10,"eat",70,"fumble",10,"grin",20,"trot",20,"want_yours",10,"pull",20,"shookit",10,"tremble",60,"tuck",20,"stamp",20,"quarrel",20,"incurve",10,"paint",10,"say",10,"n\'ttake",10,"sha",30,"continue",20,"andwalk",10,"ornament",20,"pressingagainst",10,"gotup",10,"move",30,"pardon",10,"link",10,"ask",40,"produce",20,"fly",20,"veryconfuse",10,"splash",10,"imagine",10,"wriggle",10,"judge",10,"draw",20,"tire",10,"fling",10,"hate",20,"work",50,"offend",20,"hit",10,"help",20,"join",10,"knowwhat",10,"drink",20,"heunfold",10,"hadsucceed",10,"shiver",10,"bristle",10,"mind",20,"crouch",10,"complain",10,"want",10,"shelook",10,"beat",10,"execute",20,"lock",10,"manage",10,"steal",20,"doze",10,"suppose",20,"scold",10,"knock",20,"favor",10,"wave",20,"set",50,"give",20,"bite",10,"meet",50,"recognize",10,"flash",10,"notice",70,"cross-examine",10,"threwthemselve",10,"kneel",20,"lose",20,"wishyou",10,"carry",30,"remark",40,"uncork",10,"guess",30,"asshe",10,"exclaim",10,"pickedher",10,"tomake",10,"smoke",10,"kill",10,"puzzle",10,"feel",70,"grunt",20,"open",100,"went.once",10,"stretch",20,"chance",10,"rattle",10,"venture",10,"furrow",10,"mark",10,"cameupon",10,"write",20,"scramble",10,"cut",10,"round",40,"turn",140,"wasshrink",10,"lie",20,"answer",10,"downin",10,"live",30,"a_red",10,"thedoor",10,"begrow",10,"get",10,"know",20,"prove",20,"whisper",10,"sign",20,"ofmake",10,"rosesgrow",10,"spread",20,"throw",10,"stand",60,"frown",10,"seat",10,"point",10,"grow",130,"waste",20,"fight",10,"untwist",10,"shesaid",10,"change",50,"andfetch",10,"saidwa",10,"tocome",10,"hurt",20,"andbegg",10,"tookup",10,"shed",10,"dtake",10],"^1",["^ ","flower",20,"sound",30,"tarts?the",10,"poison",30,"^6",120,"otherbit",10,"variouspretext",10,"thefan",10,"wasgoing",10,"gardener",20,"herlife",10,"bread",20,"parchment-scroll",10,"summer",10,"intoalice",10,"floor",20,"^:",60,"fan",80,"map",10,"hedge",20,"ofthat",10,"http://www.pgdp.net",10,"room.alice",10,"amoment",20,"edgar",10,"waistcoat-pocket",20,"juror",10,"ring",20,"aliceagain",10,"andalice",20,"going",10,"caterpillarat",10,"barrowful",20,"leader",10,"ofmercia",10,"resource",10,"tryingto",10,"tail",20,"hookah",30,"rearingitself",10,"wewo",10,"largekitchen",10,"commotion",10,"guardhim",10,"her.there",10,"measureherself",10,"toalice",10,"morcar",10,"orlater",10,"greatdisappointment",10,"jason",10,"mad",10,"thequeen",10,"curl",10,"pepper-box",10,"ear",50,"book",30,"law",10,"cupboard",20,"riddle",30,"zigzag",10,"leap",10,"again.she",10,"butteredtoast",10,"fortwo",10,"over.alice",10,"raisingit",10,"well.either",10,"iwas",10,"ohdear",10,"stair",10,"thensilence",10,"^C",190,"thunderstorm",10,"circumstance",10,"^D",130,"dog",40,"rule",30,"usurpation",10,"^E",50,"^F",250,"list",10,"butshe",10,"whisker",20,"^G",10,"king.the",10,"therewas",10,"rabbit-hole",10,"advice",20,"withalice.alice",10,"afterit",10,"queenwas",10,"story",10,"ica",10,"^I",40,"northumbria",10,"authority",10,"pat",30,"theduck",10,"shecame",10,"theyhad",10,"word",10,"infact",10,"nonsense",20,"sam",20,"sideand",10,"theirwit",10,"chimneyclose",10,"isbell",10,"top",40,"meaning",30,"^K",50,"^L",100,"shelf",10,"andsometime",10,"paper",30,"back.however",10,"neverbefore",10,"abough",10,"alarm",10,"prisoner",10,"cryagain",10,"^P",60,"warning",10,"onlydifficulty",10,"apple",10,"ugh",20,"caldron",20,"^R",80,"impatientlyand",10,"digging",10,"venturedto",10,"takeout",10,"tunnel",10,"edwin",10,"distanceand",10,"height.it",10,"andwa",10,"caterpillar.it",10,"talethey",10,"^T",50,"sons",20,"queen.first",10,"grounda",10,"^U",50,"amongthe",10,"murder",10,"williamthe",10,"morning",30,"toherself",10,"raven",10,"^W",40,"sight",20,"bit",70,"company",30,"iti",10,"it.down",10,"passageinto",10,"darkness",10,"^X",40,"fact",30,"player",30,"height",30,"outsideand",10,"theking",20,"ferret",10,"race",20,"somebody",10,"toswallow",10,"spot",10,"dear",30,"croquet-ground",10,"mouth",30,"pack",20,"pig",30,"place",30,"roof",30,"toffy",10,"^Y",240,"plate",10,"aserpent",10,"stool",10,"halfthose",10,"rose",10,"looking-glass",10,"goingon",10,"refreshment",10,"moresound",10,"mine",10,"together.alice",10,"keepingup",10,"treeshad",10,"doublethemselve",10,"ofhand",10,"^[",20,"footup",10,"storyland",10,"saidalice",10,"inall",10,"^10",50,"^11",90,"growshorter",10,"thebottle",10,"hereyes.soon",10,"housemaid",10,"ina",10,"littleglass",10,"excellentopportunity",10,"yourverdict",10,"visit",10,"alicehastily",10,"theway",10,"isay",10,"yorkalice",10,"areback",10,"pepper",20,"^13",40,"themoment",10,"custody",10,"whileshe",10,"andsighing",10,"itmust",10,"tongue",10,"^15",60,"water",10,"anothersnatch",10,"juryman",20,"scroll",10,"offwhen",10,"orange",10,"shower",20,"thecourt",10,"branch",10,"^17",10,"underthe",10,"milk",10,"fountain",10,"theground",10,"yard",10,"^18",40,"calledout",10,"shewent",10,"temper",20,"teacup",30,"theother",10,"totake",10,"diggingfor",10,"paw",20,"look-out",10,"^3I",10,"tea-partythere",10,"agony",10,"gallon",10,"nest",10,"thelock",10,"key",70,"^1;",70,"tobe",10,"alicecoming",10,"areferret",10,"^1\x3c",70,"andthose",10,"herlip",10,"ofcherry-tart",10,"high.vi",10,"^1?",40,"thebird",20,"kings",10,"thiswa",10,"procession",20,"^3S",20,"^1B",60,"seemedto",20,"^1C",110,"salt-water",20,"shoulder",20,"thecook",10,"new",20,"nay",10,"littleanimal",10,"quarrellingall",10,"sister",20,"kid-glove",30,"fury",20,"mile",30,"^3Z",20,"atonce",10,"invitedyet",10,"fright",10,"together.when",10,"pleasure",10,"butthe",10,"swimming",10,"sea",20,"thatshe",10,"crown",20,"herarm",10,"ofthemselve",10,"despair",10,"run",10,"^1J",50,"ahem",10,"stuff",10,"blast",10,"^1K",60,"whispersnow",10,"noise",20,"passage",30,"^1M",120,"of_that",10,"root",10,"execution",10,"cry",10,"drather",10,"^48",10,"thewindow",10,"pepperfor",10,"crowdbelow",10,"thekitchen",10,"bottlethat",10,"breath",20,"conqueror",20,"box",20,"whyit",10,"curtain",10,"^4;",10,"trouble",20,"invitation",10,"hour",20,"edge",10,"execution.then",10,"^1S",1430,"wassitting",10,"onlinedistributed",10,"roast",10,"keyin",10,"^4B",10,"frenchlesson-book",10,"closeto",20,"^1T",50,"energeticremedy",10,"^4E",10,"thingsat",10,"^1U",110,"partywere",10,"^1V",50,"cook.for",10,"hecould",10,"herhand",10,"flower-bed",10,"^1X",10,"^1Y",40,"shore",20,"ground",10,"itstail",10,"passion",10,"mushroom.vii",10,"soup",30,"^1[",130,"atelescope",10,"cheshire-puss",10,"oflamp",10,"^4I",20,"sir",30,"wasthe",10,"garden.after",10,"^4L",10,"sky.alice",10,"little_larger",10,"aninvitation",10,"telescope",10,"cake",50,"wonderat",10,"business",30,"door",220,"race-course",10,"york",10,"queen",270,"hersharp",10,"duchess",210,"thatfor",10,"william",20,"confusion",20,"itswing",10,"it.presently",10,"face",60,"stalk",10,"ido",10,"foot",170,"moment",140,"dodo",70,"liketelescope",10,"verdict",20,"soyou",10,"knuckle",10,"trumpet",30,"rate",60,"entrance",10,"neck",50,"livery",20,"inabout",10,"mistake",20,"flavor",10,"herselfat",10,"violentblow",10,"stockingsfor",10,"proofreading",10,"existence",10,"arm",120,"firstquestion",10,"wasjust",10,"man",20,"asleep.the",10,"adjourn",10,"bear",10,"whitekid-glove",10,"shoe",10,"wasstanding",10,"taste",10,"leaf",10,"person",20,"^4[",30,"themarch",20,"^50",20,"breadand",10,"fifthbend",10,"caterpillar.as",10,"half",40,"brandynow",10,"nose",10,"saucepan",10,"writing-desk",10,"greatwig",10,"tear",40,"marchhare",10,"italoud",10,"^55",10,"atom",10,"direction",50,"failure",10,"amongthem",10,"beheading",10,"butter",20,"front",10,"mischief",10,"cook.the",10,"nothing",10,"daisy",10,"overthe",10,"footstep",10,"waiting",10,"field",10,"eye",110,"andpeople",10,"pattering",30,"jack-in-the-box",10,"thedoorway",10,"courtwa",10,"case",10,"pause",10,"tree",60,"nearher",10,"rabbit.there",10,"question",70,"dryleave",10,"tillshe",10,"pineapple",10,"considertheir",10,"eachother",10,"thetale",10,"neartill",10,"telescope!i",10,"turkey",10,"table.the",10,"thump",20,"^5H",10,"importantto",10,"handand",20,"door.poor",10,"kick",10,"accusation",10,"currant",10,"ordrink",10,"curiousappearance",10,"delight",10,"whateverhappen",10,"love",20,"theday",10,"distance",20,"rabbit",310,"girl",20,"custard",10,"whiterabbit",20,"hedgehog",40,"ittrot",10,"effectand",10,"samesize",10,"grass",20,"curiouser",20,"death",10,"theduchess",10,"harm",10,"time",200,"sidewill",10,"poor",10,"egg",30,"life.at",10,"baby",50,"frog",20,"pocket",10,"acucumber-frame",10,"pickedup",10,"theverse",10,"mushroom",60,"terror",10,"herald",10,"marmalade",10,"dish",30,"difficulty",10,"foot!she",10,"knave",50,"fish-footman",20,"noanswer",10,"^5T",10,"length",10,"sigh",10,"feather",10,"bed",20,"jar",20,"pair",50,"speaker",10,"round.the",10,"cheshire-cat",30,"thisis",10,"heap",10,"gloves.by",10,"faceonly",10,"heart",10,"club",10,"sort.next",10,"head",160,"andi",10,"corner",30,"close",10,"nomore",10,"verse",10,"thunder",10,"jury-box",20,"alice.the",20,"inher",10,"comfit",20,"march",60,"piece",60,"attempt",10,"glove",40,"pope",10,"prize",30,"explainyourself",10,"history",20,"^6:",30,"pleasingthem",10,"adventures",20,"family",10,"goingthrough",10,"lateit",10,"littlebird",10,"pebble",20,"tale",10,"copyright",10,"sneezing",10,"atheling",10,"saucer",10,"rat-hole",10,"row",10,"^6\x3e",10,"hall.after",10,"denial",10,"hearts.when",10,"shehad",10,"^6A",30,"others.ix",10,"andthen",10,"^6B",10,"onefinger",10,"rush",10,"hadplenty",10,"stick",10,"mouse?everything",10,"somesurprise",10,"herbest",10,"andpicture",10,"wood.alice",10,"state",10,"init",10,"itmake",10,"thefrog-footman",10,"cur",10,"duck",20,"series",10,"middle",30,"soonmake",10,"theknave",10,"lowvoice",10,"nothingelse",10,"thinga",10,"ladder?bill",10,"hearts",60,"from",10,"caucus-race",30,"sky-rocket",10,"^6K",10,"fromone",10,"feeling",20,"^6P",50,"vanished.alice",10,"pool",80,"shewa",10,"notgot",10,"blade",10,"reason",30,"arches.the",10,"butit",10,"hated_cats",10,"gabriel",20,"picture",20,"andnow",10,"alarge",10,"thebank",10,"card",20,"minute",110,"morsel",10,"billit",10,"flamingo",30,"overhead",10,"honor",20,"^6W",10,"andevery",10,"over.however",10,"again.the",10,"emphasis",10,"theylay",10,"sight.alice",10,"ofthe",30,"hunting",10,"tea-party",10,"archbishop",10,"to-night",10,"themouse",10,"beast",10,"aconsultation",10,"voice",240,"guest",10,"withoutknocking",10,"velvetcushion",10,"conversation",20,"toquiver",10,"worm",10,"clapping",10,"conquest",10,"ridge",10,"catgrin",10,"footman",30,"goinginto",10,"hersbegan",10,"threeblast",10,"party",50,"butthey",10,"set",20,"sensation",20,"orconversation",10,"kid-glovesand",10,"mallet",10,"fountains.viii",10,"onit",10,"again.just",10,"^79",20,"triedhedge",10,"ball",10,"room",70,"hiss",10,"kettle",10,"thought",10,"doorwith",10,"size",90,"next.the",10,"andshe",10,"ontiptoe",10,"hersurprise",10,"hisconfusion",10,"brassplate",10,"well",20,"insult",10,"king",220,"ofthem",20,"ithink",10,"elbow",10,"^7C",10,"book-shelf",10,"went.so",10,"daisy-chain",10,"to-day",10,"throne",10,"^7G",10,"day",60,"sense",10,"earls",10,"team",10,"hall",70,"^7I",10,"^7J",10,"lory",20,"ceiling",10,"facewa",10,"fear",10,"night",10,"thesentence",10,"myfur",10,"noisegoing",10,"irma",10,"wind",10,"game",30,"asi",10,"^7Q",10,"chimney",40,"prizes",20,"nobody",10,"course",60,"withthe",20,"gamebegan.alice",10,"speed",10,"arm-chair",10,"knee",10,"circle",10,"anger",10,"itwould",20,"eatme",10,"ranclose",10,"^7W",80,"arumbling",10,"wood",50,"ann",40,"^7X",10,"andconfusion",10,"thinking",10,"canary",10,"^7Z",20,"asit",10,"stigand",10,"adoption",10,"prison",10,"courtier",10,"dismay",10,"shecould",10,"hare.alice",10,"leg",20,"search",10,"upright",10,"completely.very",10,"tart",40,"tea",40,"evidence",50,"pigeon",60,"thought.at",10,"thismoment",10,"rabbit-holealice",10,"cheshire-cats",10,"ofconversation",10,"itadvisable",10,"therat",10,"largea",10,"thearchbishop",10,"tea-time",10,"sentence",30,"cart-wheel",10,"spehar",10,"^86",10,"parchment",10,"livehedgehog",10,"inch",50,"andthe",10,"whenshe",10,"curiosity",10,"tastetheir",10,"everybody",10,"english",40,"cat",180,"bank",20,"nobodymoved",10,"life",10,"alicestarted",10,"miss",20,"thebook",10,"est",10,"dive",10,"herhead",10,"dormouse",60,"shriek",30,"andqueens",10,"chain",10,"duchesswas",10,"letter",40,"trial",50,"chatte",10,"chorus",30,"thecorner",10,"^8B",10,"wonderland",20,"house",110,"fur",10,"shebegan",10,"largepigeon",10,"yesterday",10,"^8E",40,"canterbury",10,"watchout",10,"wayoff",10,"instantlyand",10,"oftrouble",10,"edgewith",10,"undersentence",10,"addressedalice",10,"cook",40,"fire",20,"onceset",10,"fire-iron",10,"withdiamond",10,"first",10,"soldier",40,"mastersay",10,"tolook",10,"whichway",10,"^8I",10,"rose-tree",20,"fish",10,"choice",20,"wentdown",10,"crash",20,"tea-pot",10,"herpocket",10,"air",40,"eaglet",20,"sky",10,"idea",70,"butter.just",10],"^4",["^ ","blue",10,"low",90,"cool",10,"^7",20,"withthis",10,"noticeof",10,"^\x3c",20,"iought",10,"^\x3d",20,"tothe",10,"mad",40,"^?",20,"^@",20,"aboutfour",10,"narrow",10,"submittedto",10,"notmuch",10,"^D",50,"purple",10,"weary",10,"^:@",10,"^H",20,"^J",20,"neat",10,"tidy",10,"cunning",10,"troublemyself",10,"worth",10,"^M",20,"tiredof",10,"^Q",120,"queer-looking",10,"foundherself",10,"howsurprised",10,"seen.she",10,"would_you",10,"stupid",10,"rathercomplaining",10,"thick",10,"fourteenth",10,"fine",10,"^Z",20,"constant",10,"crimson",10,"dry",30,"magic",10,"eager",10,"quiteimpossible",10,"tinywhite",10,"^14",20,"clinging",10,"feeble",10,"startled",10,"^17",80,"drunk",10,"hot",20,"^19",20,"quiet",10,"ofthese",10,"knowthat",10,"^1:",20,"cross",10,"furious",10,"key",10,"atable",10,"^1\x3d",30,"^1\x3e",20,"second",10,"mevery",10,"^1@",80,"beingbroken",10,"flat",10,"^1D",20,"wide",10,"graceful",10,"^1E",20,"^1G",20,"nasty",10,"frightened",10,"^1H",70,"out-of-the-way",10,"lonely",10,"unpleasant",10,"melancholy",10,"nervous",10,"theyall",10,"note-book",10,"^1Q",150,"short",10,"thecroquet-ground",10,"advisable",10,"extraordinary",10,"remarkable",10,"slippery",10,"evidentlymeant",10,"mixed",10,"youought",10,"afraid",60,"soothing",10,"entangled",20,"sudden",20,"muchaccustomed",10,"throughthe",10,"crowded",10,"sorrowful",10,"full",30,"whatwould",10,"broken",20,"sittingbetween",10,"pink",10,"thatbeautiful",10,"general",20,"beautiful",10,"^@[",10,"settleddown",10,"plenty",10,"solid",10,"bright",40,"immense",10,"late",30,"awretched",10,"foundit",10,"green",10,"uncomfortable",10,"sovery",10,"subject",20,"armsfolded",10,"red",10,"deep",10,"opposite",10,"wet",20,"queer",10,"thetrial",10,"^B\x3e",80,"empty",10,"honest",10,"moral",20,"ratherinquisitively",10,"followedthe",10,"miserable",10,"relieved",10,"savage",10,"patriotic",10,"alittle",40,"angry",20,"thatthis",10,"dark",30,"last",10,"thesudden",10,"mewhich",10,"lovely",20,"youplay",10,"melike",10,"low-spirited",10,"yer",20,"delighted",20,"^D;",10,"strange",10,"tohear",10,"left-hand",20,"royal",10,"thecool",10,"angryabout",10,"usual",20,"sad",20,"vulgar",10,"howling",10,"thendipped",10,"languid",10,"large",180,"pleasant",10,"thatthe",10,"asleep",10,"underher",10,"timid",20,"^F4",10,"tosave",10,"thesecond",10,"curious",50,"^7C",10,"^FB",10,"alive",10,"footstepsand",10,"draggled",10,"aremarkable",10,"shewandered",10,"raw",10,"^7L",10,"good-by",10,"golden",60,"queer-shapedlittle",10,"loud",10,"violentlythat",10,"naturalto",10,"passionate",10,"onea-piece",10,"numberof",10,"^7W",30,"thinkabout",10,"little",10,"iused",10,"proper",10,"lowand",10,"glad",30,"fair",10,"agreat",10,"french",10,"fancy",10,"satdown",10,"quiteenough",10,"right-hand",10,"helpless",10,"three-legged",10,"sure",60,"nice",10,"^HF",10,"nicelittle",10,"safe",10,"grand",10,"dead",10,"^HV",10,"toomuch",10,"sulky",10]],"sir",["^ ","^1",["^2",[["caterpillar",0.4999999999999999]]],"^3",["^2",[["trot",0.4999999999999999],["draw",0.4999999999999999],["stretch",0.4999999999999999],["shrink",0.4999999999999999]]],"^4",["^2",[["tosave",0.7071067811865475],["to-day",0.7071067811865475],["iused",0.7071067811865475],["agreat",0.7071067811865475],["good",0.5773502691896257],["sleepy",0.4999999999999999],["usual",0.4999999999999999],["timid",0.4999999999999999]]]],"^4M",["^ ","^1",["^2",[["letter",0.5773502691896257],["ear",0.5773502691896257],["rate",0.5163977794943223],["bit",0.5163977794943223]]],"^3",["^2",[["shut",0.6666666666666666],["grunt",0.5773502691896257],["turn",0.5270462766947299],["hurry",0.4753826885415284]]],"^4",["^2",[["queer-shapedlittle",0.5773502691896257],["loud",0.5773502691896257],["violentlythat",0.5773502691896257],["proper",0.5773502691896257],["nice",0.5773502691896257],["marked",0.5773502691896257]]]],"^?E",["^ ","^1",["^2",[["size",0.5773502691896257],["garden",0.5345224838248488],["tear",0.512989176042577],["bill",0.4999999999999999],["door",0.45407660918649984]]],"^3",["^2",[["happen",0.9999999999999998],["lie",0.7071067811865475],["eat",0.7071067811865475],["grow",0.5383819020581655],["hold",0.5345224838248488],["suppose",0.4999999999999999],["drink",0.4999999999999999],["draw",0.4999999999999999],["tuck",0.4999999999999999],["shrink",0.4999999999999999]]],"^4",["^2",[["lovely",0.9999999999999998],["safe",0.7071067811865475],["good-by",0.7071067811865475],["shewandered",0.7071067811865475],["thesecond",0.7071067811865475],["surprised",0.7071067811865475],["small",0.582222509739582],["delighted",0.4999999999999999],["general",0.4999999999999999],["sharp",0.4999999999999999]]]],"^?H",["^ ","^1",["^2",[["moment",0.7558105838723852],["eye",0.6457588695085342],["hall",0.6421612990679356],["foot",0.6355972974416384],["key",0.6340834768940941],["head",0.6102644348250774],["alice",0.6061552956332581],["illustration",0.5909977584690689],["glass",0.5801978086477824],["table",0.559753305965301],["rabbit",0.5294941419805819],["idea",0.5243225050930763],["time",0.5185920324305064],["minute",0.5102306457688559],["garden",0.4854283139782661],["inch",0.4816209743009517],["wood",0.4816209743009517],["child",0.4816209743009517],["pool",0.47149796999817256],["cake",0.45407660918649984],["bottle",0.45407660918649984]]],"^3",["^2",[["open",0.6067853924728326],["begin",0.5808567501533299],["look",0.5808567501533299],["fall",0.5711768428217358],["walk",0.5243225050930763],["hurry",0.5155285648784764],["hear",0.4962717276383203],["grow",0.48893325706790014],["notice",0.48893325706790014],["finish",0.4816209743009517],["lead",0.4816209743009517],["forget",0.4816209743009517],["find",0.4580039349211806],["know",0.45407660918649984],["carry",0.45407660918649984],["lose",0.45407660918649984],["kneel",0.45407660918649984],["execute",0.45407660918649984],["drink",0.45407660918649984],["hope",0.45407660918649984],["sneeze",0.45407660918649984],["happen",0.45407660918649984]]],"^4",["^2",[["golden",0.6340834768940941],["bright",0.6340834768940941],["high",0.6020721620072499],["great",0.5666700357018642],["large",0.5167232262356085],["small",0.5155285648784764],["alittle",0.4816209743009517],["poor",0.47149796999817256],["lovely",0.45407660918649984],["full",0.45407660918649984],["tiny",0.45407660918649984],["hot",0.45407660918649984]]]],"^?K",["^ ","^1",["^2",[["king",0.7071067811865475],["majesty",0.6324555320336758],["croquet",0.6324555320336758],["court",0.6324555320336758],["white",0.6324555320336758],["alice",0.6154574548966636],["duchess",0.6],["piece",0.565685424949238],["soldier",0.5477225575051661],["evidence",0.5477225575051661],["rabbit",0.5391689206547424],["arm",0.533001790889026],["head",0.5303300858899106],["face",0.5163977794943223],["voice",0.4868329995252495],["letter",0.4743416490252569],["knave",0.4743416490252569],["tree",0.4743416490252569],["direction",0.4743416490252569],["people",0.4743416490252569],["ear",0.4743416490252569]]],"^3",["^2",[["play",0.7071067811865475],["stand",0.565685424949238],["live",0.5477225575051661],["shout",0.5477225575051661],["think",0.5107539184552492],["leave",0.5050762722761054],["begin",0.4862659205152521],["read",0.4743416490252569],["cry",0.4500351603704096]]],"^4",["^2",[["large",0.5089133578079826]]]],"^?M",["^ ","^1",["^2",[["arm",0.6502621848846117],["rabbit",0.6275572683030609],["alice",0.6154574548966636],["time",0.612904702146299],["queen",0.6],["moment",0.5800418934273981],["foot",0.5707562630969606],["voice",0.5666416879720118],["illustration",0.5291502622129182],["white",0.5270462766947298],["face",0.5163977794943223],["side",0.5163977794943223],["minute",0.5125692857821982],["bird",0.4743416490252569],["ear",0.4743416490252569]]],"^3",["^2",[["think",0.6895177899145863],["begin",0.6769584383643705],["look",0.6674238124719146],["drop",0.6324555320336758],["play",0.565685424949238],["catch",0.5477225575051661],["leave",0.5151777977216274],["hear",0.5144957554275266],["notice",0.48154341234307685],["feel",0.47809144373375745],["peep",0.4743416490252569],["stand",0.4525483399593904]]],"^4",["^2",[["large",0.525877136401582],["great",0.4907477288111819],["sure",0.4901530373260988]]]],"^?S",["^ ","^1",["^2",[["direction",0.6123724356957945],["croquet",0.6123724356957945],["foot",0.5942283606769104],["baby",0.5773502691896257],["minute",0.518999296107682],["duchess",0.5163977794943223],["queen",0.5163977794943223],["size",0.49999999999999994],["alice",0.4767312946227961],["soldier",0.4714045207910317],["head",0.45643546458763834]]],"^3",["^2",[["think",0.6593804733957871],["break",0.5773502691896257],["stand",0.5659799760886717],["set",0.5477225575051661],["work",0.5477225575051661],["play",0.5477225575051661],["begin",0.4923659639173309],["look",0.4923659639173309],["live",0.4714045207910317],["ask",0.4714045207910317],["frighten",0.4714045207910317],["catch",0.4714045207910317],["run",0.4714045207910317]]],"^4",["^2",[["sharp",0.5773502691896257],["delighted",0.5773502691896257]]]],"^?U",["^ ","^1",["^2",[["moment",0.6941633977290311],["alice",0.6685579234215214],["minute",0.6476486119289304],["door",0.6355972974416384],["face",0.5942283606769104],["eye",0.5757262145823338],["duchess",0.5707562630969606],["rabbit",0.5695764855411044],["hand",0.5615505169179773],["illustration",0.5427934204985924],["question",0.5207556439232954],["deal",0.5207556439232954],["head",0.48820841617808947],["side",0.4872672557550666],["time",0.4780235448773793],["size",0.4753826885415284],["garden",0.4511218193390531]]],"^3",["^2",[["begin",0.7987374474853475],["think",0.7052806399830187],["look",0.6231907557303261],["find",0.5847457627118644],["grow",0.5430383874534989],["stand",0.5207556439232954],["fall",0.5178636822485007],["ask",0.5042194840896107],["frighten",0.5042194840896107],["run",0.5042194840896107],["stop",0.5042194840896107],["come",0.4976616431135427],["hear",0.46573787123862104],["leave",0.46496039636008524],["drop",0.451222445048176],["feel",0.4511218193390531]]],"^4",["^2",[["poor",0.5748986646151399],["high",0.555127381653369],["large",0.546574839892009],["great",0.522635770061855],["small",0.46740956722500604]]]],"^?V",["^ ","^1",["^2",[["door",0.7558105838723852],["foot",0.6941633977290311],["alice",0.636634141641045],["illustration",0.6357821628604264],["side",0.6240257203741472],["inch",0.611417840515743],["rabbit",0.589592862058772],["minute",0.582964037329089],["head",0.5810480379709637],["duchess",0.5800418934273981],["time",0.5760585248760332],["glass",0.5524208508832363],["table",0.5329551283324001],["chin",0.5295033822136559],["arm",0.515272279979108],["eye",0.5123693144565975],["size",0.5117010907068007],["white",0.5095148670964524],["hall",0.4585633803868072],["room",0.4585633803868072],["half",0.4585633803868072],["neck",0.4585633803868072],["animal",0.4585633803868072],["bird",0.4585633803868072]]],"^3",["^2",[["look",0.7373976607709373],["hear",0.638306669296326],["hurry",0.6167060164999725],["grow",0.5819069847145178],["open",0.5777355546974313],["feel",0.5777355546974313],["leave",0.576165281349359],["think",0.5678291173778042],["begin",0.553048245578203],["come",0.5226167007457295],["notice",0.4655255877716143],["round",0.4585633803868072],["eat",0.4585633803868072],["finish",0.4585633803868072],["drop",0.4585633803868072],["forget",0.4585633803868072]]],"^4",["^2",[["great",0.6325649818107405],["poor",0.6037267439068863],["large",0.57398263154835],["high",0.5732479700402708],["small",0.4908476457856924]]]],"^JQ",["^ ","^1",["^2",[["thing",0.5997601439040672],["mouse",0.5659799760886717],["house",0.552344770738994]]],"^3",["^2",[["meet",0.6708203932499369],["offend",0.6324555320336758],["beg",0.5163977794943223],["talk",0.5070925528371099],["change",0.4695742752749558],["come",0.46470964717743407]]],"^4",["^2",[]]],"^?W",["^ ","^1",["^2",[["course",0.8164965809277259],["english",0.7161148740394329],["party",0.7071067811865475],["question",0.6324555320336758],["mouse",0.5773502691896257],["round",0.5345224838248488]]],"^3",["^2",[["crowd",0.8164965809277259],["continue",0.4999999999999999],["hate",0.4999999999999999],["call",0.4999999999999999]]],"^4",["^2",[["found",0.9999999999999998],["wet",0.9999999999999998],["dry",0.9999999999999998],["draggled",0.7071067811865475],["naturalto",0.7071067811865475],["ready",0.4999999999999999],["offended",0.4999999999999999],["easy",0.4999999999999999],["pale",0.4999999999999999]]]],"^JS",["^ ","^1",["^2",[["wood",0.7071067811865475],["pigeon",0.7071067811865475],["piece",0.6324555320336758],["size",0.5773502691896257],["tone",0.5031546054266276],["baby",0.4999999999999999],["serpent",0.4999999999999999]]],"^3",["^2",[["knock",0.7071067811865475],["break",0.4999999999999999],["continue",0.4999999999999999],["produce",0.4999999999999999],["sneeze",0.4999999999999999]]],"^4",["^2",[["sulky",0.7071067811865475],["three-legged",0.7071067811865475],["lowand",0.7071067811865475],["numberof",0.7071067811865475],["open",0.7071067811865475],["raw",0.7071067811865475],["andshe",0.7071067811865475],["solemn",0.7071067811865475],["usual",0.4999999999999999],["full",0.4999999999999999],["free",0.4999999999999999]]]],"^JT",["^ ","^1",["^2",[["chin",0.8164965809277259],["tear",0.512989176042577],["serpent",0.4999999999999999],["caterpillar",0.4999999999999999]]],"^3",["^2",[["break",0.4999999999999999],["fly",0.4999999999999999],["mind",0.4999999999999999],["stretch",0.4999999999999999],["hurt",0.4999999999999999],["speak",0.47673129462279606]]],"^4",["^2",[["poor",0.7161148740394329],["french",0.7071067811865475],["right-hand",0.7071067811865475],["shebegan",0.7071067811865475],["free",0.4999999999999999],["sharp",0.4999999999999999],["delighted",0.4999999999999999],["left-hand",0.4999999999999999]]]],"^@1",["^ ","^1",["^2",[["glass",0.6060915267313264],["idea",0.5477225575051661],["letter",0.4695742752749558],["key",0.45291081365783825]]],"^3",["^2",[["shut",0.7745966692414834],["beg",0.5163977794943223],["sha",0.5163977794943223],["jump",0.5163977794943223],["fall",0.47733437050543803],["lead",0.4695742752749558]]],"^4",["^2",[["hot",0.6324555320336758],["golden",0.45291081365783825]]]],"^@3",["^ ","^1",["^2",[["bottle",0.7071067811865475],["serpent",0.7071067811865475],["change",0.5249999999999999],["mushroom",0.5249999999999999],["inch",0.4999999999999999],["pigeon",0.4999999999999999],["room",0.4999999999999999],["moment",0.4585633803868072]]],"^3",["^2",[["know",0.7071067811865475],["kneel",0.7071067811865475],["hope",0.7071067811865475],["grow",0.5900749154108327],["open",0.5669467095138407],["round",0.4999999999999999],["remark",0.4999999999999999],["nibble",0.4999999999999999],["forget",0.4999999999999999],["wonder",0.4695742752749558]]],"^4",["^2",[["tiny",0.7071067811865475],["free",0.7071067811865475],["bright",0.5063696835418332],["sulky",0.4999999999999999],["nice",0.4999999999999999],["right-hand",0.4999999999999999],["quiteenough",0.4999999999999999],["numberof",0.4999999999999999],["raw",0.4999999999999999],["andshe",0.4999999999999999],["alittle",0.4999999999999999],["marked",0.4999999999999999]]]],"let",["^ ","^1",["^2",[["silence",0.5999999999999999],["jury",0.5163977794943223],["creature",0.5163977794943223],["thing",0.4798081151232538],["voice",0.4514661183864802]]],"^3",["^2",[["hate",0.6324555320336758],["shout",0.5163977794943223],["speak",0.4522670168666454]]],"^4",["^2",[]]],"^4X",["^ ","^1",["^2",[["duchess",0.6324555320336758],["glove",0.5872202195147035],["pair",0.5872202195147035],["fan",0.5872202195147035],["dinah",0.5773502691896257],["rabbit",0.5590169943749475],["time",0.5383819020581655],["white",0.49999999999999994],["moment",0.4585633803868072],["foot",0.451222445048176]]],"^3",["^2",[["trot",0.7071067811865475],["execute",0.7071067811865475],["begin",0.6030226891555271],["look",0.6030226891555271],["feel",0.5669467095138407],["give",0.4999999999999999]]],"^4",["^2",[["white",0.5773502691896257],["tosave",0.4999999999999999],["to-day",0.4999999999999999],["aremarkable",0.4999999999999999],["thinkabout",0.4999999999999999],["little",0.4999999999999999],["agreat",0.4999999999999999],["first",0.4999999999999999]]]],"arm",["^ ","^1",["^2",[["duchess",0.6502621848846117],["minute",0.6321106074243379],["voice",0.5870267994146745],["alice",0.5773502691896257],["chimney",0.5740604972870496],["time",0.5444655064804709],["queen",0.533001790889026],["moment",0.515272279979108],["air",0.5056498968474316],["cook",0.47673129462279606],["tart",0.47673129462279606],["baby",0.47673129462279606],["bill",0.47673129462279606],["window",0.47673129462279606],["illustration",0.47543554877497435],["sort",0.47208730050170883],["rabbit",0.4711114759027556],["day",0.4522670168666454],["silence",0.4522670168666454],["thing",0.45208621853167075]]],"^3",["^2",[["think",0.6170609073445336],["catch",0.5838742081211422],["leave",0.538413115317435],["hear",0.5301725074921697],["grow",0.5004938272808617],["wait",0.49502183794921617],["spread",0.47673129462279606],["suppose",0.47673129462279606],["draw",0.47673129462279606],["quarrel",0.47673129462279606],["tuck",0.47673129462279606],["sneeze",0.47673129462279606],["stand",0.4522670168666454],["play",0.4522670168666454]]],"^4",["^2",[["large",0.5425034622380049],["sure",0.5225048934090125],["moral",0.47673129462279606],["full",0.47673129462279606]]]],"^JY",["^ ","^1",["^2",[["house",0.582222509739582],["window",0.5499999999999999],["ann",0.512989176042577],["mary",0.512989176042577],["baby",0.4999999999999999],["bottle",0.4999999999999999],["arm",0.47673129462279606],["eye",0.47404546313997725],["chimney",0.45675013919556984],["door",0.45407660918649984]]],"^3",["^2",[["knock",0.7071067811865475],["stand",0.6324555320336758],["spread",0.5499999999999999],["open",0.5345224838248488],["prove",0.4999999999999999],["know",0.4999999999999999],["kneel",0.4999999999999999],["produce",0.4999999999999999],["break",0.4999999999999999],["hope",0.4999999999999999],["sneeze",0.4999999999999999]]],"^4",["^2",[["open",0.7071067811865475],["lowand",0.7071067811865475],["quiteenough",0.7071067811865475],["three-legged",0.7071067811865475],["solemn",0.7071067811865475],["tired",0.4999999999999999],["tiny",0.4999999999999999],["entangled",0.4999999999999999]]]],"^4[",["^ ","^1",["^2",[["eye",0.7155544738814347],["time",0.5746430540045578],["door",0.5711768428217358],["alice",0.5470305514707786],["pool",0.540474745331175],["air",0.533676050223615],["english",0.5224589204868025],["key",0.5224589204868025],["foot",0.5178636822485007],["illustration",0.5102919066750747],["window",0.5031546054266276],["tear",0.49041444627368397],["glass",0.482180528968296],["rate",0.47733437050543803]]],"^3",["^2",[["stop",0.6162360225133208],["hear",0.5692054003508163],["spread",0.5031546054266276],["think",0.4788692116704649],["come",0.4770363159209564]]],"^4",["^2",[["late",0.6162360225133208],["golden",0.5224589204868025],["tired",0.5031546054266276],["large",0.486686422265988],["high",0.4636099132277183]]]],"^J[",["^ ","^1",["^2",[["bill",0.7071067811865475],["window",0.7071067811865475],["chimney",0.5872202195147035],["air",0.4999999999999999],["glass",0.4517539514526256]]],"^3",["^2",[["pull",0.7071067811865475],["help",0.7071067811865475],["spread",0.7071067811865475],["sha",0.5773502691896257],["wait",0.5063696835418332]]],"^4",["^2",[["yer",0.9999999999999998],["angry",0.7071067811865475],["sure",0.4999999999999999]]]],"^50",["^ ","^1",["^2",[["dodo",0.8164965809277259],["course",0.6666666666666666],["round",0.6546536707079771],["english",0.5847053462046861],["party",0.5773502691896257],["question",0.5163977794943223],["mouse",0.4714045207910317],["thing",0.4645722098118832]]],"^3",["^2",[["wave",0.5773502691896257],["reply",0.5163977794943223],["find",0.5042194840896107]]],"^4",["^2",[["found",0.8164965809277259],["wet",0.8164965809277259],["dry",0.8164965809277259],["draggled",0.5773502691896257],["naturalto",0.5773502691896257],["satdown",0.5773502691896257],["mad",0.5773502691896257]]]],"^@L",["^ ","^1",["^2",[["table",0.533676050223615],["key",0.5063696835418332],["trial",0.4999999999999999],["inch",0.4999999999999999],["hall",0.4999999999999999],["bird",0.4999999999999999],["hand",0.4743416490252569],["moment",0.4585633803868072],["sort",0.4517539514526256],["glass",0.4517539514526256]]],"^3",["^2",[["finish",0.7499999999999999],["speak",0.5056498968474316],["steal",0.4999999999999999],["lie",0.4999999999999999],["round",0.4999999999999999],["forget",0.4999999999999999],["eat",0.4999999999999999]]],"^4",["^2",[["small",0.6175402271944638],["large",0.5364417807858202],["golden",0.5063696835418332],["toomuch",0.4999999999999999],["nice",0.4999999999999999],["fair",0.4999999999999999],["onea-piece",0.4999999999999999],["good-by",0.4999999999999999],["sad",0.4999999999999999],["marked",0.4999999999999999],["surprised",0.4999999999999999],["great",0.45643546458763834]]]],"^@R",["^ ","^1",["^2",[["english",0.6979824404521127],["key",0.6979824404521127],["pool",0.6979824404521127],["glass",0.622699849077239],["cake",0.512989176042577],["table",0.49041444627368397],["eye",0.4620423639315076]]],"^3",["^2",[["lie",0.7254762501100116],["hurt",0.512989176042577],["happen",0.512989176042577],["fall",0.49041444627368397],["cry",0.49041444627368397],["speak",0.46466018864229247]]],"^4",["^2",[["good-by",0.7254762501100116],["french",0.7254762501100116],["shebegan",0.7254762501100116],["surprised",0.7254762501100116],["golden",0.6979824404521127],["poor",0.6979824404521127],["small",0.5674803065350239],["sudden",0.512989176042577],["lovely",0.512989176042577]]]],"^@V",["^ ","^1",["^2",[["bit",0.6708203932499369],["face",0.6123724356957945],["ear",0.4999999999999999],["croquet",0.4999999999999999],["tree",0.4999999999999999],["room",0.4999999999999999],["queen",0.4743416490252569]]],"^3",["^2",[["grin",0.7071067811865475],["set",0.6708203932499369],["live",0.5773502691896257],["wave",0.4999999999999999],["grunt",0.4999999999999999],["nibble",0.4999999999999999],["remark",0.4999999999999999]]],"^4",["^2",[["left-hand",0.7071067811865475],["queer-shapedlittle",0.4999999999999999],["loud",0.4999999999999999],["violentlythat",0.4999999999999999],["satdown",0.4999999999999999],["right-hand",0.4999999999999999],["hush",0.4999999999999999],["mad",0.4999999999999999]]]],"^K3",["^ ","^1",["^2",[["silence",0.6324555320336758],["idea",0.5773502691896257],["bill",0.4999999999999999],["cake",0.4999999999999999]]],"^3",["^2",[["sign",0.7071067811865475],["prove",0.5499999999999999],["hold",0.5345224838248488],["write",0.4999999999999999],["suppose",0.4999999999999999],["drink",0.4999999999999999],["draw",0.4999999999999999],["tuck",0.4999999999999999],["shrink",0.4999999999999999],["happen",0.4999999999999999]]],"^4",["^2",[["thesecond",0.7071067811865475],["shewandered",0.7071067811865475],["safe",0.7071067811865475],["dead",0.7071067811865475],["sharp",0.4999999999999999],["lovely",0.4999999999999999],["delighted",0.4999999999999999]]]],"sit",["^ ","^1",["^2",[["mind",0.6546536707079771],["baby",0.5345224838248488],["time",0.5188975413172557],["alice",0.5149286505444371],["eye",0.5067759168069629],["minute",0.4804999801042981],["side",0.46291004988627565],["size",0.46291004988627565],["illustration",0.45175395145262565]]],"^3",["^2",[["peep",0.5669467095138407],["produce",0.5345224838248488],["hate",0.5345224838248488],["call",0.5345224838248488],["come",0.519445314727137],["hurry",0.48237708416934477],["turn",0.46004370622823615]]],"^4",["^2",[["large",0.7096457724119536],["ready",0.5345224838248488],["sleepy",0.5345224838248488]]]],"^5;",["^ ","^1",["^2",[["chimney",0.8623164985025763],["bill",0.7161148740394329],["window",0.7161148740394329],["rabbit",0.5519850541454904],["air",0.5063696835418332],["voice",0.49840509960483137],["arm",0.49502183794921617],["minute",0.4828045495852676],["question",0.45291081365783825],["silence",0.45291081365783825]]],"^3",["^2",[["spread",0.7161148740394329],["sha",0.5847053462046861],["think",0.531609533071195],["come",0.5092065106881741],["stand",0.4755563543407302]]],"^4",["^2",[["sure",0.5316881677189249],["thesecond",0.5063696835418332],["shewandered",0.5063696835418332],["quiteenough",0.5063696835418332],["safe",0.5063696835418332],["hush",0.5063696835418332],["broken",0.5063696835418332],["yer",0.5063696835418332],["bright",0.48717948717948717]]]],"^5\x3d",["^ ","^1",["^2",[["garden",0.5714285714285714],["change",0.5669467095138407],["cake",0.5345224838248488],["bill",0.5345224838248488],["alice",0.5149286505444371],["silence",0.5070925528371099],["deal",0.5070925528371099],["size",0.47834038488248487],["hand",0.47809144373375745],["voice",0.4769481385251274]]],"^3",["^2",[["happen",0.5345224838248488],["shrink",0.5345224838248488],["think",0.5188975413172557],["wonder",0.5070925528371099],["work",0.5070925528371099]]],"^4",["^2",[["good",0.6172133998483675],["sure",0.5669467095138407],["general",0.5345224838248488],["lovely",0.5345224838248488],["usual",0.5345224838248488],["small",0.46681653306710785]]]],"^5?",["^ ","^1",["^2",[["alice",0.7229988054812212],["foot",0.7052806399830187],["duchess",0.6895177899145863],["face",0.6593804733957871],["arm",0.6170609073445336],["hand",0.6043921368387115],["rabbit",0.5944051496109855],["illustration",0.5727056123581303],["moment",0.5678291173778042],["side",0.560473402386419],["change",0.5383819020581655],["voice",0.5367075712876134],["head",0.5266881072502403],["garden",0.5188975413172557],["time",0.5144927536231884],["minute",0.5133270023393454],["queen",0.5107539184552492],["thing",0.5054184559951438],["day",0.48154341234307685],["soldier",0.4662524041201569],["chin",0.4662524041201569],["chimney",0.45841567112854237],["eye",0.4511650589729212],["size",0.4505766568204545]]],"^3",["^2",[["look",0.6574294173028599],["stand",0.6019292654288461],["play",0.6019292654288461],["hear",0.5693582334119391],["wait",0.531609533071195],["hold",0.5188975413172557],["begin",0.5113339912355577],["work",0.4935819976516537],["fall",0.4788692116704649],["find",0.4701870933220125],["frighten",0.4662524041201569],["catch",0.4662524041201569],["stop",0.4662524041201569],["come",0.4601883601523796],["speak",0.4537212554003924]]],"^4",["^2",[["large",0.5126387196522173],["good",0.4505766568204545]]]],"eye",["^ ","^1",["^2",[["door",0.6457588695085342],["alice",0.5806214017078704],["foot",0.5757262145823338],["illustration",0.5528853253483527],["moment",0.5123693144565975],["key",0.5092065106881741],["room",0.5028011423654931],["croquet",0.5028011423654931],["table",0.48896222381898036],["tear",0.4620423639315076],["time",0.4601883601523796]]],"^3",["^2",[["fall",0.7155544738814347],["open",0.6461392939288777],["stop",0.5805847497871377],["hear",0.5362750031916913],["begin",0.5255475280981654],["sit",0.5067759168069629],["remark",0.5028011423654931],["peep",0.5028011423654931],["produce",0.47404546313997725],["come",0.46067415730337086],["think",0.4511650589729212]]],"^4",["^2",[["large",0.629354927113943],["golden",0.5092065106881741],["sleepy",0.47404546313997725],["tired",0.47404546313997725],["full",0.47404546313997725]]]],"^5@",["^ ","^1",["^2",[["half",0.7499999999999999],["key",0.5063696835418332],["people",0.4999999999999999],["inch",0.4999999999999999],["hall",0.4999999999999999],["door",0.4816209743009517],["hand",0.4743416490252569],["moment",0.4585633803868072],["glass",0.4517539514526256]]],"^3",["^2",[["give",0.4999999999999999],["lie",0.4999999999999999],["forget",0.4999999999999999],["eat",0.4999999999999999]]],"^4",["^2",[["small",0.6175402271944638],["large",0.5364417807858202],["golden",0.5063696835418332],["poor",0.5063696835418332],["first",0.4999999999999999],["nice",0.4999999999999999],["onea-piece",0.4999999999999999],["good-by",0.4999999999999999],["sad",0.4999999999999999],["marked",0.4999999999999999],["surprised",0.4999999999999999]]]],"^K8",["^ ","^1",["^2",[["bottle",0.7161148740394329],["door",0.6340834768940941],["round",0.5741692517632145],["garden",0.5741692517632145],["chimney",0.56496598177755],["head",0.5519850541454904],["rabbit",0.5519850541454904],["hall",0.5316881677189249],["key",0.5128205128205128],["neck",0.5063696835418332]]],"^3",["^2",[["know",0.7161148740394329],["kneel",0.7161148740394329],["drink",0.7161148740394329],["hope",0.7161148740394329],["stop",0.5847053462046861],["find",0.5748986646151399],["ornament",0.5063696835418332],["forget",0.5063696835418332],["wait",0.48717948717948717],["look",0.4732962328281559],["stand",0.45291081365783825]]],"^4",["^2",[["tiny",0.7161148740394329],["long",0.5783149319662402],["golden",0.5128205128205128],["grand",0.5063696835418332],["safe",0.5063696835418332],["nice",0.5063696835418332],["quiteenough",0.5063696835418332],["shewandered",0.5063696835418332],["footstepsand",0.5063696835418332],["asshe",0.5063696835418332],["thesecond",0.5063696835418332],["alittle",0.5063696835418332],["marked",0.5063696835418332],["curious",0.45291081365783825]]]],"^K:",["^ ","^1",["^2",[["air",0.5773502691896257],["room",0.5773502691896257],["time",0.4662524041201569]]],"^3",["^2",[["stop",0.6666666666666666],["fall",0.6162360225133208],["hurry",0.4753826885415284],["tremble",0.4753826885415284],["hear",0.4696682183138621]]],"^4",["^2",[["tired",0.8164965809277259],["draggled",0.5773502691896257],["naturalto",0.5773502691896257],["thinkabout",0.5773502691896257],["quiteenough",0.5773502691896257],["large",0.4645722098118832]]]],"^A?",["^ ","^1",["^2",[["cat",0.5303300858899106],["people",0.4999999999999999],["ear",0.4999999999999999],["direction",0.4999999999999999],["pigeon",0.4999999999999999],["queen",0.4743416490252569]]],"^3",["^2",[["grin",0.7071067811865475],["catch",0.5773502691896257],["cry",0.533676050223615],["wave",0.4999999999999999],["grunt",0.4999999999999999],["nibble",0.4999999999999999]]],"^4",["^2",[["glad",0.5773502691896257],["sulky",0.4999999999999999],["helpless",0.4999999999999999],["satdown",0.4999999999999999],["numberof",0.4999999999999999],["violentlythat",0.4999999999999999],["loud",0.4999999999999999],["queer-shapedlittle",0.4999999999999999],["raw",0.4999999999999999],["alive",0.4999999999999999],["andshe",0.4999999999999999],["underher",0.4999999999999999],["mad",0.4999999999999999]]]],"^AB",["^ ","^1",["^2",[["dodo",0.6324555320336758],["voice",0.5643326479831002],["foot",0.5207556439232954],["course",0.5163977794943223],["thing",0.4798081151232538],["english",0.45291081365783825]]],"^3",["^2",[["shrink",0.6324555320336758],["begin",0.5393598899705937],["find",0.5207556439232954],["crowd",0.5163977794943223],["move",0.5163977794943223],["run",0.5163977794943223],["wait",0.45291081365783825]]],"^4",["^2",[["hard",0.7745966692414834],["found",0.6324555320336758],["wet",0.6324555320336758],["timid",0.6324555320336758],["dry",0.6324555320336758]]]],"^5K",["^ ","^1",["^2",[["head",0.6160714285714285],["alice",0.6092717958449424],["moment",0.576165281349359],["voice",0.548208858040726],["arm",0.538413115317435],["side",0.5216405309573011],["illustration",0.5192504128584245],["duchess",0.5151777977216274],["minute",0.5076207532276439],["time",0.5073403808614559],["queen",0.5050762722761054],["court",0.4791574237499549],["foot",0.46496039636008524],["cook",0.4517539514526256],["tart",0.4517539514526256],["witness",0.4517539514526256]]],"^3",["^2",[["speak",0.6353274760745733],["feel",0.6036816105203691],["tremble",0.5128915728290658],["hurry",0.5128915728290658],["look",0.5008341835441227],["grow",0.48643230329071346],["round",0.4791574237499549],["forget",0.4791574237499549],["find",0.45566118843288356],["cry",0.45460416238613144],["execute",0.4517539514526256],["mind",0.4517539514526256],["fly",0.4517539514526256],["quarrel",0.4517539514526256],["call",0.4517539514526256]]],"^4",["^2",[["great",0.5734916461278076],["poor",0.4852615860619696],["moral",0.4517539514526256],["low",0.4517539514526256]]]],"^5L",["^ ","^1",["^2",[["hearts",0.7071067811865475],["head",0.6846531968814575],["hall",0.6123724356957945],["knave",0.6123724356957945],["table",0.5809928937741268],["sort",0.5532833351724881],["white",0.5443310539518174],["door",0.5243225050930763],["illustration",0.48795003647426655],["alice",0.4767312946227961],["soldier",0.4714045207910317],["garden",0.46291004988627565],["rabbit",0.45643546458763834]]],"^3",["^2",[["take",0.7071067811865475],["notice",0.6216698721602092],["quarrel",0.5773502691896257],["lose",0.5773502691896257],["play",0.5477225575051661],["look",0.4923659639173309],["guess",0.4714045207910317]]],"^4",["^2",[["alittle",0.6123724356957945],["hot",0.5773502691896257],["moral",0.5773502691896257],["white",0.4714045207910317]]]],"^K@",["^ ","^1",["^2",[["tea",0.5773502691896257],["dinah",0.5773502691896257],["hurry",0.4999999999999999],["party",0.4999999999999999]]],"^3",["^2",[["offend",0.7071067811865475],["change",0.4999999999999999]]],"^4",["^2",[["passionate",0.9999999999999998],["fancy",0.9999999999999998],["nicelittle",0.9999999999999998],["fond",0.7071067811865475],["shrill",0.7071067811865475]]]],"^A[",["^ ","^1",["^2",[["white",0.8385254915624211],["voice",0.6983616518790866],["alice",0.6963106238227913],["head",0.6874999999999999],["time",0.6696463077895912],["duchess",0.6275572683030609],["king",0.6249999999999999],["moment",0.589592862058772],["foot",0.5695764855411044],["majesty",0.5590169943749475],["court",0.5590169943749475],["queen",0.5391689206547424],["hand",0.5303300858899106],["door",0.5294941419805819],["illustration",0.5278409527770381],["silence",0.4999999999999999],["table",0.4972233026098313],["soldier",0.48412291827592707],["evidence",0.48412291827592707],["chimney",0.47598581911649424],["glove",0.47598581911649424],["pair",0.47598581911649424],["fan",0.47598581911649424],["arm",0.4711114759027556]]],"^3",["^2",[["look",0.674199862463242],["begin",0.5983523779361274],["think",0.5944051496109855],["drop",0.5590169943749475],["read",0.5590169943749475],["wait",0.5519850541454904],["hear",0.5153882032022076],["stand",0.5125],["sha",0.48412291827592707],["shout",0.48412291827592707],["stop",0.48412291827592707],["find",0.480071609241788],["come",0.4684573056224134],["walk",0.45643546458763834]]],"^4",["^2",[["great",0.586856917541803],["bright",0.5519850541454904],["large",0.5322871277148596],["curious",0.4999999999999999],["low",0.49410588440130926],["white",0.48412291827592707],["high",0.45305152225567213]]]],"^5N",["^ ","^1",["^2",[["inch",0.7071067811865475],["face",0.5773502691896257],["side",0.5773502691896257],["size",0.5773502691896257],["baby",0.4999999999999999],["serpent",0.4999999999999999],["caterpillar",0.4999999999999999]]],"^3",["^2",[["frighten",0.8164965809277259],["ask",0.8164965809277259],["knock",0.7071067811865475],["open",0.5345224838248488],["produce",0.4999999999999999],["fly",0.4999999999999999],["mind",0.4999999999999999],["stretch",0.4999999999999999],["sneeze",0.4999999999999999]]],"^4",["^2",[["three-legged",0.7071067811865475],["right-hand",0.7071067811865475],["lowand",0.7071067811865475],["open",0.7071067811865475],["solemn",0.7071067811865475],["left-hand",0.4999999999999999],["delighted",0.4999999999999999],["full",0.4999999999999999],["sudden",0.4999999999999999],["entangled",0.4999999999999999],["sharp",0.4999999999999999],["free",0.4999999999999999]]]],"^B3",["^ ","^1",["^2",[["ear",0.7071067811865475]]],"^3",["^2",[["play",0.6324555320336758],["tuck",0.4999999999999999],["stamp",0.4999999999999999],["quarrel",0.4999999999999999],["fly",0.4999999999999999]]],"^4",["^2",[["underher",0.7071067811865475],["alive",0.7071067811865475],["helpless",0.7071067811865475],["hush",0.7071067811865475],["fond",0.4999999999999999],["moral",0.4999999999999999],["timid",0.4999999999999999]]]],"wet",["^ ","^1",["^2",[["dodo",0.9999999999999998],["course",0.8164965809277259],["english",0.7161148740394329],["party",0.7071067811865475],["question",0.6324555320336758],["mouse",0.5773502691896257],["round",0.5345224838248488]]],"^3",["^2",[["crowd",0.8164965809277259],["continue",0.4999999999999999],["hate",0.4999999999999999],["call",0.4999999999999999]]],"^4",["^2",[["found",0.9999999999999998],["dry",0.9999999999999998],["draggled",0.7071067811865475],["naturalto",0.7071067811865475],["ready",0.4999999999999999],["offended",0.4999999999999999],["easy",0.4999999999999999],["pale",0.4999999999999999]]]],"^B\x3c",["^ ","^1",["^2",[["alice",0.7229988054812212],["rabbit",0.6696463077895912],["illustration",0.637054557566909],["duchess",0.612904702146299],["voice",0.6046452385392099],["moment",0.5760585248760332],["arm",0.5444655064804709],["white",0.5383819020581655],["minute",0.5218824523783344],["head",0.5191639914323797],["door",0.5185920324305064],["thing",0.5126387196522173],["hand",0.5107539184552492],["glass",0.48643230329071346],["day",0.48154341234307685],["table",0.4788692116704649],["foot",0.4780235448773793],["mind",0.4662524041201569],["creature",0.4662524041201569],["eye",0.4601883601523796],["glove",0.45841567112854237],["pair",0.45841567112854237],["fan",0.45841567112854237]]],"^3",["^2",[["hurry",0.6538625481582945],["come",0.6226077813826313],["look",0.5843817042692088],["fall",0.5746430540045578],["drop",0.5383819020581655],["sit",0.5188975413172557],["think",0.5144927536231884],["feel",0.5087230797227998],["leave",0.5073403808614559],["hear",0.5036630526336385],["begin",0.5032175786762632],["turn",0.4832819673966073],["wonder",0.48154341234307685]]],"^4",["^2",[["large",0.7220263657073482],["great",0.4914731871829905],["curious",0.48154341234307685],["low",0.4758668672668006],["late",0.4662524041201569]]]],"^B\x3e",["^ ","^1",["^2",[["tear",0.6979824404521127],["moment",0.6037267439068863],["chin",0.5847053462046861],["foot",0.5748986646151399],["inch",0.5063696835418332],["english",0.48717948717948717],["pool",0.48717948717948717],["key",0.48717948717948717],["minute",0.4828045495852676],["hand",0.4803844614152614],["door",0.47149796999817256],["bit",0.45291081365783825],["deal",0.45291081365783825]]],"^3",["^2",[["mind",0.7161148740394329],["grow",0.5783149319662402],["feel",0.5741692517632145],["lie",0.5063696835418332],["give",0.5063696835418332],["eat",0.5063696835418332],["finish",0.5063696835418332],["speak",0.49502183794921617],["leave",0.4852615860619696],["look",0.45802861241434445],["set",0.45291081365783825],["work",0.45291081365783825]]],"^4",["^2",[["sudden",0.7161148740394329],["good-by",0.5063696835418332],["french",0.5063696835418332],["right-hand",0.5063696835418332],["shebegan",0.5063696835418332],["first",0.5063696835418332],["surprised",0.5063696835418332],["golden",0.48717948717948717],["high",0.466711064599092]]]],"^B@",["^ ","^1",["^2",[["face",0.5773502691896257],["cook",0.4999999999999999],["arm",0.47673129462279606]]],"^3",["^2",[["knock",0.7071067811865475],["grunt",0.7071067811865475],["sit",0.5345224838248488],["break",0.4999999999999999],["grin",0.4999999999999999],["produce",0.4999999999999999],["hurt",0.4999999999999999],["sneeze",0.4999999999999999]]],"^4",["^2",[["three-legged",0.7071067811865475],["lowand",0.7071067811865475],["violentlythat",0.7071067811865475],["loud",0.7071067811865475],["queer-shapedlittle",0.7071067811865475],["open",0.7071067811865475],["solemn",0.7071067811865475],["full",0.4999999999999999],["entangled",0.4999999999999999],["ready",0.4999999999999999]]]],"^BF",["^ ","^1",["^2",[["serpent",0.7071067811865475],["caterpillar",0.7071067811865475],["size",0.6123724356957945],["neck",0.5249999999999999],["change",0.4999999999999999],["pigeon",0.4999999999999999],["hand",0.4743416490252569]]],"^3",["^2",[["nibble",0.7499999999999999],["stretch",0.7071067811865475],["work",0.6708203932499369],["remember",0.5773502691896257],["grow",0.5710402407201607],["ornament",0.4999999999999999],["change",0.4999999999999999]]],"^4",["^2",[["free",0.7071067811865475],["good",0.6123724356957945],["alittle",0.5249999999999999],["sulky",0.4999999999999999],["grand",0.4999999999999999],["right-hand",0.4999999999999999],["iused",0.4999999999999999],["numberof",0.4999999999999999],["raw",0.4999999999999999],["footstepsand",0.4999999999999999],["asshe",0.4999999999999999],["andshe",0.4999999999999999]]]],"eat",["^ ","^1",["^2",[["cake",0.7071067811865475],["size",0.6123724356957945],["bird",0.4999999999999999],["half",0.4999999999999999],["change",0.4999999999999999],["inch",0.4999999999999999],["minute",0.4767312946227961],["hand",0.4743416490252569],["moment",0.4585633803868072]]],"^3",["^2",[["happen",0.7071067811865475],["grow",0.5710402407201607],["come",0.519561180444343],["speak",0.5056498968474316],["lie",0.4999999999999999],["finish",0.4999999999999999]]],"^4",["^2",[["delighted",0.7071067811865475],["lovely",0.7071067811865475],["sharp",0.7071067811865475],["small",0.6175402271944638],["poor",0.5063696835418332],["safe",0.4999999999999999],["right-hand",0.4999999999999999],["onea-piece",0.4999999999999999],["good-by",0.4999999999999999],["shewandered",0.4999999999999999],["thesecond",0.4999999999999999],["sad",0.4999999999999999],["surprised",0.4999999999999999]]]],"^KH",["^ ","^1",["^2",[["sort",0.6388765649999398],["side",0.5773502691896257],["hedgehog",0.4999999999999999],["tart",0.4999999999999999],["arm",0.47673129462279606]]],"^3",["^2",[["quarrel",0.9999999999999998],["steal",0.7071067811865475],["play",0.6324555320336758],["walk",0.5773502691896257],["suppose",0.4999999999999999],["fly",0.4999999999999999],["stamp",0.4999999999999999],["tuck",0.4999999999999999],["speak",0.47673129462279606],["leave",0.4517539514526256]]],"^4",["^2",[["underher",0.7071067811865475],["alive",0.7071067811865475],["fair",0.7071067811865475],["helpless",0.7071067811865475],["toomuch",0.7071067811865475],["fond",0.4999999999999999],["low",0.4999999999999999]]]],"^BM",["^ ","^1",["^2",[["hearts",0.8660254037844386],["king",0.6708203932499369],["soldier",0.5773502691896257],["head",0.5590169943749475],["white",0.49999999999999994],["court",0.4999999999999999],["majesty",0.4999999999999999],["trial",0.4999999999999999],["queen",0.4743416490252569]]],"^3",["^2",[["take",0.8660254037844386],["walk",0.6123724356957945],["shout",0.5773502691896257],["ornament",0.4999999999999999],["steal",0.4999999999999999],["sign",0.4999999999999999],["read",0.4999999999999999]]],"^4",["^2",[["asleep",0.4999999999999999],["asshe",0.4999999999999999],["footstepsand",0.4999999999999999],["fair",0.4999999999999999],["grand",0.4999999999999999],["dead",0.4999999999999999],["toomuch",0.4999999999999999],["alittle",0.4999999999999999]]]],"^5T",["^ ","^1",["^2",[["direction",0.7071067811865475],["tree",0.7071067811865475],["bit",0.6324555320336758],["cook",0.4999999999999999],["baby",0.4999999999999999],["cat",0.4999999999999999]]],"^3",["^2",[["wave",0.7071067811865475],["grunt",0.7071067811865475],["set",0.6324555320336758],["cry",0.5031546054266276],["help",0.4999999999999999],["hurt",0.4999999999999999]]],"^4",["^2",[["queer-shapedlittle",0.7071067811865475],["loud",0.7071067811865475],["violentlythat",0.7071067811865475],["satdown",0.7071067811865475],["mad",0.7071067811865475],["ready",0.4999999999999999],["left-hand",0.4999999999999999]]]],"^5U",["^ ","^1",["^2",[["glove",0.8304547985373997],["pair",0.8304547985373997],["fan",0.8304547985373997],["mary",0.512989176042577],["ann",0.512989176042577],["table",0.5031546054266276]]],"^3",["^2",[["drop",0.7071067811865475],["execute",0.4999999999999999],["lose",0.4999999999999999],["shrink",0.4999999999999999],["sir",0.4999999999999999]]],"^4",["^2",[["white",0.8164965809277259],["tosave",0.7071067811865475],["to-day",0.7071067811865475],["aremarkable",0.7071067811865475],["little",0.7071067811865475],["agreat",0.7071067811865475],["angry",0.4999999999999999],["usual",0.4999999999999999],["timid",0.4999999999999999]]]],"^5W",["^ ","^1",["^2",[["bill",0.4999999999999999],["window",0.4999999999999999]]],"^3",["^2",[["hate",0.4999999999999999],["offend",0.4999999999999999],["help",0.4999999999999999],["spread",0.4999999999999999],["waste",0.4999999999999999],["come",0.47404546313997725]]],"^4",["^2",[["onea-piece",0.7071067811865475],["broken",0.7071067811865475],["yer",0.7071067811865475],["sad",0.7071067811865475],["long",0.5383819020581655],["angry",0.4999999999999999]]]],"^5Y",["^ ","^1",["^2",[["party",0.6175402271944638],["voice",0.6130221679058182],["illustration",0.5806400409400451],["ann",0.5674803065350239],["mary",0.5674803065350239],["mouse",0.5042194840896107],["dinah",0.4753826885415284],["creature",0.4753826885415284],["alice",0.47274184126735436],["glove",0.45933400317823764],["pair",0.45933400317823764],["fan",0.45933400317823764]]],"^3",["^2",[["hear",0.5470167438441554],["leave",0.5128915728290658],["sha",0.4753826885415284],["swim",0.4753826885415284]]],"^4",["^2",[["great",0.6138442562023102],["shrill",0.582222509739582],["pale",0.582222509739582],["low",0.582222509739582],["late",0.4753826885415284]]]],"^BS",["^ ","^1",["^2",[["glove",1.0000000000000002],["fan",1.0000000000000002],["mary",0.8094272134003795],["ann",0.8094272134003795],["rabbit",0.47598581911649424],["time",0.45841567112854237]]],"^3",["^2",[["trot",0.8304547985373997],["drop",0.5872202195147035],["hurry",0.45933400317823764],["tremble",0.45933400317823764],["shrink",0.45675013919556984]]],"^4",["^2",[["white",0.6780635036208105],["tosave",0.5872202195147035],["to-day",0.5872202195147035],["aremarkable",0.5872202195147035],["little",0.5872202195147035],["agreat",0.5872202195147035],["quiteenough",0.5872202195147035],["great",0.5181877251716008]]]],"^5Z",["^ ","^1",["^2",[["garden",0.5345224838248488],["bill",0.4999999999999999],["hedgehog",0.4999999999999999],["cake",0.4999999999999999],["arm",0.47673129462279606]]],"^3",["^2",[["catch",0.8164965809277259],["notice",0.5383819020581655],["quarrel",0.4999999999999999],["fly",0.4999999999999999],["draw",0.4999999999999999],["drink",0.4999999999999999],["suppose",0.4999999999999999],["happen",0.4999999999999999],["shrink",0.4999999999999999]]],"^4",["^2",[["safe",0.7071067811865475],["helpless",0.7071067811865475],["shewandered",0.7071067811865475],["alive",0.7071067811865475],["thesecond",0.7071067811865475],["underher",0.7071067811865475],["delighted",0.4999999999999999],["lovely",0.4999999999999999],["moral",0.4999999999999999],["general",0.4999999999999999],["sharp",0.4999999999999999],["fond",0.4999999999999999]]]],"^5[",["^ ","^1",["^2",[["soldier",0.8164965809277259],["day",0.6324555320336758],["hedgehog",0.4999999999999999],["tart",0.4999999999999999],["white",0.4714045207910317]]],"^3",["^2",[["shout",0.8164965809277259],["steal",0.7071067811865475],["play",0.6324555320336758],["stand",0.6324555320336758],["quarrel",0.4999999999999999],["suppose",0.4999999999999999]]],"^4",["^2",[["fair",0.7071067811865475],["toomuch",0.7071067811865475],["hush",0.7071067811865475],["moral",0.4999999999999999],["timid",0.4999999999999999]]]],"^60",["^ ","^1",["^2",[["sort",0.6388765649999398],["side",0.5773502691896257],["hedgehog",0.4999999999999999],["tart",0.4999999999999999],["arm",0.47673129462279606]]],"^3",["^2",[["steal",0.7071067811865475],["play",0.6324555320336758],["walk",0.5773502691896257],["tuck",0.4999999999999999],["stamp",0.4999999999999999],["fly",0.4999999999999999],["suppose",0.4999999999999999],["speak",0.47673129462279606],["leave",0.4517539514526256]]],"^4",["^2",[["moral",0.9999999999999998],["underher",0.7071067811865475],["alive",0.7071067811865475],["fair",0.7071067811865475],["helpless",0.7071067811865475],["toomuch",0.7071067811865475],["fond",0.4999999999999999],["low",0.4999999999999999]]]],"sha",["^ ","^1",["^2",[["window",0.8164965809277259],["chimney",0.6780635036208105],["air",0.5773502691896257],["rate",0.5163977794943223],["rabbit",0.48412291827592707]]],"^3",["^2",[["spread",0.8164965809277259],["wait",0.5847053462046861],["tremble",0.4753826885415284]]],"^4",["^2",[["proper",0.5773502691896257],["quiteenough",0.5773502691896257],["broken",0.5773502691896257],["yer",0.5773502691896257]]]],"^C2",["^ ","^1",["^2",[["alice",0.6963106238227913],["rabbit",0.6874999999999999],["white",0.6521864934374386],["door",0.6102644348250774],["illustration",0.5879747322073337],["moment",0.5810480379709637],["hall",0.5590169943749475],["knave",0.5590169943749475],["voice",0.5572784898833115],["minute",0.533001790889026],["queen",0.5303300858899106],["garden",0.5282214092053229],["time",0.5191639914323797],["king",0.4999999999999999],["table",0.4972233026098313],["foot",0.48820841617808947],["soldier",0.48412291827592707],["hearts",0.48412291827592707],["idea",0.4678463512023293],["face",0.45643546458763834],["side",0.45643546458763834]]],"^3",["^2",[["walk",0.6846531968814575],["find",0.6428077479678178],["leave",0.6160714285714285],["forget",0.5590169943749475],["notice",0.5320353317242178],["open",0.5282214092053229],["think",0.5266881072502403],["hear",0.5153882032022076],["look",0.514077395128222],["turn",0.5103103630798287],["stand",0.4999999999999999],["play",0.4999999999999999],["take",0.48412291827592707],["shout",0.48412291827592707],["speak",0.4711114759027556],["come",0.4684573056224134]]],"^4",["^2",[["great",0.586856917541803],["bright",0.5519850541454904],["high",0.533001790889026]]]],"^64",["^ ","^1",["^2",[["pigeon",0.7071067811865475],["deal",0.6324555320336758],["tone",0.5031546054266276],["serpent",0.4999999999999999],["dodo",0.4999999999999999]]],"^3",["^2",[]],"^4",["^2",[["sulky",0.7071067811865475],["numberof",0.7071067811865475],["raw",0.7071067811865475],["andshe",0.7071067811865475],["usual",0.4999999999999999],["wet",0.4999999999999999],["entangled",0.4999999999999999],["easy",0.4999999999999999],["found",0.4999999999999999],["offended",0.4999999999999999],["dry",0.4999999999999999],["free",0.4999999999999999]]]],"^KO",["^ ","^1",["^2",[["hearts",0.5773502691896257],["garden",0.5669467095138407],["mushroom",0.5249999999999999],["key",0.5063696835418332],["pigeon",0.4999999999999999],["wood",0.4999999999999999],["hall",0.4999999999999999],["knave",0.4999999999999999],["neck",0.4999999999999999],["door",0.4816209743009517]]],"^3",["^2",[["walk",0.6123724356957945],["take",0.5773502691896257],["ornament",0.4999999999999999],["lead",0.4999999999999999],["nibble",0.4999999999999999]]],"^4",["^2",[["hot",0.7071067811865475],["golden",0.5063696835418332],["bright",0.5063696835418332],["sulky",0.4999999999999999],["grand",0.4999999999999999],["nice",0.4999999999999999],["numberof",0.4999999999999999],["raw",0.4999999999999999],["footstepsand",0.4999999999999999],["asshe",0.4999999999999999],["andshe",0.4999999999999999],["asleep",0.4999999999999999],["marked",0.4999999999999999]]]],"^KP",["^ ","^1",["^2",[["glass",0.6388765649999398],["window",0.5499999999999999],["mary",0.512989176042577],["ann",0.512989176042577],["bill",0.4999999999999999],["chimney",0.45675013919556984]]],"^3",["^2",[["wonder",0.6324555320336758],["spread",0.5499999999999999],["trot",0.4999999999999999],["pull",0.4999999999999999],["help",0.4999999999999999],["execute",0.4999999999999999],["lose",0.4999999999999999],["come",0.47404546313997725]]],"^4",["^2",[["aremarkable",0.7071067811865475],["little",0.7071067811865475],["broken",0.7071067811865475],["yer",0.7071067811865475],["sure",0.7071067811865475]]]],"^C\x3d",["^ ","^1",["^2",[["hare",1.0],["dormouse",1.0],["hatter",1.0],["tea",0.6666666666666666],["people",0.5773502691896257]]],"^3",["^2",[["guess",0.6666666666666666],["wave",0.5773502691896257],["give",0.5773502691896257],["remark",0.5773502691896257],["reply",0.5163977794943223]]],"^4",["^2",[["asleep",0.5773502691896257],["satdown",0.5773502691896257],["first",0.5773502691896257],["mad",0.5773502691896257]]]],"^C\x3e",["^ ","^1",["^2",[["majesty",0.6708203932499369],["king",0.5999999999999999],["queen",0.565685424949238],["evidence",0.5163977794943223]]],"^3",["^2",[["sneeze",0.6324555320336758],["carry",0.6324555320336758]]],"^4",["^2",[["entangled",0.6324555320336758]]]],"^66",["^ ","^1",["^2",[["soldier",0.5773502691896257],["hearts",0.5773502691896257],["key",0.5063696835418332],["child",0.4999999999999999],["majesty",0.4999999999999999],["knave",0.4999999999999999],["croquet",0.4999999999999999],["mushroom",0.4999999999999999],["hall",0.4999999999999999]]],"^3",["^2",[["carry",0.7071067811865475],["stop",0.5773502691896257],["take",0.5773502691896257],["nibble",0.4999999999999999]]],"^4",["^2",[["asshe",0.9999999999999998],["footstepsand",0.9999999999999998],["grand",0.9999999999999998],["white",0.5773502691896257],["bright",0.5063696835418332],["golden",0.5063696835418332],["alittle",0.4999999999999999]]]],"^C@",["^ ","^1",["^2",[["pair",1.0000000000000002],["fan",1.0000000000000002],["mary",0.8094272134003795],["ann",0.8094272134003795],["rabbit",0.47598581911649424],["time",0.45841567112854237]]],"^3",["^2",[["trot",0.8304547985373997],["drop",0.5872202195147035],["hurry",0.45933400317823764],["tremble",0.45933400317823764],["shrink",0.45675013919556984]]],"^4",["^2",[["white",0.6780635036208105],["tosave",0.5872202195147035],["to-day",0.5872202195147035],["aremarkable",0.5872202195147035],["little",0.5872202195147035],["agreat",0.5872202195147035],["quiteenough",0.5872202195147035],["great",0.5181877251716008]]]],"^KR",["^ ","^1",["^2",[["bottle",0.4999999999999999],["white",0.4714045207910317]]],"^3",["^2",[["hurry",0.582222509739582],["notice",0.5383819020581655],["produce",0.4999999999999999],["drink",0.4999999999999999],["kneel",0.4999999999999999],["lose",0.4999999999999999],["know",0.4999999999999999],["hope",0.4999999999999999]]],"^4",["^2",[["thinkabout",0.7071067811865475],["nice",0.7071067811865475],["marked",0.7071067811865475],["sleepy",0.5499999999999999],["tired",0.4999999999999999],["hot",0.4999999999999999],["tiny",0.4999999999999999]]]],"^KV",["^ ","^1",["^2",[["cake",0.9999999999999998],["size",0.5773502691896257],["garden",0.5345224838248488],["tear",0.512989176042577],["bill",0.4999999999999999],["door",0.45407660918649984]]],"^3",["^2",[["happen",0.9999999999999998],["lie",0.7071067811865475],["eat",0.7071067811865475],["grow",0.5383819020581655],["hold",0.5345224838248488],["suppose",0.4999999999999999],["drink",0.4999999999999999],["draw",0.4999999999999999],["tuck",0.4999999999999999],["shrink",0.4999999999999999]]],"^4",["^2",[["thesecond",0.7071067811865475],["shewandered",0.7071067811865475],["good-by",0.7071067811865475],["safe",0.7071067811865475],["surprised",0.7071067811865475],["small",0.582222509739582],["sharp",0.4999999999999999],["general",0.4999999999999999],["delighted",0.4999999999999999]]]],"^69",["^ ","^1",["^2",[["bird",0.5773502691896257],["party",0.5773502691896257],["question",0.5163977794943223],["mouse",0.4714045207910317],["mary",0.46073929912086503],["ann",0.46073929912086503]]],"^3",["^2",[["notice",0.6593804733957871],["begin",0.5222329678670935]]],"^4",["^2",[["thesecond",0.5773502691896257],["aremarkable",0.5773502691896257],["shewandered",0.5773502691896257],["little",0.5773502691896257],["safe",0.5773502691896257],["sure",0.5773502691896257],["great",0.5270462766947299]]]],"ask",["^ ","^1",["^2",[["inch",0.5773502691896257],["sort",0.5216405309573011],["deal",0.5163977794943223],["foot",0.5042194840896107],["side",0.49497474683058323],["face",0.4714045207910317],["size",0.4714045207910317]]],"^3",["^2",[["break",0.8164965809277259],["frighten",0.6666666666666666],["run",0.6666666666666666],["knock",0.5773502691896257],["round",0.5773502691896257],["reply",0.5163977794943223]]],"^4",["^2",[["open",0.5773502691896257],["lowand",0.5773502691896257],["right-hand",0.5773502691896257],["three-legged",0.5773502691896257],["solemn",0.5773502691896257]]]],"^6\x3c",["^ ","^1",["^2",[["side",0.5773502691896257],["baby",0.4999999999999999],["eye",0.47404546313997725]]],"^3",["^2",[["knock",0.7071067811865475],["peep",0.7071067811865475],["sit",0.5345224838248488],["break",0.4999999999999999],["sneeze",0.4999999999999999]]],"^4",["^2",[["three-legged",0.7071067811865475],["lowand",0.7071067811865475],["thinkabout",0.7071067811865475],["open",0.7071067811865475],["solemn",0.7071067811865475],["dark",0.4999999999999999],["full",0.4999999999999999],["entangled",0.4999999999999999],["tired",0.4999999999999999],["sleepy",0.4999999999999999]]]],"fly",["^ ","^1",["^2",[["side",0.5773502691896257],["hedgehog",0.4999999999999999],["serpent",0.4999999999999999],["caterpillar",0.4999999999999999]]],"^3",["^2",[["break",0.4999999999999999],["tuck",0.4999999999999999],["quarrel",0.4999999999999999],["mind",0.4999999999999999],["stretch",0.4999999999999999],["speak",0.47673129462279606],["leave",0.4517539514526256]]],"^4",["^2",[["helpless",0.7071067811865475],["right-hand",0.7071067811865475],["alive",0.7071067811865475],["underher",0.7071067811865475],["left-hand",0.4999999999999999],["delighted",0.4999999999999999],["moral",0.4999999999999999],["sudden",0.4999999999999999],["sharp",0.4999999999999999],["fond",0.4999999999999999],["free",0.4999999999999999]]]],"^6B",["^ ","^1",["^2",[["size",0.5773502691896257],["bill",0.4999999999999999],["cake",0.4999999999999999],["caterpillar",0.4999999999999999],["arm",0.47673129462279606]]],"^3",["^2",[["drink",0.5499999999999999],["grow",0.5383819020581655],["tuck",0.4999999999999999],["suppose",0.4999999999999999],["stretch",0.4999999999999999],["happen",0.4999999999999999],["shrink",0.4999999999999999],["sir",0.4999999999999999]]],"^4",["^2",[["safe",0.7071067811865475],["iused",0.7071067811865475],["shewandered",0.7071067811865475],["thesecond",0.7071067811865475],["long",0.5383819020581655],["delighted",0.4999999999999999],["lovely",0.4999999999999999],["general",0.4999999999999999],["sleepy",0.4999999999999999],["sharp",0.4999999999999999]]]],"yer",["^ ","^1",["^2",[["bill",0.7071067811865475],["window",0.7071067811865475],["chimney",0.5872202195147035],["air",0.4999999999999999],["glass",0.4517539514526256]]],"^3",["^2",[["pull",0.7071067811865475],["help",0.7071067811865475],["spread",0.7071067811865475],["sha",0.5773502691896257],["wait",0.5063696835418332]]],"^4",["^2",[["broken",0.9999999999999998],["angry",0.7071067811865475],["sure",0.4999999999999999]]]],"^6E",["^ ","^1",["^2",[["mouse",0.5773502691896257],["round",0.5345224838248488],["dodo",0.4999999999999999]]],"^3",["^2",[["let",0.6324555320336758],["sit",0.5345224838248488],["talk",0.5345224838248488],["pull",0.4999999999999999],["offend",0.4999999999999999],["waste",0.4999999999999999],["call",0.4999999999999999]]],"^4",["^2",[["draggled",0.7071067811865475],["naturalto",0.7071067811865475],["onea-piece",0.7071067811865475],["sad",0.7071067811865475],["ready",0.4999999999999999],["found",0.4999999999999999],["pale",0.4999999999999999],["wet",0.4999999999999999],["dry",0.4999999999999999]]]],"^6F",["^ ","^1",["^2",[["mushroom",0.6708203932499369],["serpent",0.6324555320336758],["bit",0.5999999999999999],["deal",0.5999999999999999],["hand",0.565685424949238],["size",0.5477225575051661],["face",0.5477225575051661],["garden",0.5070925528371099],["child",0.4695742752749558],["key",0.45291081365783825]]],"^3",["^2",[["set",0.7999999999999999],["nibble",0.6708203932499369],["grow",0.5107539184552492],["hold",0.5070925528371099],["feel",0.5070925528371099],["think",0.4935819976516537],["cry",0.47733437050543803],["speak",0.4522670168666454]]],"^4",["^2",[["free",0.6324555320336758],["good",0.5477225575051661],["golden",0.45291081365783825],["poor",0.45291081365783825]]]],"^6G",["^ ","^1",["^2",[["house",0.582222509739582],["mouse",0.5773502691896257]]],"^3",["^2",[["talk",0.5345224838248488],["pull",0.4999999999999999],["hate",0.4999999999999999],["waste",0.4999999999999999]]],"^4",["^2",[["passionate",0.7071067811865475],["onea-piece",0.7071067811865475],["fancy",0.7071067811865475],["nicelittle",0.7071067811865475],["subject",0.7071067811865475],["sad",0.7071067811865475],["afraid",0.6324555320336758],["fond",0.4999999999999999],["shrill",0.4999999999999999]]]],"^KZ",["^ ","^1",["^2",[["change",0.7071067811865475],["face",0.5773502691896257],["size",0.5773502691896257],["bill",0.4999999999999999],["cake",0.4999999999999999],["serpent",0.4999999999999999],["caterpillar",0.4999999999999999]]],"^3",["^2",[["eat",0.7071067811865475],["grow",0.5383819020581655],["stretch",0.4999999999999999],["suppose",0.4999999999999999],["mind",0.4999999999999999],["drink",0.4999999999999999],["draw",0.4999999999999999],["fly",0.4999999999999999],["tuck",0.4999999999999999],["break",0.4999999999999999],["shrink",0.4999999999999999],["happen",0.4999999999999999]]],"^4",["^2",[["sharp",0.9999999999999998],["safe",0.7071067811865475],["right-hand",0.7071067811865475],["shewandered",0.7071067811865475],["thesecond",0.7071067811865475],["left-hand",0.4999999999999999],["lovely",0.4999999999999999],["general",0.4999999999999999],["sudden",0.4999999999999999],["free",0.4999999999999999]]]],"^DB",["^ ","^1",["^2",[["knave",0.8660254037844386],["soldier",0.6666666666666666],["trial",0.5773502691896257],["king",0.5163977794943223],["head",0.48412291827592707]]],"^3",["^2",[["take",1.0],["walk",0.7071067811865475],["ornament",0.5773502691896257],["steal",0.5773502691896257],["play",0.5163977794943223],["stand",0.5163977794943223]]],"^4",["^2",[["asleep",0.5773502691896257],["asshe",0.5773502691896257],["footstepsand",0.5773502691896257],["fair",0.5773502691896257],["grand",0.5773502691896257],["toomuch",0.5773502691896257],["alittle",0.5773502691896257]]]],"^6H",["^ ","^1",["^2",[["bill",0.4999999999999999],["window",0.4999999999999999]]],"^3",["^2",[["wave",0.7071067811865475],["grin",0.4999999999999999],["pull",0.4999999999999999],["spread",0.4999999999999999]]],"^4",["^2",[["satdown",0.7071067811865475],["broken",0.7071067811865475],["yer",0.7071067811865475],["mad",0.7071067811865475],["angry",0.4999999999999999],["left-hand",0.4999999999999999]]]],"^6K",["^ ","^1",["^2",[["idea",0.5773502691896257],["bottle",0.5499999999999999],["garden",0.5345224838248488],["bill",0.4999999999999999],["cake",0.4999999999999999],["door",0.45407660918649984]]],"^3",["^2",[["know",0.5499999999999999],["kneel",0.5499999999999999],["draw",0.5499999999999999],["hope",0.5499999999999999],["notice",0.5383819020581655],["lose",0.4999999999999999],["suppose",0.4999999999999999],["tuck",0.4999999999999999],["shrink",0.4999999999999999],["happen",0.4999999999999999]]],"^4",["^2",[["bright",0.7161148740394329],["safe",0.7071067811865475],["nice",0.7071067811865475],["shewandered",0.7071067811865475],["thesecond",0.7071067811865475],["marked",0.7071067811865475],["small",0.582222509739582],["tiny",0.5499999999999999],["long",0.5383819020581655],["delighted",0.4999999999999999],["lovely",0.4999999999999999],["dark",0.4999999999999999],["general",0.4999999999999999],["hot",0.4999999999999999],["sharp",0.4999999999999999]]]],"^6P",["^ ","^1",["^2",[["day",0.5163977794943223],["tart",0.4999999999999999],["cook",0.4999999999999999],["serpent",0.4999999999999999],["witness",0.4999999999999999],["caterpillar",0.4999999999999999],["time",0.4662524041201569]]],"^3",["^2",[["give",0.7071067811865475],["remember",0.6666666666666666],["sit",0.6546536707079771],["grunt",0.5773502691896257],["peep",0.5773502691896257],["grow",0.5383819020581655],["feel",0.5345224838248488],["stretch",0.4999999999999999],["carry",0.4999999999999999],["execute",0.4999999999999999],["fly",0.4999999999999999],["break",0.4999999999999999],["sneeze",0.4999999999999999],["hurry",0.4991518229686048],["leave",0.4517539514526256]]],"^4",["^2",[["sleepy",0.8164965809277259],["poor",0.7161148740394329],["first",0.7071067811865475],["right-hand",0.7071067811865475],["iused",0.5773502691896257],["thinkabout",0.5773502691896257],["violentlythat",0.5773502691896257],["loud",0.5773502691896257],["queer-shapedlittle",0.5773502691896257],["left-hand",0.4999999999999999],["delighted",0.4999999999999999],["sudden",0.4999999999999999],["sharp",0.4999999999999999],["free",0.4999999999999999],["large",0.4645722098118832]]]],"^DI",["^ ","^1",["^2",[["english",0.7435897435897436],["tear",0.6979824404521127],["glass",0.6633880657639324],["mouse",0.6201736729460422],["cat",0.5370861555295746],["table",0.5224589204868025],["hall",0.5063696835418332],["party",0.5063696835418332],["animal",0.5063696835418332],["child",0.5063696835418332],["key",0.48717948717948717],["illustration",0.4720774754816659],["door",0.47149796999817256]]],"^3",["^2",[["swim",0.8770580193070291],["fall",0.540474745331175],["hear",0.5355041604715625],["lie",0.5063696835418332],["wonder",0.45291081365783825]]],"^4",["^2",[["high",0.6276459144608478],["round",0.5847053462046861],["shebegan",0.5063696835418332],["french",0.5063696835418332],["little",0.5063696835418332],["naturalto",0.5063696835418332],["good-by",0.5063696835418332],["aremarkable",0.5063696835418332],["draggled",0.5063696835418332],["surprised",0.5063696835418332],["golden",0.48717948717948717],["poor",0.48717948717948717]]]],"^6V",["^ ","^1",["^2",[["mary",0.512989176042577],["ann",0.512989176042577],["tart",0.4999999999999999],["cook",0.4999999999999999],["witness",0.4999999999999999],["white",0.4714045207910317],["door",0.45407660918649984]]],"^3",["^2",[["give",0.7071067811865475],["drop",0.7071067811865475],["feel",0.5345224838248488],["carry",0.4999999999999999],["lose",0.4999999999999999],["mind",0.4999999999999999],["trot",0.4999999999999999],["sneeze",0.4999999999999999],["call",0.4999999999999999],["leave",0.4517539514526256]]],"^4",["^2",[["aremarkable",0.7071067811865475],["little",0.7071067811865475],["first",0.7071067811865475],["angry",0.4999999999999999]]]],"^DW",["^ ","^1",["^2",[["size",0.6487491201346025],["foot",0.6476486119289304],["arm",0.6321106074243379],["alice",0.6123724356957945],["moment",0.582964037329089],["voice",0.5614752491266591],["head",0.533001790889026],["illustration",0.5242186517143346],["time",0.5218824523783344],["face",0.518999296107682],["side",0.518999296107682],["duchess",0.5125692857821982],["door",0.5102306457688559],["air",0.49262233777688935],["inch",0.49262233777688935]]],"^3",["^2",[["grow",0.7138547751632839],["find",0.555127381653369],["come",0.5433223562855042],["think",0.5133270023393454],["hear",0.5084695618284355],["leave",0.5076207532276439],["begin",0.49829829796592645],["forget",0.49262233777688935],["open",0.4925124796069056],["wait",0.4828045495852676],["sit",0.4804999801042981],["eat",0.4767312946227961],["peep",0.4767312946227961],["call",0.47193990372426947]]],"^4",["^2",[["round",0.5504818825631803],["large",0.5114771692875645],["poor",0.4828045495852676]]]],"^L1",["^ ","^1",["^2",[["direction",0.7071067811865475],["room",0.7071067811865475],["bit",0.6324555320336758],["serpent",0.4999999999999999],["caterpillar",0.4999999999999999]]],"^3",["^2",[["remark",0.7071067811865475],["wave",0.7071067811865475],["nibble",0.7071067811865475],["set",0.6324555320336758],["reply",0.6324555320336758],["open",0.5345224838248488],["stretch",0.4999999999999999],["mind",0.4999999999999999],["help",0.4999999999999999],["fly",0.4999999999999999],["grin",0.4999999999999999],["break",0.4999999999999999]]],"^4",["^2",[["satdown",0.7071067811865475],["right-hand",0.7071067811865475],["mad",0.7071067811865475],["free",0.4999999999999999],["sharp",0.4999999999999999],["sudden",0.4999999999999999],["delighted",0.4999999999999999]]]],"^6Y",["^ ","^1",["^2",[["tart",0.7071067811865475],["soldier",0.5773502691896257],["hearts",0.5773502691896257],["creature",0.5773502691896257],["chin",0.5773502691896257],["trial",0.4999999999999999],["knave",0.4999999999999999],["half",0.4999999999999999],["animal",0.4999999999999999],["bird",0.4999999999999999],["court",0.4999999999999999],["sort",0.4517539514526256]]],"^3",["^2",[["stamp",0.7071067811865475],["quarrel",0.7071067811865475],["suppose",0.7071067811865475],["take",0.5773502691896257],["shout",0.5773502691896257],["round",0.4999999999999999],["read",0.4999999999999999]]],"^4",["^2",[["fair",0.9999999999999998],["toomuch",0.9999999999999998],["moral",0.7071067811865475]]]],"^E?",["^ ","^1",["^2",[["alice",0.7711659806403351],["illustration",0.7118904333399787],["rabbit",0.6983616518790866],["time",0.6046452385392099],["thing",0.6024663296921114],["arm",0.5870267994146745],["duchess",0.5666416879720118],["question",0.5643326479831002],["silence",0.5643326479831002],["minute",0.5614752491266591],["head",0.5572784898833115],["tone",0.5387507385613604],["white",0.5131670395438199],["air",0.5047544651250687],["party",0.5047544651250687],["court",0.5047544651250687],["queen",0.4868329995252495],["hand",0.4788521306805733],["day",0.4514661183864802],["king",0.4514661183864802]]],"^3",["^2",[["tremble",0.6130221679058182],["hear",0.6022313946307564],["leave",0.548208858040726],["call",0.5442958403142903],["think",0.5367075712876134],["turn",0.5298920292217051],["find",0.5069419848157268],["wait",0.49840509960483137],["hold",0.4769481385251274],["grow",0.47078401507367224],["begin",0.46417705225754263],["let",0.4514661183864802]]],"^4",["^2",[["low",0.6335246665953216],["great",0.6143675701121218]]]],"^6[",["^ ","^1",["^2",[["bird",0.7071067811865475],["animal",0.7071067811865475],["silence",0.6324555320336758],["bill",0.4999999999999999],["tart",0.4999999999999999],["cake",0.4999999999999999],["arm",0.47673129462279606]]],"^3",["^2",[["steal",0.7071067811865475],["tuck",0.4999999999999999],["stamp",0.4999999999999999],["quarrel",0.4999999999999999],["draw",0.4999999999999999],["drink",0.4999999999999999],["happen",0.4999999999999999],["shrink",0.4999999999999999]]],"^4",["^2",[["toomuch",0.7071067811865475],["safe",0.7071067811865475],["fair",0.7071067811865475],["shewandered",0.7071067811865475],["thesecond",0.7071067811865475],["delighted",0.4999999999999999],["lovely",0.4999999999999999],["moral",0.4999999999999999],["general",0.4999999999999999],["sharp",0.4999999999999999]]]],"^L5",["^ ","^1",["^2",[["change",0.7071067811865475],["pigeon",0.7071067811865475],["deal",0.6324555320336758],["garden",0.5345224838248488],["serpent",0.4999999999999999]]],"^3",["^2",[["hold",0.5345224838248488],["trot",0.4999999999999999],["continue",0.4999999999999999],["shrink",0.4999999999999999],["sir",0.4999999999999999]]],"^4",["^2",[["sulky",0.7071067811865475],["agreat",0.7071067811865475],["numberof",0.7071067811865475],["raw",0.7071067811865475],["to-day",0.7071067811865475],["tosave",0.7071067811865475],["andshe",0.7071067811865475],["good",0.5773502691896257],["timid",0.4999999999999999],["entangled",0.4999999999999999],["free",0.4999999999999999]]]],"sad",["^ ","^1",["^2",[["jury",0.5773502691896257],["bird",0.4999999999999999],["half",0.4999999999999999],["trial",0.4999999999999999]]],"^3",["^2",[["pull",0.7071067811865475],["hate",0.7071067811865475],["offend",0.7071067811865475],["waste",0.7071067811865475],["beg",0.5773502691896257],["finish",0.4999999999999999],["meet",0.4999999999999999],["eat",0.4999999999999999]]],"^4",["^2",[["onea-piece",0.9999999999999998]]]],"^71",["^ ","^1",["^2",[["baby",0.7071067811865475],["letter",0.4999999999999999],["wood",0.4999999999999999],["inch",0.4999999999999999],["croquet",0.4999999999999999],["sort",0.4517539514526256]]],"^3",["^2",[["break",0.7071067811865475],["produce",0.7071067811865475],["sneeze",0.7071067811865475],["frighten",0.5773502691896257],["live",0.5773502691896257],["run",0.5773502691896257],["ask",0.5773502691896257],["peep",0.4999999999999999],["lead",0.4999999999999999]]],"^4",["^2",[["open",0.9999999999999998],["lowand",0.9999999999999998],["three-legged",0.9999999999999998],["solemn",0.9999999999999998],["entangled",0.7071067811865475],["full",0.7071067811865475]]]],"^73",["^ ","^1",["^2",[["dormouse",0.5773502691896257],["tea",0.5773502691896257],["march",0.5773502691896257],["hare",0.5773502691896257],["hatter",0.5773502691896257],["room",0.4999999999999999],["tree",0.4999999999999999],["direction",0.4999999999999999],["croquet",0.4999999999999999],["people",0.4999999999999999]]],"^3",["^2",[["grin",0.7071067811865475],["help",0.7071067811865475],["crowd",0.5773502691896257],["guess",0.5773502691896257],["live",0.5773502691896257],["nibble",0.4999999999999999],["remark",0.4999999999999999]]],"^4",["^2",[["satdown",0.9999999999999998],["mad",0.9999999999999998],["left-hand",0.7071067811865475],["glad",0.5773502691896257]]]],"^EN",["^ ","^1",["^2",[["mouse",0.8164965809277259],["dodo",0.7071067811865475],["course",0.5773502691896257],["dinah",0.5773502691896257],["cat",0.5480077554195742],["tone",0.533676050223615],["english",0.5063696835418332],["pool",0.5063696835418332],["voice",0.5047544651250687],["illustration",0.47809144373375745]]],"^3",["^2",[["tremble",0.6175402271944638],["crowd",0.5773502691896257],["move",0.5773502691896257],["swim",0.5773502691896257],["call",0.5303300858899106],["change",0.4999999999999999]]],"^4",["^2",[["wet",0.7071067811865475],["found",0.7071067811865475],["dry",0.7071067811865475],["nicelittle",0.4999999999999999],["fancy",0.4999999999999999],["little",0.4999999999999999],["passionate",0.4999999999999999],["naturalto",0.4999999999999999],["aremarkable",0.4999999999999999],["draggled",0.4999999999999999],["subject",0.4999999999999999],["great",0.45643546458763834]]]],"set",["^ ","^1",["^2",[["bit",0.7999999999999999],["direction",0.6708203932499369],["face",0.5477225575051661],["table",0.47733437050543803],["child",0.4695742752749558],["key",0.45291081365783825]]],"^3",["^2",[["work",0.7999999999999999],["nibble",0.6708203932499369],["grin",0.6324555320336758],["find",0.5207556439232954],["feel",0.5070925528371099],["open",0.5070925528371099],["cry",0.47733437050543803],["speak",0.4522670168666454]]],"^4",["^2",[["left-hand",0.6324555320336758],["large",0.4798081151232538],["golden",0.45291081365783825],["poor",0.45291081365783825]]]],"^74",["^ ","^1",["^2",[["cook",0.7071067811865475],["tart",0.7071067811865475],["witness",0.7071067811865475],["dormouse",0.5773502691896257],["evidence",0.5773502691896257],["march",0.5773502691896257],["hare",0.5773502691896257],["hatter",0.5773502691896257],["majesty",0.4999999999999999],["people",0.4999999999999999],["court",0.4999999999999999]]],"^3",["^2",[["mind",0.7071067811865475],["execute",0.7071067811865475],["sneeze",0.7071067811865475],["carry",0.7071067811865475],["finish",0.4999999999999999],["drop",0.4999999999999999]]],"^4",["^2",[["first",0.9999999999999998],["poor",0.5063696835418332]]]],"^76",["^ ","^1",["^2",[["round",0.5858449331643021],["thing",0.5364417807858202]]],"^3",["^2",[["turn",0.6085806194501845],["call",0.5480077554195742],["come",0.5028011423654931]]],"^4",["^2",[["afraid",0.6708203932499369],["long",0.5900749154108327],["onea-piece",0.4999999999999999],["iused",0.4999999999999999],["quiteenough",0.4999999999999999],["sad",0.4999999999999999]]]],"^79",["^ ","^1",["^2",[["illustration",0.6279217421667403],["head",0.5320353317242178],["tone",0.5282342003228814],["alice",0.5112373581455452],["sort",0.4987413913553295],["door",0.48893325706790014],["duchess",0.48154341234307685],["idea",0.4662524041201569],["moment",0.4655255877716143]]],"^3",["^2",[["move",0.6593804733957871],["walk",0.6216698721602092],["tuck",0.5383819020581655],["drink",0.5383819020581655],["lose",0.5383819020581655],["hurry",0.48585999643274613],["turn",0.4749494986855592],["begin",0.4591336287667879],["look",0.4591336287667879]]],"^4",["^2",[["offended",0.5383819020581655],["hot",0.5383819020581655],["easy",0.5383819020581655],["dark",0.5383819020581655],["great",0.46336536457127725]]]],"^EY",["^ ","^1",["^2",[["eye",0.5028011423654931],["neck",0.4999999999999999],["direction",0.4999999999999999],["moment",0.4585633803868072]]],"^3",["^2",[["remark",0.7499999999999999],["stop",0.5773502691896257],["open",0.5669467095138407],["come",0.5028011423654931],["wave",0.4999999999999999],["nibble",0.4999999999999999]]],"^4",["^2",[["tired",0.7071067811865475],["left-hand",0.7071067811865475],["late",0.5773502691896257],["thinkabout",0.4999999999999999],["satdown",0.4999999999999999],["quiteenough",0.4999999999999999],["right-hand",0.4999999999999999],["mad",0.4999999999999999]]]],"^7\x3c",["^ ","^1",["^2",[["bottle",0.9999999999999998],["neck",0.7071067811865475],["round",0.5345224838248488],["mary",0.512989176042577],["ann",0.512989176042577],["window",0.4999999999999999],["door",0.45407660918649984]]],"^3",["^2",[["know",0.9999999999999998],["hope",0.9999999999999998],["forget",0.7071067811865475],["hurry",0.582222509739582],["drink",0.5499999999999999],["lose",0.5499999999999999],["open",0.5345224838248488],["prove",0.4999999999999999],["spread",0.4999999999999999]]],"^4",["^2",[["tiny",0.9999999999999998],["bright",0.7161148740394329],["quiteenough",0.7071067811865475],["nice",0.7071067811865475],["marked",0.7071067811865475],["tired",0.4999999999999999],["hot",0.4999999999999999],["full",0.4999999999999999],["dark",0.4999999999999999]]]],"^7\x3d",["^ ","^1",["^2",[["hall",0.7071067811865475],["glass",0.6388765649999398],["bottle",0.5499999999999999],["mary",0.512989176042577],["ann",0.512989176042577],["table",0.5031546054266276],["white",0.4714045207910317],["door",0.45407660918649984]]],"^3",["^2",[["wonder",0.6324555320336758],["hurry",0.582222509739582],["walk",0.5773502691896257],["know",0.5499999999999999],["kneel",0.5499999999999999],["hope",0.5499999999999999],["notice",0.5383819020581655],["execute",0.4999999999999999],["drink",0.4999999999999999],["trot",0.4999999999999999]]],"^4",["^2",[["aremarkable",0.7071067811865475],["little",0.7071067811865475],["nice",0.7071067811865475],["marked",0.7071067811865475],["tiny",0.5499999999999999],["hot",0.4999999999999999],["angry",0.4999999999999999],["dark",0.4999999999999999]]]],"^L:",["^ ","^1",["^2",[["alice",0.7256136379059805],["time",0.7220263657073482],["eye",0.629354927113943],["round",0.6082678049245317],["thing",0.5827338129496404],["table",0.582115132514221],["moment",0.57398263154835],["illustration",0.5706418016373763],["foot",0.546574839892009],["arm",0.5425034622380049],["half",0.5364417807858202],["rabbit",0.5322871277148596],["duchess",0.525877136401582],["hand",0.5173952471047824],["door",0.5167232262356085],["minute",0.5114771692875645],["queen",0.5089133578079826],["bit",0.4798081151232538],["mind",0.4645722098118832],["creature",0.4645722098118832],["white",0.4559755136679471]]],"^3",["^2",[["sit",0.7096457724119536],["look",0.5903629815353423],["begin",0.5822758174047212],["hurry",0.5521239653051301],["find",0.546574839892009],["finish",0.5364417807858202],["think",0.5126387196522173],["hear",0.5091212048077888],["open",0.5068898374371097],["fall",0.486686422265988],["call",0.48363506665443706],["turn",0.48154040509315194],["stand",0.4798081151232538],["set",0.4798081151232538],["stop",0.4645722098118832],["come",0.45853001832587276]]],"^4",["^2",[["high",0.5200017887756906],["great",0.48970210687439175],["curious",0.4798081151232538],["low",0.474152026131801],["late",0.4645722098118832],["small",0.4527416515502067]]]],"^7?",["^ ","^1",["^2",[["majesty",0.7071067811865475],["piece",0.6324555320336758],["king",0.6324555320336758],["tart",0.4999999999999999],["cook",0.4999999999999999],["witness",0.4999999999999999],["white",0.4714045207910317],["door",0.45407660918649984]]],"^3",["^2",[["ornament",0.7071067811865475],["give",0.7071067811865475],["mind",0.4999999999999999],["execute",0.4999999999999999],["sneeze",0.4999999999999999]]],"^4",["^2",[["asshe",0.7071067811865475],["footstepsand",0.7071067811865475],["grand",0.7071067811865475],["first",0.7071067811865475],["curious",0.6324555320336758]]]],"^F2",["^ ","^1",["^2",[["minute",0.6487491201346025],["inch",0.6327848502189876],["change",0.6123724356957945],["wood",0.6123724356957945],["mushroom",0.6123724356957945],["cake",0.5773502691896257],["caterpillar",0.5773502691896257],["serpent",0.5773502691896257],["deal",0.5477225575051661],["moment",0.5117010907068007],["face",0.49999999999999994],["side",0.49999999999999994],["illustration",0.48795003647426655],["garden",0.47834038488248487],["alice",0.4767312946227961],["foot",0.4753826885415284]]],"^3",["^2",[["grow",0.7770873402002615],["eat",0.6123724356957945],["stretch",0.5773502691896257],["draw",0.5773502691896257],["break",0.5773502691896257],["happen",0.5773502691896257],["work",0.5477225575051661],["open",0.49377071987869403],["hold",0.47834038488248487],["ask",0.4714045207910317],["remember",0.4714045207910317],["frighten",0.4714045207910317],["sit",0.46291004988627565],["think",0.4505766568204545]]],"^4",["^2",[["good",0.6833333333333332],["free",0.5773502691896257],["sharp",0.5773502691896257],["entangled",0.5773502691896257],["lovely",0.5773502691896257],["delighted",0.5773502691896257]]]],"^7@",["^ ","^1",["^2",[["room",0.7499999999999999],["tea",0.5773502691896257],["hare",0.5773502691896257],["march",0.5773502691896257],["dormouse",0.5773502691896257],["hatter",0.5773502691896257],["eye",0.5028011423654931],["neck",0.4999999999999999],["direction",0.4999999999999999]]],"^3",["^2",[["open",0.7559289460184544],["reply",0.6708203932499369],["guess",0.606217782649107],["wave",0.4999999999999999],["nibble",0.4999999999999999]]],"^4",["^2",[["left-hand",0.7071067811865475],["asleep",0.4999999999999999],["satdown",0.4999999999999999],["quiteenough",0.4999999999999999],["right-hand",0.4999999999999999],["mad",0.4999999999999999]]]],"^L\x3d",["^ ","^1",["^2",[["dormouse",0.5773502691896257],["tea",0.5773502691896257],["course",0.5773502691896257],["hearts",0.5773502691896257],["march",0.5773502691896257],["hare",0.5773502691896257],["hatter",0.5773502691896257],["trial",0.4999999999999999],["wood",0.4999999999999999],["knave",0.4999999999999999]]],"^3",["^2",[["waste",0.7071067811865475],["guess",0.5773502691896257],["take",0.5773502691896257],["lead",0.4999999999999999],["remark",0.4999999999999999]]],"^4",["^2",[["offended",0.7071067811865475],["hot",0.7071067811865475],["easy",0.7071067811865475],["alittle",0.4999999999999999]]]],"^L\x3e",["^ ","^1",["^2",[["hedgehog",0.7071067811865475],["people",0.4999999999999999],["air",0.4999999999999999],["ear",0.4999999999999999],["tree",0.4999999999999999],["sort",0.4517539514526256]]],"^3",["^2",[["tuck",0.7071067811865475],["quarrel",0.7071067811865475],["fly",0.7071067811865475],["catch",0.5773502691896257],["forget",0.4999999999999999]]],"^4",["^2",[["alive",0.9999999999999998],["helpless",0.9999999999999998],["fond",0.7071067811865475],["moral",0.7071067811865475],["round",0.5773502691896257],["glad",0.5773502691896257]]]],"^L?",["^ ","^1",["^2",[["question",0.6324555320336758],["hedgehog",0.4999999999999999]]],"^3",["^2",[["trot",0.4999999999999999],["stamp",0.4999999999999999],["shrink",0.4999999999999999],["sir",0.4999999999999999]]],"^4",["^2",[["tosave",0.7071067811865475],["to-day",0.7071067811865475],["agreat",0.7071067811865475],["hush",0.7071067811865475],["usual",0.4999999999999999]]]],"^F4",["^ ","^1",["^2",[["pigeon",0.9999999999999998],["serpent",0.7071067811865475],["change",0.4999999999999999],["neck",0.4999999999999999],["wood",0.4999999999999999],["tree",0.4999999999999999],["mushroom",0.4999999999999999]]],"^3",["^2",[["continue",0.7071067811865475],["remember",0.5773502691896257],["nibble",0.4999999999999999]]],"^4",["^2",[["raw",0.9999999999999998],["numberof",0.9999999999999998],["sulky",0.9999999999999998],["free",0.7071067811865475],["entangled",0.7071067811865475],["usual",0.7071067811865475],["alittle",0.4999999999999999]]]],"^L@",["^ ","^1",["^2",[["glove",0.5872202195147035],["pair",0.5872202195147035],["fan",0.5872202195147035],["change",0.4999999999999999],["hurry",0.4999999999999999]]],"^3",["^2",[["trot",0.7071067811865475],["shrink",0.7071067811865475],["sir",0.7071067811865475],["frighten",0.5773502691896257],["drop",0.4999999999999999]]],"^4",["^2",[["to-day",0.9999999999999998],["agreat",0.9999999999999998],["usual",0.7071067811865475],["timid",0.7071067811865475],["hard",0.5773502691896257],["glad",0.5773502691896257],["white",0.5773502691896257]]]],"^LA",["^ ","^1",["^2",[["bill",0.7071067811865475],["cake",0.7071067811865475],["chimney",0.5872202195147035],["bird",0.4999999999999999],["change",0.4999999999999999],["animal",0.4999999999999999],["wood",0.4999999999999999]]],"^3",["^2",[["suppose",0.7071067811865475],["drink",0.7071067811865475],["draw",0.7071067811865475],["tuck",0.7071067811865475],["shrink",0.7071067811865475],["happen",0.7071067811865475],["move",0.5773502691896257],["catch",0.5773502691896257],["wait",0.5063696835418332],["eat",0.4999999999999999]]],"^4",["^2",[["shewandered",0.9999999999999998],["safe",0.9999999999999998],["sharp",0.7071067811865475],["general",0.7071067811865475],["lovely",0.7071067811865475],["delighted",0.7071067811865475],["hard",0.5773502691896257],["bright",0.5063696835418332],["sure",0.4999999999999999]]]],"^F;",["^ ","^1",["^2",[["majesty",0.8944271909999159],["court",0.8944271909999159],["evidence",0.7745966692414834],["white",0.7453559924999298],["queen",0.7071067811865475],["knave",0.6708203932499369],["tart",0.6324555320336758],["witness",0.6324555320336758],["rabbit",0.6249999999999999],["piece",0.5999999999999999],["soldier",0.5163977794943223],["hearts",0.5163977794943223],["jury",0.5163977794943223],["head",0.4999999999999999],["voice",0.4514661183864802]]],"^3",["^2",[["read",0.6708203932499369],["write",0.6324555320336758],["carry",0.6324555320336758],["take",0.5163977794943223],["shout",0.5163977794943223]]],"^4",["^2",[["low",0.4743416490252569]]]],"^LB",["^ ","^1",["^2",[["white",0.5962847939999438],["soldier",0.5163977794943223],["round",0.5070925528371099],["rabbit",0.4999999999999999],["time",0.48154341234307685],["key",0.45291081365783825]]],"^3",["^2",[["carry",0.6324555320336758]]],"^4",["^2",[["large",0.4798081151232538],["low",0.4743416490252569],["bright",0.45291081365783825],["golden",0.45291081365783825]]]],"^7B",["^ ","^1",["^2",[["tea",0.6666666666666666],["hare",0.6666666666666666],["march",0.6666666666666666],["dormouse",0.6666666666666666],["hatter",0.6666666666666666]]],"^3",["^2",[["remark",0.606217782649107],["wave",0.5773502691896257],["reply",0.5163977794943223],["walk",0.4714045207910317],["open",0.45825756949558394]]],"^4",["^2",[["asleep",0.5773502691896257],["aremarkable",0.5773502691896257],["little",0.5773502691896257],["satdown",0.5773502691896257],["mad",0.5773502691896257]]]],"^7C",["^ ","^1",["^2",[["soldier",0.5773502691896257],["hearts",0.5773502691896257],["key",0.5063696835418332],["child",0.4999999999999999],["majesty",0.4999999999999999],["knave",0.4999999999999999],["croquet",0.4999999999999999],["mushroom",0.4999999999999999],["hall",0.4999999999999999]]],"^3",["^2",[["ornament",0.9999999999999998],["carry",0.7071067811865475],["stop",0.5773502691896257],["take",0.5773502691896257],["nibble",0.4999999999999999]]],"^4",["^2",[["footstepsand",0.9999999999999998],["grand",0.9999999999999998],["white",0.5773502691896257],["bright",0.5063696835418332],["golden",0.5063696835418332],["alittle",0.4999999999999999]]]],"^FB",["^ ","^1",["^2",[["glove",0.5872202195147035],["pair",0.5872202195147035],["fan",0.5872202195147035],["change",0.4999999999999999],["hurry",0.4999999999999999]]],"^3",["^2",[["trot",0.7071067811865475],["shrink",0.7071067811865475],["sir",0.7071067811865475],["frighten",0.5773502691896257],["drop",0.4999999999999999]]],"^4",["^2",[["tosave",0.9999999999999998],["agreat",0.9999999999999998],["usual",0.7071067811865475],["timid",0.7071067811865475],["hard",0.5773502691896257],["glad",0.5773502691896257],["white",0.5773502691896257]]]],"^LC",["^ ","^1",["^2",[["hedgehog",0.7071067811865475],["people",0.4999999999999999],["air",0.4999999999999999],["ear",0.4999999999999999],["tree",0.4999999999999999],["sort",0.4517539514526256]]],"^3",["^2",[["tuck",0.7071067811865475],["quarrel",0.7071067811865475],["fly",0.7071067811865475],["catch",0.5773502691896257],["forget",0.4999999999999999]]],"^4",["^2",[["underher",0.9999999999999998],["helpless",0.9999999999999998],["fond",0.7071067811865475],["moral",0.7071067811865475],["round",0.5773502691896257],["glad",0.5773502691896257]]]],"^LD",["^ ","^1",["^2",[["soldier",0.5773502691896257],["hearts",0.5773502691896257],["key",0.5063696835418332],["child",0.4999999999999999],["majesty",0.4999999999999999],["knave",0.4999999999999999],["croquet",0.4999999999999999],["mushroom",0.4999999999999999],["hall",0.4999999999999999]]],"^3",["^2",[["ornament",0.9999999999999998],["carry",0.7071067811865475],["stop",0.5773502691896257],["take",0.5773502691896257],["nibble",0.4999999999999999]]],"^4",["^2",[["asshe",0.9999999999999998],["grand",0.9999999999999998],["white",0.5773502691896257],["bright",0.5063696835418332],["golden",0.5063696835418332],["alittle",0.4999999999999999]]]],"^LE",["^ ","^1",["^2",[["dodo",0.7071067811865475],["creature",0.5773502691896257],["course",0.5773502691896257],["english",0.5063696835418332],["pool",0.5063696835418332],["air",0.4999999999999999],["animal",0.4999999999999999],["party",0.4999999999999999]]],"^3",["^2",[["hate",0.7071067811865475],["crowd",0.5773502691896257],["swim",0.5773502691896257],["lead",0.4999999999999999]]],"^4",["^2",[["naturalto",0.9999999999999998],["ready",0.7071067811865475],["found",0.7071067811865475],["pale",0.7071067811865475],["wet",0.7071067811865475],["dry",0.7071067811865475],["hard",0.5773502691896257],["late",0.5773502691896257],["round",0.5773502691896257]]]],"^LF",["^ ","^1",["^2",[["ann",0.7254762501100116],["mary",0.7254762501100116],["glove",0.5872202195147035],["pair",0.5872202195147035],["fan",0.5872202195147035],["dinah",0.5773502691896257],["pool",0.5063696835418332],["hall",0.4999999999999999],["party",0.4999999999999999],["child",0.4999999999999999],["bird",0.4999999999999999],["glass",0.4517539514526256]]],"^3",["^2",[["trot",0.7071067811865475],["execute",0.7071067811865475],["lose",0.7071067811865475],["move",0.5773502691896257],["guess",0.5773502691896257],["swim",0.5773502691896257],["drop",0.4999999999999999],["change",0.4999999999999999]]],"^4",["^2",[["little",0.9999999999999998],["angry",0.7071067811865475],["white",0.5773502691896257],["sure",0.4999999999999999]]]],"day",["^ ","^1",["^2",[["soldier",0.5163977794943223],["mind",0.5163977794943223],["creature",0.5163977794943223],["time",0.48154341234307685],["thing",0.4798081151232538],["ear",0.4695742752749558],["arm",0.4522670168666454],["voice",0.4514661183864802]]],"^3",["^2",[["stamp",0.6324555320336758],["remember",0.5163977794943223],["shout",0.5163977794943223],["think",0.48154341234307685],["cry",0.47733437050543803]]],"^4",["^2",[]]],"^FG",["^ ","^1",["^2",[["key",0.7595545253127499],["table",0.71156806696482],["glass",0.6776309271789384],["door",0.6421612990679356],["garden",0.5669467095138407],["head",0.5590169943749475],["child",0.5249999999999999],["pool",0.5063696835418332],["white",0.49999999999999994],["inch",0.4999999999999999],["half",0.4999999999999999],["moment",0.4585633803868072]]],"^3",["^2",[["lose",0.7071067811865475],["wonder",0.6708203932499369],["hurry",0.6175402271944638],["walk",0.6123724356957945],["forget",0.5249999999999999],["lie",0.4999999999999999],["ornament",0.4999999999999999],["finish",0.4999999999999999],["look",0.4673425840955336],["begin",0.4522670168666454],["find",0.451222445048176]]],"^4",["^2",[["golden",0.7595545253127499],["high",0.6356417261637282],["white",0.5773502691896257],["bright",0.5316881677189249],["grand",0.4999999999999999],["nice",0.4999999999999999],["little",0.4999999999999999],["good-by",0.4999999999999999],["aremarkable",0.4999999999999999],["footstepsand",0.4999999999999999],["asshe",0.4999999999999999],["alittle",0.4999999999999999],["marked",0.4999999999999999],["surprised",0.4999999999999999],["great",0.45643546458763834]]]],"^LG",["^ ","^1",["^2",[["bill",0.7071067811865475],["cake",0.7071067811865475],["chimney",0.5872202195147035],["bird",0.4999999999999999],["change",0.4999999999999999],["animal",0.4999999999999999],["wood",0.4999999999999999]]],"^3",["^2",[["suppose",0.7071067811865475],["drink",0.7071067811865475],["draw",0.7071067811865475],["tuck",0.7071067811865475],["shrink",0.7071067811865475],["happen",0.7071067811865475],["move",0.5773502691896257],["catch",0.5773502691896257],["wait",0.5063696835418332],["eat",0.4999999999999999]]],"^4",["^2",[["thesecond",0.9999999999999998],["safe",0.9999999999999998],["sharp",0.7071067811865475],["general",0.7071067811865475],["lovely",0.7071067811865475],["delighted",0.7071067811865475],["hard",0.5773502691896257],["bright",0.5063696835418332],["sure",0.4999999999999999]]]],"^7J",["^ ","^1",["^2",[["dinah",0.6546536707079771],["moment",0.5777355546974313],["cat",0.54788554592047],["cook",0.5345224838248488],["alice",0.5149286505444371],["time",0.5087230797227998],["bit",0.5070925528371099],["duchess",0.47809144373375745],["side",0.46291004988627565],["foot",0.4511218193390531]]],"^3",["^2",[["hurry",0.6224220440894771],["leave",0.6036816105203691],["look",0.5811989399441536],["change",0.5669467095138407],["drop",0.5669467095138407],["execute",0.5345224838248488],["mind",0.5345224838248488],["set",0.5070925528371099],["work",0.5070925528371099],["come",0.5067759168069629],["begin",0.45584230583855184]]],"^4",["^2",[["poor",0.5741692517632145]]]],"^7K",["^ ","^1",["^2",[["cook",0.7071067811865475],["baby",0.7071067811865475],["mind",0.5773502691896257],["creature",0.5773502691896257],["child",0.4999999999999999],["ear",0.4999999999999999],["direction",0.4999999999999999],["tree",0.4999999999999999]]],"^3",["^2",[["grin",0.7071067811865475],["hurt",0.7071067811865475],["catch",0.5773502691896257],["jump",0.5773502691896257]]],"^4",["^2",[["queer-shapedlittle",0.9999999999999998],["loud",0.9999999999999998],["violentlythat",0.9999999999999998],["ready",0.7071067811865475],["sure",0.4999999999999999]]]],"raw",["^ ","^1",["^2",[["pigeon",0.9999999999999998],["serpent",0.7071067811865475],["change",0.4999999999999999],["neck",0.4999999999999999],["wood",0.4999999999999999],["tree",0.4999999999999999],["mushroom",0.4999999999999999]]],"^3",["^2",[["continue",0.7071067811865475],["remember",0.5773502691896257],["nibble",0.4999999999999999]]],"^4",["^2",[["andshe",0.9999999999999998],["numberof",0.9999999999999998],["sulky",0.9999999999999998],["free",0.7071067811865475],["entangled",0.7071067811865475],["usual",0.7071067811865475],["alittle",0.4999999999999999]]]],"^7L",["^ ","^1",["^2",[["baby",0.7071067811865475],["bit",0.6761234037828132],["eye",0.6461392939288777],["door",0.6067853924728326],["moment",0.5777355546974313],["room",0.5669467095138407],["neck",0.5669467095138407],["bottle",0.5345224838248488],["head",0.5282214092053229],["alice",0.5149286505444371],["letter",0.4999999999999999],["inch",0.4999999999999999],["wood",0.4999999999999999],["croquet",0.4999999999999999],["size",0.49377071987869403],["minute",0.4925124796069056],["house",0.46681653306710785],["side",0.46291004988627565],["illustration",0.45175395145262565],["sort",0.4517539514526256]]],"^3",["^2",[["knock",0.9999999999999998],["remark",0.7559289460184544],["produce",0.7071067811865475],["break",0.7071067811865475],["sneeze",0.7071067811865475],["live",0.5773502691896257],["ask",0.5773502691896257],["frighten",0.5773502691896257],["run",0.5773502691896257],["forget",0.5669467095138407],["find",0.5501485601695769],["know",0.5345224838248488],["kneel",0.5345224838248488],["hope",0.5345224838248488],["reply",0.5239956379316802],["set",0.5070925528371099],["lead",0.4999999999999999],["peep",0.4999999999999999],["hurry",0.46681653306710785],["guess",0.45825756949558394]]],"^4",["^2",[["three-legged",0.9999999999999998],["lowand",0.9999999999999998],["solemn",0.9999999999999998],["full",0.7071067811865475],["entangled",0.7071067811865475],["left-hand",0.5345224838248488],["tiny",0.5345224838248488],["hot",0.5345224838248488],["large",0.5068898374371097],["high",0.4925124796069056],["great",0.46004370622823615]]]],"^LH",["^ ","^1",["^2",[["tear",0.7254762501100116],["cake",0.7071067811865475],["english",0.5063696835418332],["pool",0.5063696835418332],["key",0.5063696835418332],["inch",0.4999999999999999],["hall",0.4999999999999999],["half",0.4999999999999999],["top",0.4999999999999999],["glass",0.4517539514526256]]],"^3",["^2",[["lie",0.9999999999999998],["happen",0.7071067811865475],["finish",0.4999999999999999],["forget",0.4999999999999999],["eat",0.4999999999999999]]],"^4",["^2",[["surprised",0.9999999999999998],["lovely",0.7071067811865475],["round",0.5773502691896257],["golden",0.5063696835418332],["poor",0.5063696835418332]]]],"^7N",["^ ","^1",["^2",[["caterpillar",0.9999999999999998],["mushroom",0.7071067811865475],["size",0.5773502691896257],["serpent",0.4999999999999999]]],"^3",["^2",[["change",0.7071067811865475],["reply",0.6324555320336758],["grow",0.5383819020581655],["break",0.4999999999999999],["fly",0.4999999999999999],["draw",0.4999999999999999],["mind",0.4999999999999999],["sir",0.4999999999999999],["come",0.47404546313997725]]],"^4",["^2",[["iused",0.7071067811865475],["right-hand",0.7071067811865475],["good",0.5773502691896257],["free",0.4999999999999999],["sharp",0.4999999999999999],["sleepy",0.4999999999999999],["sudden",0.4999999999999999],["delighted",0.4999999999999999],["left-hand",0.4999999999999999]]]],"^LI",["^ ","^1",["^2",[["key",1.0],["hall",0.7595545253127499],["table",0.7026171689305275],["tear",0.6979824404521127],["glass",0.6633880657639324],["door",0.6340834768940941],["garden",0.5741692517632145],["eye",0.5092065106881741],["inch",0.5063696835418332],["half",0.5063696835418332],["child",0.5063696835418332],["english",0.48717948717948717],["pool",0.48717948717948717],["rate",0.45291081365783825],["bit",0.45291081365783825]]],"^3",["^2",[["shut",0.5847053462046861],["fall",0.5224589204868025],["lie",0.5063696835418332],["ornament",0.5063696835418332],["finish",0.5063696835418332],["forget",0.5063696835418332],["look",0.45802861241434445],["set",0.45291081365783825],["work",0.45291081365783825],["wonder",0.45291081365783825]]],"^4",["^2",[["high",0.6276459144608478],["small",0.6045603888763706],["bright",0.5128205128205128],["grand",0.5063696835418332],["shebegan",0.5063696835418332],["nice",0.5063696835418332],["french",0.5063696835418332],["good-by",0.5063696835418332],["footstepsand",0.5063696835418332],["asshe",0.5063696835418332],["alittle",0.5063696835418332],["marked",0.5063696835418332],["surprised",0.5063696835418332],["poor",0.48717948717948717],["curious",0.45291081365783825]]]],"^LJ",["^ ","^1",["^2",[["cook",0.7071067811865475],["baby",0.7071067811865475],["mind",0.5773502691896257],["creature",0.5773502691896257],["child",0.4999999999999999],["ear",0.4999999999999999],["direction",0.4999999999999999],["tree",0.4999999999999999]]],"^3",["^2",[["grunt",0.9999999999999998],["grin",0.7071067811865475],["hurt",0.7071067811865475],["catch",0.5773502691896257],["jump",0.5773502691896257]]],"^4",["^2",[["loud",0.9999999999999998],["violentlythat",0.9999999999999998],["ready",0.7071067811865475],["sure",0.4999999999999999]]]],"^FS",["^ ","^1",["^2",[["bill",0.8304547985373997],["window",0.8304547985373997],["air",0.5872202195147035],["arm",0.5740604972870496],["silence",0.5252257314388902],["house",0.48350947702972386],["rabbit",0.47598581911649424]]],"^3",["^2",[["wait",0.8623164985025763],["spread",0.8304547985373997],["sha",0.6780635036208105],["hear",0.46177407259139946],["think",0.45841567112854237]]],"^4",["^2",[["sure",0.6165812304904386],["safe",0.5872202195147035],["quiteenough",0.5872202195147035],["shewandered",0.5872202195147035],["thesecond",0.5872202195147035],["yer",0.5872202195147035],["broken",0.5872202195147035],["bright",0.56496598177755],["angry",0.45675013919556984],["full",0.45675013919556984]]]],"^FV",["^ ","^1",["^2",[["dodo",0.8164965809277259],["english",0.5847053462046861],["party",0.5773502691896257],["question",0.5163977794943223],["mouse",0.4714045207910317],["thing",0.4645722098118832]]],"^3",["^2",[["crowd",0.6666666666666666],["lead",0.5773502691896257],["turn",0.5270462766947299],["reply",0.5163977794943223]]],"^4",["^2",[["offended",0.8164965809277259],["found",0.8164965809277259],["easy",0.8164965809277259],["wet",0.8164965809277259],["dry",0.8164965809277259],["asleep",0.5773502691896257],["draggled",0.5773502691896257],["naturalto",0.5773502691896257]]]],"^LK",["^ ","^1",["^2",[["cook",0.7071067811865475],["baby",0.7071067811865475],["mind",0.5773502691896257],["creature",0.5773502691896257],["child",0.4999999999999999],["ear",0.4999999999999999],["direction",0.4999999999999999],["tree",0.4999999999999999]]],"^3",["^2",[["grunt",0.9999999999999998],["grin",0.7071067811865475],["hurt",0.7071067811865475],["catch",0.5773502691896257],["jump",0.5773502691896257]]],"^4",["^2",[["queer-shapedlittle",0.9999999999999998],["violentlythat",0.9999999999999998],["ready",0.7071067811865475],["sure",0.4999999999999999]]]],"^LL",["^ ","^1",["^2",[["cook",0.7071067811865475],["baby",0.7071067811865475],["mind",0.5773502691896257],["creature",0.5773502691896257],["child",0.4999999999999999],["ear",0.4999999999999999],["direction",0.4999999999999999],["tree",0.4999999999999999]]],"^3",["^2",[["grunt",0.9999999999999998],["grin",0.7071067811865475],["hurt",0.7071067811865475],["catch",0.5773502691896257],["jump",0.5773502691896257]]],"^4",["^2",[["queer-shapedlittle",0.9999999999999998],["loud",0.9999999999999998],["ready",0.7071067811865475],["sure",0.4999999999999999]]]],"^LM",["^ ","^1",["^2",[["dodo",0.7071067811865475],["creature",0.5773502691896257],["course",0.5773502691896257],["english",0.5063696835418332],["pool",0.5063696835418332],["air",0.4999999999999999],["animal",0.4999999999999999],["party",0.4999999999999999]]],"^3",["^2",[["hate",0.7071067811865475],["crowd",0.5773502691896257],["swim",0.5773502691896257],["lead",0.4999999999999999]]],"^4",["^2",[["draggled",0.9999999999999998],["ready",0.7071067811865475],["found",0.7071067811865475],["pale",0.7071067811865475],["wet",0.7071067811865475],["dry",0.7071067811865475],["hard",0.5773502691896257],["late",0.5773502691896257],["round",0.5773502691896257]]]],"^LN",["^ ","^1",["^2",[["tea",0.5773502691896257],["dinah",0.5773502691896257],["hurry",0.4999999999999999],["party",0.4999999999999999]]],"^3",["^2",[["offend",0.7071067811865475],["change",0.4999999999999999]]],"^4",["^2",[["fancy",0.9999999999999998],["nicelittle",0.9999999999999998],["subject",0.9999999999999998],["fond",0.7071067811865475],["shrill",0.7071067811865475]]]],"^LO",["^ ","^1",["^2",[["jury",0.5773502691896257],["bird",0.4999999999999999],["half",0.4999999999999999],["trial",0.4999999999999999]]],"^3",["^2",[["pull",0.7071067811865475],["hate",0.7071067811865475],["offend",0.7071067811865475],["waste",0.7071067811865475],["beg",0.5773502691896257],["finish",0.4999999999999999],["meet",0.4999999999999999],["eat",0.4999999999999999]]],"^4",["^2",[["sad",0.9999999999999998]]]],"^LP",["^ ","^1",["^2",[["pigeon",0.9999999999999998],["serpent",0.7071067811865475],["change",0.4999999999999999],["neck",0.4999999999999999],["wood",0.4999999999999999],["tree",0.4999999999999999],["mushroom",0.4999999999999999]]],"^3",["^2",[["continue",0.7071067811865475],["remember",0.5773502691896257],["nibble",0.4999999999999999]]],"^4",["^2",[["andshe",0.9999999999999998],["raw",0.9999999999999998],["sulky",0.9999999999999998],["free",0.7071067811865475],["entangled",0.7071067811865475],["usual",0.7071067811865475],["alittle",0.4999999999999999]]]],"^7U",["^ ","^1",["^2",[["jury",0.8164965809277259],["evidence",0.8164965809277259],["top",0.7071067811865475],["letter",0.7071067811865475],["court",0.7071067811865475],["majesty",0.7071067811865475],["king",0.6324555320336758],["witness",0.4999999999999999],["white",0.4714045207910317]]],"^3",["^2",[["sign",0.7071067811865475],["read",0.7071067811865475],["prove",0.4999999999999999]]],"^4",["^2",[["proper",0.7071067811865475],["dead",0.7071067811865475],["shrill",0.4999999999999999],["pale",0.4999999999999999],["general",0.4999999999999999]]]],"^7W",["^ ","^1",["^2",[["sort",0.6776309271789384],["english",0.6139406135149204],["pool",0.5847053462046861],["air",0.5773502691896257],["chin",0.5773502691896257],["minute",0.5504818825631803],["dodo",0.5345224838248488],["bottle",0.5345224838248488],["thing",0.517027634185852],["alice",0.5149286505444371],["inch",0.4999999999999999],["half",0.4999999999999999],["neck",0.4999999999999999],["mouse",0.47834038488248487],["side",0.4714045207910317],["house",0.46681653306710785],["moment",0.4585633803868072]]],"^3",["^2",[["crowd",0.6546536707079771],["meet",0.5858449331643021],["lie",0.5773502691896257],["ask",0.5773502691896257],["forget",0.5773502691896257],["turn",0.5750546327852952],["know",0.5345224838248488],["kneel",0.5345224838248488],["hate",0.5345224838248488],["hope",0.5345224838248488],["speak",0.5056498968474316],["find",0.5042194840896107],["steal",0.4999999999999999],["leave",0.4791574237499549],["hear",0.4696682183138621],["reply",0.4695742752749558],["talk",0.45825756949558394],["look",0.4522670168666454]]],"^4",["^2",[["large",0.6082678049245317],["long",0.589943324645678],["helpless",0.5773502691896257],["naturalto",0.5773502691896257],["good-by",0.5773502691896257],["draggled",0.5773502691896257],["alive",0.5773502691896257],["underher",0.5773502691896257],["surprised",0.5773502691896257],["bright",0.5741692517632145],["wet",0.5345224838248488],["found",0.5345224838248488],["tiny",0.5345224838248488],["dry",0.5345224838248488],["curious",0.5070925528371099],["toomuch",0.4999999999999999],["nice",0.4999999999999999],["right-hand",0.4999999999999999],["fair",0.4999999999999999],["marked",0.4999999999999999],["great",0.45643546458763834]]]],"^G6",["^ ","^1",["^2",[["size",0.6123724356957945],["tone",0.533676050223615],["change",0.4999999999999999],["pigeon",0.4999999999999999],["door",0.4816209743009517],["illustration",0.47809144373375745]]],"^3",["^2",[["knock",0.4999999999999999],["lead",0.4999999999999999]]],"^4",["^2",[["entangled",0.7071067811865475],["sulky",0.4999999999999999],["safe",0.4999999999999999],["three-legged",0.4999999999999999],["lowand",0.4999999999999999],["numberof",0.4999999999999999],["open",0.4999999999999999],["raw",0.4999999999999999],["shewandered",0.4999999999999999],["thesecond",0.4999999999999999],["andshe",0.4999999999999999],["asleep",0.4999999999999999],["alittle",0.4999999999999999],["solemn",0.4999999999999999]]]],"ann",["^ ","^1",["^2",[["mary",0.9999999999999998],["glove",0.8094272134003795],["pair",0.8094272134003795],["fan",0.8094272134003795],["bottle",0.512989176042577],["window",0.512989176042577]]],"^3",["^2",[["tremble",0.5674803065350239],["hurry",0.5674803065350239],["spread",0.512989176042577],["prove",0.512989176042577],["know",0.512989176042577],["lose",0.512989176042577],["kneel",0.512989176042577],["execute",0.512989176042577],["trot",0.512989176042577],["hope",0.512989176042577],["come",0.4620423639315076],["move",0.46073929912086503]]],"^4",["^2",[["aremarkable",0.7254762501100116],["little",0.7254762501100116],["quiteenough",0.7254762501100116],["tired",0.512989176042577],["tiny",0.512989176042577],["angry",0.512989176042577],["full",0.512989176042577]]]],"^LQ",["^ ","^1",["^2",[["mind",0.5773502691896257],["dinah",0.5773502691896257],["room",0.4999999999999999]]],"^3",["^2",[["produce",0.7071067811865475],["stop",0.5773502691896257],["remember",0.5773502691896257],["peep",0.4999999999999999],["drop",0.4999999999999999],["read",0.4999999999999999]]],"^4",["^2",[["sleepy",0.7071067811865475],["tired",0.7071067811865475],["dark",0.7071067811865475],["late",0.5773502691896257]]]],"^7X",["^ ","^1",["^2",[["thing",0.6447744407179492],["alice",0.6396021490668312],["idea",0.6211299937499416],["round",0.5750546327852952],["illustration",0.5673665146135802],["voice",0.5298920292217051],["course",0.5270462766947299],["jury",0.5270462766947299],["head",0.5103103630798287],["time",0.4832819673966073],["trial",0.45643546458763834],["letter",0.45643546458763834],["top",0.45643546458763834]]],"^3",["^2",[["meet",0.6085806194501845],["call",0.5486726407127174],["jump",0.5270462766947299],["find",0.522635770061855],["notice",0.4749494986855592],["sit",0.46004370622823615],["lead",0.45643546458763834]]],"^4",["^2",[["long",0.5676225715998147],["large",0.48154040509315194],["great",0.4537037037037037]]]],"lie",["^ ","^1",["^2",[["tear",0.7254762501100116],["cake",0.7071067811865475],["english",0.5063696835418332],["pool",0.5063696835418332],["key",0.5063696835418332],["inch",0.4999999999999999],["hall",0.4999999999999999],["half",0.4999999999999999],["top",0.4999999999999999],["glass",0.4517539514526256]]],"^3",["^2",[["happen",0.7071067811865475],["finish",0.4999999999999999],["forget",0.4999999999999999],["eat",0.4999999999999999]]],"^4",["^2",[["good-by",0.9999999999999998],["surprised",0.9999999999999998],["lovely",0.7071067811865475],["round",0.5773502691896257],["golden",0.5063696835418332],["poor",0.5063696835418332]]]],"^LR",["^ ","^1",["^2",[["ann",0.7254762501100116],["mary",0.7254762501100116],["glove",0.5872202195147035],["pair",0.5872202195147035],["fan",0.5872202195147035],["dinah",0.5773502691896257],["pool",0.5063696835418332],["hall",0.4999999999999999],["party",0.4999999999999999],["child",0.4999999999999999],["bird",0.4999999999999999],["glass",0.4517539514526256]]],"^3",["^2",[["trot",0.7071067811865475],["execute",0.7071067811865475],["lose",0.7071067811865475],["move",0.5773502691896257],["guess",0.5773502691896257],["swim",0.5773502691896257],["drop",0.4999999999999999],["change",0.4999999999999999]]],"^4",["^2",[["aremarkable",0.9999999999999998],["angry",0.7071067811865475],["white",0.5773502691896257],["sure",0.4999999999999999]]]],"^LS",["^ ","^1",["^2",[["caterpillar",0.7071067811865475],["mind",0.5773502691896257],["top",0.4999999999999999],["mushroom",0.4999999999999999]]],"^3",["^2",[["draw",0.7071067811865475],["stretch",0.7071067811865475],["sir",0.7071067811865475],["remember",0.5773502691896257],["peep",0.4999999999999999],["meet",0.4999999999999999],["change",0.4999999999999999]]],"^4",["^2",[["sleepy",0.7071067811865475]]]],"^80",["^ ","^1",["^2",[["croquet",0.8660254037844386],["direction",0.5773502691896257],["queen",0.5477225575051661],["house",0.4753826885415284],["face",0.4714045207910317]]],"^3",["^2",[["run",0.6666666666666666],["knock",0.5773502691896257],["wave",0.5773502691896257],["peep",0.5773502691896257],["begin",0.5222329678670935],["play",0.5163977794943223],["stand",0.5163977794943223]]],"^4",["^2",[["open",0.5773502691896257],["lowand",0.5773502691896257],["satdown",0.5773502691896257],["three-legged",0.5773502691896257],["solemn",0.5773502691896257],["hush",0.5773502691896257],["mad",0.5773502691896257]]]],"^GE",["^ ","^1",["^2",[["court",0.7071067811865475],["king",0.6324555320336758],["cook",0.4999999999999999],["witness",0.4999999999999999],["arm",0.47673129462279606],["white",0.4714045207910317]]],"^3",["^2",[["give",0.7071067811865475],["steal",0.7071067811865475],["carry",0.4999999999999999],["suppose",0.4999999999999999],["execute",0.4999999999999999],["mind",0.4999999999999999],["quarrel",0.4999999999999999],["stamp",0.4999999999999999],["sneeze",0.4999999999999999],["leave",0.4517539514526256]]],"^4",["^2",[["fair",0.7071067811865475],["first",0.7071067811865475],["toomuch",0.7071067811865475],["moral",0.4999999999999999],["low",0.4999999999999999]]]],"^84",["^ ","^1",["^2",[["bottle",0.9999999999999998],["neck",0.7071067811865475],["round",0.5345224838248488],["mary",0.512989176042577],["ann",0.512989176042577],["window",0.4999999999999999],["door",0.45407660918649984]]],"^3",["^2",[["kneel",0.9999999999999998],["hope",0.9999999999999998],["forget",0.7071067811865475],["hurry",0.582222509739582],["drink",0.5499999999999999],["lose",0.5499999999999999],["open",0.5345224838248488],["prove",0.4999999999999999],["spread",0.4999999999999999]]],"^4",["^2",[["tiny",0.9999999999999998],["bright",0.7161148740394329],["quiteenough",0.7071067811865475],["nice",0.7071067811865475],["marked",0.7071067811865475],["tired",0.4999999999999999],["hot",0.4999999999999999],["full",0.4999999999999999],["dark",0.4999999999999999]]]],"^85",["^ ","^1",["^2",[["mary",0.512989176042577],["ann",0.512989176042577],["bottle",0.4999999999999999],["window",0.4999999999999999]]],"^3",["^2",[["sign",0.7071067811865475],["kneel",0.4999999999999999],["write",0.4999999999999999],["know",0.4999999999999999],["spread",0.4999999999999999],["hope",0.4999999999999999]]],"^4",["^2",[["quiteenough",0.7071067811865475],["dead",0.7071067811865475],["general",0.5499999999999999],["tired",0.4999999999999999],["tiny",0.4999999999999999],["full",0.4999999999999999]]]],"tea",["^ ","^1",["^2",[["hare",0.6666666666666666],["march",0.6666666666666666],["dormouse",0.6666666666666666],["hatter",0.6666666666666666],["house",0.4753826885415284],["thing",0.4645722098118832]]],"^3",["^2",[["guess",0.6666666666666666],["wave",0.5773502691896257],["remark",0.5773502691896257],["reply",0.5163977794943223]]],"^4",["^2",[["asleep",0.5773502691896257],["passionate",0.5773502691896257],["fancy",0.5773502691896257],["satdown",0.5773502691896257],["nicelittle",0.5773502691896257],["subject",0.5773502691896257],["mad",0.5773502691896257]]]],"^GF",["^ ","^1",["^2",[["majesty",0.8660254037844386],["court",0.8660254037844386],["witness",0.8164965809277259],["king",0.7745966692414834],["jury",0.6666666666666666],["letter",0.5773502691896257],["top",0.5773502691896257],["white",0.5773502691896257],["queen",0.5477225575051661],["piece",0.5163977794943223],["rabbit",0.48412291827592707]]],"^3",["^2",[["write",0.8164965809277259],["give",0.5773502691896257],["sign",0.5773502691896257],["read",0.5773502691896257]]],"^4",["^2",[["proper",0.5773502691896257],["dead",0.5773502691896257],["first",0.5773502691896257]]]],"^GG",["^ ","^1",["^2",[["serpent",0.7071067811865475],["change",0.4999999999999999],["neck",0.4999999999999999],["wood",0.4999999999999999],["tree",0.4999999999999999],["mushroom",0.4999999999999999]]],"^3",["^2",[["continue",0.7071067811865475],["remember",0.5773502691896257],["nibble",0.4999999999999999]]],"^4",["^2",[["andshe",0.9999999999999998],["raw",0.9999999999999998],["numberof",0.9999999999999998],["sulky",0.9999999999999998],["free",0.7071067811865475],["entangled",0.7071067811865475],["usual",0.7071067811865475],["alittle",0.4999999999999999]]]],"^LT",["^ ","^1",["^2",[["witness",0.7071067811865475],["jury",0.5773502691896257],["evidence",0.5773502691896257],["top",0.4999999999999999],["letter",0.4999999999999999],["court",0.4999999999999999],["hurry",0.4999999999999999],["majesty",0.4999999999999999],["trial",0.4999999999999999]]],"^3",["^2",[["write",0.7071067811865475],["beg",0.5773502691896257],["sha",0.5773502691896257],["jump",0.5773502691896257],["shut",0.5773502691896257],["read",0.4999999999999999]]],"^4",["^2",[["shrill",0.7071067811865475],["pale",0.7071067811865475]]]],"^87",["^ ","^1",["^2",[["jury",0.5773502691896257],["evidence",0.5773502691896257],["top",0.4999999999999999],["letter",0.4999999999999999],["court",0.4999999999999999],["majesty",0.4999999999999999],["knave",0.4999999999999999]]],"^3",["^2",[["write",0.7071067811865475],["prove",0.7071067811865475],["shout",0.5773502691896257],["read",0.4999999999999999]]],"^4",["^2",[["dead",0.9999999999999998],["general",0.7071067811865475]]]],"^LU",["^ ","^1",["^2",[["baby",0.7071067811865475],["letter",0.4999999999999999],["wood",0.4999999999999999],["inch",0.4999999999999999],["croquet",0.4999999999999999],["sort",0.4517539514526256]]],"^3",["^2",[["knock",0.9999999999999998],["produce",0.7071067811865475],["break",0.7071067811865475],["sneeze",0.7071067811865475],["live",0.5773502691896257],["ask",0.5773502691896257],["frighten",0.5773502691896257],["run",0.5773502691896257],["lead",0.4999999999999999],["peep",0.4999999999999999]]],"^4",["^2",[["open",0.9999999999999998],["three-legged",0.9999999999999998],["solemn",0.9999999999999998],["entangled",0.7071067811865475],["full",0.7071067811865475]]]],"^GW",["^ ","^1",["^2",[["bit",0.6708203932499369],["size",0.6327848502189876],["side",0.6123724356957945],["moment",0.611417840515743],["key",0.5063696835418332],["letter",0.4999999999999999],["hall",0.4999999999999999],["half",0.4999999999999999],["neck",0.4999999999999999],["minute",0.49262233777688935],["door",0.4816209743009517],["glass",0.47434164902525683],["sort",0.4517539514526256]]],"^3",["^2",[["open",0.7559289460184544],["break",0.7071067811865475],["ask",0.5773502691896257],["frighten",0.5773502691896257],["lie",0.4999999999999999],["round",0.4999999999999999],["knock",0.4999999999999999],["eat",0.4999999999999999],["finish",0.4999999999999999],["lead",0.4999999999999999],["forget",0.4999999999999999],["wonder",0.4695742752749558]]],"^4",["^2",[["high",0.6356417261637282],["golden",0.5063696835418332],["poor",0.5063696835418332],["nice",0.4999999999999999],["three-legged",0.4999999999999999],["right-hand",0.4999999999999999],["lowand",0.4999999999999999],["good-by",0.4999999999999999],["open",0.4999999999999999],["marked",0.4999999999999999],["solemn",0.4999999999999999],["surprised",0.4999999999999999],["great",0.45643546458763834]]]],"^LV",["^ ","^1",["^2",[["people",0.5773502691896257],["tree",0.5773502691896257]]],"^3",["^2",[["wave",0.5773502691896257],["find",0.5042194840896107]]],"^4",["^2",[["underher",0.5773502691896257],["tosave",0.5773502691896257],["to-day",0.5773502691896257],["alive",0.5773502691896257],["agreat",0.5773502691896257],["satdown",0.5773502691896257],["helpless",0.5773502691896257],["mad",0.5773502691896257]]]],"^8:",["^ ","^1",["^2",[["window",0.9999999999999998],["chimney",0.8304547985373997],["air",0.7071067811865475],["bill",0.5499999999999999],["mary",0.512989176042577],["ann",0.512989176042577],["bottle",0.4999999999999999],["arm",0.47673129462279606]]],"^3",["^2",[["sha",0.8164965809277259],["wait",0.7161148740394329],["fall",0.5031546054266276],["prove",0.4999999999999999],["know",0.4999999999999999],["kneel",0.4999999999999999],["help",0.4999999999999999],["pull",0.4999999999999999],["hope",0.4999999999999999],["come",0.47404546313997725]]],"^4",["^2",[["quiteenough",0.7071067811865475],["broken",0.7071067811865475],["yer",0.7071067811865475],["angry",0.5499999999999999],["full",0.5499999999999999],["tired",0.4999999999999999],["tiny",0.4999999999999999]]]],"^LW",["^ ","^1",["^2",[["tart",0.7071067811865475],["soldier",0.5773502691896257],["hearts",0.5773502691896257],["creature",0.5773502691896257],["chin",0.5773502691896257],["trial",0.4999999999999999],["knave",0.4999999999999999],["half",0.4999999999999999],["animal",0.4999999999999999],["bird",0.4999999999999999],["court",0.4999999999999999],["sort",0.4517539514526256]]],"^3",["^2",[["steal",0.9999999999999998],["stamp",0.7071067811865475],["quarrel",0.7071067811865475],["suppose",0.7071067811865475],["take",0.5773502691896257],["shout",0.5773502691896257],["round",0.4999999999999999],["read",0.4999999999999999]]],"^4",["^2",[["toomuch",0.9999999999999998],["moral",0.7071067811865475]]]],"^8\x3c",["^ ","^1",["^2",[["soldier",0.7745966692414834],["croquet",0.6708203932499369],["face",0.5659799760886717],["queen",0.565685424949238],["foot",0.5207556439232954],["hearts",0.5163977794943223],["rabbit",0.5125],["head",0.4999999999999999],["white",0.46212071534995647],["duchess",0.4525483399593904],["arm",0.4522670168666454]]],"^3",["^2",[["play",0.7999999999999999],["stamp",0.6324555320336758],["think",0.6019292654288461],["stop",0.5163977794943223],["live",0.5163977794943223],["run",0.5163977794943223],["take",0.5163977794943223],["shout",0.5163977794943223],["wait",0.4755563543407302]]],"^4",["^2",[["full",0.6324555320336758],["large",0.4798081151232538],["bright",0.45291081365783825]]]],"^H1",["^ ","^1",["^2",[["pool",0.7435897435897436],["dodo",0.7161148740394329],["tear",0.6979824404521127],["mouse",0.6201736729460422],["course",0.5847053462046861],["party",0.5063696835418332],["animal",0.5063696835418332],["key",0.48717948717948717],["illustration",0.4720774754816659],["question",0.45291081365783825],["deal",0.45291081365783825]]],"^3",["^2",[["crowd",0.5847053462046861],["swim",0.5847053462046861],["fall",0.5224589204868025],["lie",0.5063696835418332],["speak",0.49502183794921617]]],"^4",["^2",[["wet",0.7161148740394329],["found",0.7161148740394329],["dry",0.7161148740394329],["round",0.6139406135149204],["shebegan",0.5063696835418332],["french",0.5063696835418332],["naturalto",0.5063696835418332],["good-by",0.5063696835418332],["draggled",0.5063696835418332],["surprised",0.5063696835418332],["golden",0.48717948717948717],["poor",0.48717948717948717],["high",0.466711064599092]]]],"cat",["^ ","^1",["^2",[["dinah",0.6123724356957945],["mouse",0.5917840259193663],["alice",0.5504818825631802],["party",0.5480077554195742],["pool",0.5370861555295746],["child",0.5303300858899106],["tree",0.5303300858899106],["illustration",0.50709255283711],["thing",0.49311810717707305]]],"^3",["^2",[["hear",0.671094365241449],["talk",0.6681531047810609],["swim",0.6123724356957945],["feel",0.54788554592047],["cry",0.5031546054266276],["grin",0.4999999999999999],["hurt",0.4999999999999999],["hurry",0.45122244504817605]]],"^4",["^2",[["ready",0.4999999999999999],["fond",0.4999999999999999]]]],"^LX",["^ ","^1",["^2",[["glove",0.5872202195147035],["pair",0.5872202195147035],["fan",0.5872202195147035],["change",0.4999999999999999],["hurry",0.4999999999999999]]],"^3",["^2",[["trot",0.7071067811865475],["shrink",0.7071067811865475],["sir",0.7071067811865475],["frighten",0.5773502691896257],["drop",0.4999999999999999]]],"^4",["^2",[["tosave",0.9999999999999998],["to-day",0.9999999999999998],["usual",0.7071067811865475],["timid",0.7071067811865475],["hard",0.5773502691896257],["glad",0.5773502691896257],["white",0.5773502691896257]]]],"^LY",["^ ","^1",["^2",[["tear",0.7254762501100116],["chin",0.5773502691896257],["english",0.5063696835418332],["key",0.5063696835418332],["pool",0.5063696835418332],["child",0.4999999999999999],["animal",0.4999999999999999],["glass",0.4517539514526256]]],"^3",["^2",[["hurt",0.7071067811865475],["beg",0.5773502691896257],["shut",0.5773502691896257],["swim",0.5773502691896257]]],"^4",["^2",[["shebegan",0.9999999999999998],["sudden",0.7071067811865475],["golden",0.5063696835418332],["poor",0.5063696835418332]]]],"^LZ",["^ ","^1",["^2",[["tea",0.5773502691896257],["dinah",0.5773502691896257],["hurry",0.4999999999999999],["party",0.4999999999999999]]],"^3",["^2",[["offend",0.7071067811865475],["change",0.4999999999999999]]],"^4",["^2",[["passionate",0.9999999999999998],["nicelittle",0.9999999999999998],["subject",0.9999999999999998],["fond",0.7071067811865475],["shrill",0.7071067811865475]]]],"^H:",["^ ","^1",["^2",[["hare",1.0],["march",1.0],["hatter",1.0],["tea",0.6666666666666666],["people",0.5773502691896257]]],"^3",["^2",[["guess",0.6666666666666666],["wave",0.5773502691896257],["give",0.5773502691896257],["remark",0.5773502691896257],["reply",0.5163977794943223]]],"^4",["^2",[["asleep",0.5773502691896257],["satdown",0.5773502691896257],["first",0.5773502691896257],["mad",0.5773502691896257]]]],"^L[",["^ ","^1",["^2",[["dormouse",0.5773502691896257],["tea",0.5773502691896257],["march",0.5773502691896257],["hare",0.5773502691896257],["hatter",0.5773502691896257],["room",0.4999999999999999],["tree",0.4999999999999999],["direction",0.4999999999999999],["croquet",0.4999999999999999],["people",0.4999999999999999]]],"^3",["^2",[["wave",0.9999999999999998],["grin",0.7071067811865475],["help",0.7071067811865475],["crowd",0.5773502691896257],["guess",0.5773502691896257],["live",0.5773502691896257],["nibble",0.4999999999999999],["remark",0.4999999999999999]]],"^4",["^2",[["mad",0.9999999999999998],["left-hand",0.7071067811865475],["glad",0.5773502691896257]]]],"^M0",["^ ","^1",["^2",[["ann",0.7254762501100116],["mary",0.7254762501100116],["bottle",0.7071067811865475],["window",0.7071067811865475],["chimney",0.5872202195147035],["glove",0.5872202195147035],["pair",0.5872202195147035],["fan",0.5872202195147035],["air",0.4999999999999999],["room",0.4999999999999999],["neck",0.4999999999999999]]],"^3",["^2",[["spread",0.7071067811865475],["prove",0.7071067811865475],["know",0.7071067811865475],["kneel",0.7071067811865475],["hope",0.7071067811865475],["sha",0.5773502691896257],["stop",0.5773502691896257],["wait",0.5063696835418332],["remark",0.4999999999999999],["meet",0.4999999999999999],["forget",0.4999999999999999]]],"^4",["^2",[["tired",0.7071067811865475],["tiny",0.7071067811865475],["full",0.7071067811865475],["late",0.5773502691896257],["bright",0.5063696835418332]]]],"^M1",["^ ","^1",["^2",[["caterpillar",0.7071067811865475],["serpent",0.7071067811865475],["chin",0.5773502691896257],["change",0.4999999999999999],["inch",0.4999999999999999],["room",0.4999999999999999],["mushroom",0.4999999999999999],["direction",0.4999999999999999],["neck",0.4999999999999999],["hurry",0.4999999999999999]]],"^3",["^2",[["stretch",0.7071067811865475],["mind",0.7071067811865475],["fly",0.7071067811865475],["break",0.7071067811865475],["ask",0.5773502691896257],["frighten",0.5773502691896257],["change",0.4999999999999999],["round",0.4999999999999999],["remark",0.4999999999999999],["eat",0.4999999999999999],["nibble",0.4999999999999999]]],"^4",["^2",[["free",0.7071067811865475],["sharp",0.7071067811865475],["sudden",0.7071067811865475],["delighted",0.7071067811865475],["left-hand",0.7071067811865475],["poor",0.5063696835418332]]]],"^8@",["^ ","^1",["^2",[["size",0.7770873402002615],["minute",0.7138547751632839],["neck",0.5900749154108327],["moment",0.5819069847145178],["change",0.5710402407201607],["mushroom",0.5710402407201607],["foot",0.5430383874534989],["cake",0.5383819020581655],["caterpillar",0.5383819020581655],["serpent",0.5383819020581655],["alice",0.5112373581455452],["deal",0.5107539184552492],["arm",0.5004938272808617],["door",0.48893325706790014],["hand",0.48154341234307685],["voice",0.47078401507367224]]],"^3",["^2",[["eat",0.5710402407201607],["draw",0.5383819020581655],["mind",0.5383819020581655],["stretch",0.5383819020581655],["happen",0.5383819020581655],["work",0.5107539184552492],["come",0.5104349962146899],["leave",0.48643230329071346]]],"^4",["^2",[["good",0.6216698721602092],["poor",0.5783149319662402],["free",0.5383819020581655],["sharp",0.5383819020581655],["lovely",0.5383819020581655],["delighted",0.5383819020581655]]]],"^H?",["^ ","^1",["^2",[["evidence",0.5773502691896257],["jury",0.5773502691896257],["top",0.5249999999999999],["white",0.49999999999999994],["inch",0.4999999999999999],["majesty",0.4999999999999999],["court",0.4999999999999999],["queen",0.4743416490252569],["rate",0.4695742752749558],["sort",0.4517539514526256]]],"^3",["^2",[["write",0.7071067811865475],["jump",0.5773502691896257],["shut",0.5773502691896257],["knock",0.4999999999999999],["sign",0.4999999999999999],["lead",0.4999999999999999],["read",0.4999999999999999],["turn",0.45643546458763834]]],"^4",["^2",[["dead",0.4999999999999999],["nice",0.4999999999999999],["three-legged",0.4999999999999999],["lowand",0.4999999999999999],["proper",0.4999999999999999],["open",0.4999999999999999],["marked",0.4999999999999999],["solemn",0.4999999999999999],["high",0.4767312946227961],["great",0.45643546458763834]]]],"^H@",["^ ","^1",["^2",[["jury",0.5773502691896257],["hearts",0.5773502691896257],["bird",0.4999999999999999],["half",0.4999999999999999],["court",0.4999999999999999],["knave",0.4999999999999999]]],"^3",["^2",[["waste",0.7071067811865475],["beg",0.5773502691896257],["take",0.5773502691896257],["steal",0.4999999999999999],["read",0.4999999999999999],["turn",0.45643546458763834]]],"^4",["^2",[["asleep",0.4999999999999999],["onea-piece",0.4999999999999999],["proper",0.4999999999999999],["fair",0.4999999999999999],["toomuch",0.4999999999999999],["sad",0.4999999999999999]]]],"^M2",["^ ","^1",["^2",[["hedgehog",0.7071067811865475],["people",0.4999999999999999],["air",0.4999999999999999],["ear",0.4999999999999999],["tree",0.4999999999999999],["sort",0.4517539514526256]]],"^3",["^2",[["tuck",0.7071067811865475],["quarrel",0.7071067811865475],["fly",0.7071067811865475],["catch",0.5773502691896257],["forget",0.4999999999999999]]],"^4",["^2",[["underher",0.9999999999999998],["alive",0.9999999999999998],["fond",0.7071067811865475],["moral",0.7071067811865475],["round",0.5773502691896257],["glad",0.5773502691896257]]]],"^8A",["^ ","^1",["^2",[["trial",0.7071067811865475],["idea",0.5773502691896257]]],"^3",["^2",[["pull",0.4999999999999999],["hate",0.4999999999999999],["offend",0.4999999999999999]]],"^4",["^2",[["asleep",0.7071067811865475],["onea-piece",0.7071067811865475],["sad",0.7071067811865475],["offended",0.4999999999999999],["hot",0.4999999999999999],["easy",0.4999999999999999]]]],"^M3",["^ ","^1",["^2",[["baby",0.7071067811865475],["letter",0.4999999999999999],["wood",0.4999999999999999],["inch",0.4999999999999999],["croquet",0.4999999999999999],["sort",0.4517539514526256]]],"^3",["^2",[["knock",0.9999999999999998],["produce",0.7071067811865475],["break",0.7071067811865475],["sneeze",0.7071067811865475],["live",0.5773502691896257],["ask",0.5773502691896257],["frighten",0.5773502691896257],["run",0.5773502691896257],["lead",0.4999999999999999],["peep",0.4999999999999999]]],"^4",["^2",[["open",0.9999999999999998],["lowand",0.9999999999999998],["solemn",0.9999999999999998],["entangled",0.7071067811865475],["full",0.7071067811865475]]]],"^M4",["^ ","^1",["^2",[["bill",0.7071067811865475],["chimney",0.6165812304904386],["arm",0.5225048934090125],["bird",0.4999999999999999],["child",0.4999999999999999],["duchess",0.4901530373260988],["glass",0.4517539514526256]]],"^3",["^2",[["catch",0.5773502691896257],["move",0.5773502691896257],["hold",0.5669467095138407],["wait",0.5316881677189249],["grunt",0.4999999999999999],["look",0.4522670168666454]]],"^4",["^2",[["angry",0.7071067811865475],["safe",0.4999999999999999],["little",0.4999999999999999],["violentlythat",0.4999999999999999],["loud",0.4999999999999999],["queer-shapedlittle",0.4999999999999999],["shewandered",0.4999999999999999],["aremarkable",0.4999999999999999],["thesecond",0.4999999999999999],["yer",0.4999999999999999],["broken",0.4999999999999999]]]],"^HE",["^ ","^1",["^2",[["thing",0.5410814859990275],["chimney",0.48350947702972386],["tea",0.4753826885415284],["alice",0.47274184126735436],["round",0.46681653306710785]]],"^3",["^2",[["offend",0.582222509739582],["hear",0.5470167438441554],["live",0.4753826885415284],["open",0.46681653306710785]]],"^4",["^2",[["full",0.582222509739582],["afraid",0.552344770738994],["great",0.48856991820183876]]]],"^M5",["^ ","^1",["^2",[["bottle",0.7071067811865475],["key",0.5063696835418332],["letter",0.4999999999999999],["inch",0.4999999999999999],["hall",0.4999999999999999],["half",0.4999999999999999],["neck",0.4999999999999999],["people",0.4999999999999999],["ear",0.4999999999999999],["sort",0.4517539514526256],["glass",0.4517539514526256]]],"^3",["^2",[["know",0.7071067811865475],["lose",0.7071067811865475],["kneel",0.7071067811865475],["drink",0.7071067811865475],["hope",0.7071067811865475],["jump",0.5773502691896257],["shut",0.5773502691896257],["round",0.4999999999999999],["finish",0.4999999999999999],["lead",0.4999999999999999],["forget",0.4999999999999999]]],"^4",["^2",[["marked",0.9999999999999998],["hot",0.7071067811865475],["tiny",0.7071067811865475],["dark",0.7071067811865475],["bright",0.5063696835418332],["golden",0.5063696835418332],["alittle",0.4999999999999999]]]],"^HF",["^ ","^1",["^2",[["tear",0.7254762501100116],["chin",0.5773502691896257],["english",0.5063696835418332],["key",0.5063696835418332],["pool",0.5063696835418332],["child",0.4999999999999999],["animal",0.4999999999999999],["glass",0.4517539514526256]]],"^3",["^2",[["hurt",0.7071067811865475],["beg",0.5773502691896257],["shut",0.5773502691896257],["swim",0.5773502691896257]]],"^4",["^2",[["french",0.9999999999999998],["sudden",0.7071067811865475],["golden",0.5063696835418332],["poor",0.5063696835418332]]]],"^M6",["^ ","^1",["^2",[["tea",0.5773502691896257],["dinah",0.5773502691896257],["hurry",0.4999999999999999],["party",0.4999999999999999]]],"^3",["^2",[["offend",0.7071067811865475],["change",0.4999999999999999]]],"^4",["^2",[["passionate",0.9999999999999998],["fancy",0.9999999999999998],["subject",0.9999999999999998],["fond",0.7071067811865475],["shrill",0.7071067811865475]]]],"^8E",["^ ","^1",["^2",[["caterpillar",0.7071067811865475],["serpent",0.7071067811865475],["deal",0.6708203932499369],["size",0.6123724356957945],["dinah",0.5773502691896257],["garden",0.5669467095138407],["neck",0.5249999999999999],["pigeon",0.4999999999999999],["wood",0.4999999999999999],["party",0.4999999999999999],["mushroom",0.4999999999999999],["hurry",0.4999999999999999],["hand",0.4743416490252569]]],"^3",["^2",[["stretch",0.7071067811865475],["shrink",0.7071067811865475],["frighten",0.5773502691896257],["grow",0.5710402407201607],["feel",0.5669467095138407],["hold",0.5669467095138407],["think",0.5383819020581655],["come",0.5028011423654931],["eat",0.4999999999999999],["nibble",0.4999999999999999],["look",0.4522670168666454]]],"^4",["^2",[["usual",0.7071067811865475],["delighted",0.7071067811865475],["sharp",0.7071067811865475],["free",0.7071067811865475],["good",0.6123724356957945],["hard",0.5773502691896257],["sulky",0.4999999999999999],["safe",0.4999999999999999],["nicelittle",0.4999999999999999],["right-hand",0.4999999999999999],["fancy",0.4999999999999999],["agreat",0.4999999999999999],["iused",0.4999999999999999],["little",0.4999999999999999],["numberof",0.4999999999999999],["passionate",0.4999999999999999],["raw",0.4999999999999999],["shewandered",0.4999999999999999],["aremarkable",0.4999999999999999],["to-day",0.4999999999999999],["thesecond",0.4999999999999999],["tosave",0.4999999999999999],["andshe",0.4999999999999999],["subject",0.4999999999999999],["afraid",0.4695742752749558]]]],"^M7",["^ ","^1",["^2",[["bill",0.7071067811865475],["cake",0.7071067811865475],["chimney",0.5872202195147035],["bird",0.4999999999999999],["change",0.4999999999999999],["animal",0.4999999999999999],["wood",0.4999999999999999]]],"^3",["^2",[["suppose",0.7071067811865475],["drink",0.7071067811865475],["draw",0.7071067811865475],["tuck",0.7071067811865475],["shrink",0.7071067811865475],["happen",0.7071067811865475],["move",0.5773502691896257],["catch",0.5773502691896257],["wait",0.5063696835418332],["eat",0.4999999999999999]]],"^4",["^2",[["thesecond",0.9999999999999998],["shewandered",0.9999999999999998],["sharp",0.7071067811865475],["general",0.7071067811865475],["lovely",0.7071067811865475],["delighted",0.7071067811865475],["hard",0.5773502691896257],["bright",0.5063696835418332],["sure",0.4999999999999999]]]],"^M8",["^ ","^1",["^2",[["soldier",0.5773502691896257],["hearts",0.5773502691896257],["key",0.5063696835418332],["child",0.4999999999999999],["majesty",0.4999999999999999],["knave",0.4999999999999999],["croquet",0.4999999999999999],["mushroom",0.4999999999999999],["hall",0.4999999999999999]]],"^3",["^2",[["ornament",0.9999999999999998],["carry",0.7071067811865475],["stop",0.5773502691896257],["take",0.5773502691896257],["nibble",0.4999999999999999]]],"^4",["^2",[["asshe",0.9999999999999998],["footstepsand",0.9999999999999998],["white",0.5773502691896257],["bright",0.5063696835418332],["golden",0.5063696835418332],["alittle",0.4999999999999999]]]],"^M9",["^ ","^1",["^2",[["jury",0.5773502691896257],["evidence",0.5773502691896257],["top",0.4999999999999999],["letter",0.4999999999999999],["court",0.4999999999999999],["majesty",0.4999999999999999],["knave",0.4999999999999999]]],"^3",["^2",[["sign",0.9999999999999998],["write",0.7071067811865475],["prove",0.7071067811865475],["shout",0.5773502691896257],["read",0.4999999999999999]]],"^4",["^2",[["general",0.7071067811865475]]]],"^HQ",["^ ","^1",["^2",[["tart",0.4999999999999999],["baby",0.4999999999999999],["witness",0.4999999999999999],["arm",0.47673129462279606]]],"^3",["^2",[["grunt",0.7071067811865475],["give",0.7071067811865475],["feel",0.5345224838248488],["hurt",0.4999999999999999],["carry",0.4999999999999999],["execute",0.4999999999999999],["mind",0.4999999999999999],["grin",0.4999999999999999],["sneeze",0.4999999999999999],["leave",0.4517539514526256]]],"^4",["^2",[["queer-shapedlittle",0.7071067811865475],["loud",0.7071067811865475],["violentlythat",0.7071067811865475],["first",0.7071067811865475],["ready",0.4999999999999999]]]],"^HV",["^ ","^1",["^2",[["cook",0.7071067811865475],["tart",0.7071067811865475],["witness",0.7071067811865475],["dormouse",0.5773502691896257],["evidence",0.5773502691896257],["march",0.5773502691896257],["hare",0.5773502691896257],["hatter",0.5773502691896257],["majesty",0.4999999999999999],["people",0.4999999999999999],["court",0.4999999999999999]]],"^3",["^2",[["give",0.9999999999999998],["mind",0.7071067811865475],["execute",0.7071067811865475],["sneeze",0.7071067811865475],["carry",0.7071067811865475],["finish",0.4999999999999999],["drop",0.4999999999999999]]],"^4",["^2",[["poor",0.5063696835418332]]]],"^M:",["^ ","^1",["^2",[["tart",0.7071067811865475],["soldier",0.5773502691896257],["hearts",0.5773502691896257],["creature",0.5773502691896257],["chin",0.5773502691896257],["trial",0.4999999999999999],["knave",0.4999999999999999],["half",0.4999999999999999],["animal",0.4999999999999999],["bird",0.4999999999999999],["court",0.4999999999999999],["sort",0.4517539514526256]]],"^3",["^2",[["steal",0.9999999999999998],["stamp",0.7071067811865475],["quarrel",0.7071067811865475],["suppose",0.7071067811865475],["take",0.5773502691896257],["shout",0.5773502691896257],["round",0.4999999999999999],["read",0.4999999999999999]]],"^4",["^2",[["fair",0.9999999999999998],["moral",0.7071067811865475]]]],"^HW",["^ ","^1",["^2",[["hearts",0.6666666666666666],["knave",0.5773502691896257],["croquet",0.5773502691896257],["white",0.5773502691896257],["queen",0.5477225575051661],["hand",0.5477225575051661],["day",0.5163977794943223],["king",0.5163977794943223],["head",0.48412291827592707],["rabbit",0.48412291827592707],["face",0.4714045207910317]]],"^3",["^2",[["stamp",0.8164965809277259],["play",0.7745966692414834],["stand",0.7745966692414834],["take",0.6666666666666666],["shout",0.6666666666666666],["ornament",0.5773502691896257],["steal",0.5773502691896257],["walk",0.4714045207910317],["think",0.4662524041201569]]],"^4",["^2",[["asshe",0.5773502691896257],["footstepsand",0.5773502691896257],["fair",0.5773502691896257],["grand",0.5773502691896257],["toomuch",0.5773502691896257],["hush",0.5773502691896257],["curious",0.5163977794943223]]]],"^8I",["^ ","^1",["^2",[["child",0.7071067811865475],["tear",0.512989176042577],["cook",0.4999999999999999],["baby",0.4999999999999999],["cat",0.4999999999999999]]],"^3",["^2",[["grunt",0.7071067811865475],["cry",0.5031546054266276],["grin",0.4999999999999999],["speak",0.47673129462279606]]],"^4",["^2",[["queer-shapedlittle",0.7071067811865475],["loud",0.7071067811865475],["violentlythat",0.7071067811865475],["french",0.7071067811865475],["shebegan",0.7071067811865475],["ready",0.4999999999999999],["sudden",0.4999999999999999]]]],"air",["^ ","^1",["^2",[["window",0.7071067811865475],["chimney",0.5872202195147035],["arm",0.5056498968474316],["voice",0.5047544651250687],["minute",0.49262233777688935],["silence",0.4695742752749558]]],"^3",["^2",[["spread",0.7071067811865475],["sha",0.5773502691896257],["hear",0.5423261445466403],["fall",0.533676050223615],["wait",0.5063696835418332],["forget",0.4999999999999999]]],"^4",["^2",[["round",0.5773502691896257],["late",0.5773502691896257],["helpless",0.4999999999999999],["quiteenough",0.4999999999999999],["naturalto",0.4999999999999999],["draggled",0.4999999999999999],["alive",0.4999999999999999],["underher",0.4999999999999999],["yer",0.4999999999999999],["broken",0.4999999999999999]]]],"^I7",["^ ","^1",["^2",[["rate",0.5477225575051661],["door",0.5243225050930763],["alice",0.4767312946227961],["jury",0.4714045207910317],["head",0.4678463512023293]]],"^3",["^2",[["turn",0.6211299937499416],["drink",0.5773502691896257],["waste",0.5773502691896257],["beg",0.4714045207910317],["shut",0.4714045207910317],["notice",0.4662524041201569]]],"^4",["^2",[["small",0.6722926454528143],["hot",0.5773502691896257],["general",0.5773502691896257],["long",0.4662524041201569]]]],"^M;",["^ ","^1",["^2",[["pigeon",0.9999999999999998],["serpent",0.7071067811865475],["change",0.4999999999999999],["neck",0.4999999999999999],["wood",0.4999999999999999],["tree",0.4999999999999999],["mushroom",0.4999999999999999]]],"^3",["^2",[["continue",0.7071067811865475],["remember",0.5773502691896257],["nibble",0.4999999999999999]]],"^4",["^2",[["andshe",0.9999999999999998],["raw",0.9999999999999998],["numberof",0.9999999999999998],["free",0.7071067811865475],["entangled",0.7071067811865475],["usual",0.7071067811865475],["alittle",0.4999999999999999]]]]]');
fyke.core.create_node = function fyke$core$create_node(type, word, cnt, idx) {
  return {"name":word, "index":idx, "radius":cnt / 100 + 3, "class":cljs.core.name.call(null, type)};
};
fyke.core.add_node = function fyke$core$add_node(data, nodes, p__25371) {
  var vec__25373 = p__25371;
  var word = cljs.core.nth.call(null, vec__25373, 0, null);
  var sim = cljs.core.nth.call(null, vec__25373, 1, null);
  var type = cljs.core.nth.call(null, vec__25373, 2, null);
  var temp__4655__auto__ = cljs.core.some.call(null, function(vec__25373, word, sim, type) {
    return function(p1__25370_SHARP_) {
      if (cljs.core._EQ_.call(null, p1__25370_SHARP_.name, word)) {
        return p1__25370_SHARP_;
      } else {
        return null;
      }
    };
  }(vec__25373, word, sim, type), nodes);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var node = temp__4655__auto__;
    console.log("NODE_EXISTS:", node);
    return node;
  } else {
    var cnt = cljs.core.get_in.call(null, data, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cnt", "cnt", 283978798), type, word], null));
    var node = fyke.core.create_node.call(null, type, word, cnt, cljs.core.count.call(null, nodes));
    nodes.push(node);
    return node;
  }
};
fyke.core.add_link = function fyke$core$add_link(links, sim, source, target) {
  var link = {"source":source, "target":target, "sim":sim};
  return links.push(link);
};
fyke.core.get_child_words = function fyke$core$get_child_words(data, word, type) {
  return cljs.core.map.call(null, function(p1__25374_SHARP_) {
    return cljs.core.conj.call(null, p1__25374_SHARP_, type);
  }, cljs.core.take.call(null, 10, cljs.core.filter.call(null, function(p1__25375_SHARP_) {
    return cljs.core.not_EQ_.call(null, cljs.core.first.call(null, p1__25375_SHARP_), "illustration");
  }, cljs.core.get_in.call(null, data, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [word, type], null)))));
};
fyke.core.add_child = function fyke$core$add_child(data) {
  return function(force, node) {
    var nodes = force.nodes();
    var links = force.links();
    var word = node.name;
    var _ = console.log("WORD:", node);
    var child_words = cljs.core.mapcat.call(null, cljs.core.partial.call(null, fyke.core.get_child_words, data, word), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "noun", "noun", 185846460), new cljs.core.Keyword(null, "adjective", "adjective", 441465450)], null));
    var seq__25382 = cljs.core.seq.call(null, child_words);
    var chunk__25383 = null;
    var count__25384 = 0;
    var i__25385 = 0;
    while (true) {
      if (i__25385 < count__25384) {
        var vec__25386 = cljs.core._nth.call(null, chunk__25383, i__25385);
        var ___$1 = cljs.core.nth.call(null, vec__25386, 0, null);
        var sim = cljs.core.nth.call(null, vec__25386, 1, null);
        var ___$2 = cljs.core.nth.call(null, vec__25386, 2, null);
        var w = vec__25386;
        var w_node_25388 = fyke.core.add_node.call(null, data, nodes, w);
        fyke.core.add_link.call(null, links, sim, node, w_node_25388);
        var G__25389 = seq__25382;
        var G__25390 = chunk__25383;
        var G__25391 = count__25384;
        var G__25392 = i__25385 + 1;
        seq__25382 = G__25389;
        chunk__25383 = G__25390;
        count__25384 = G__25391;
        i__25385 = G__25392;
        continue;
      } else {
        var temp__4657__auto__ = cljs.core.seq.call(null, seq__25382);
        if (temp__4657__auto__) {
          var seq__25382__$1 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__25382__$1)) {
            var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__25382__$1);
            var G__25393 = cljs.core.chunk_rest.call(null, seq__25382__$1);
            var G__25394 = c__7021__auto__;
            var G__25395 = cljs.core.count.call(null, c__7021__auto__);
            var G__25396 = 0;
            seq__25382 = G__25393;
            chunk__25383 = G__25394;
            count__25384 = G__25395;
            i__25385 = G__25396;
            continue;
          } else {
            var vec__25387 = cljs.core.first.call(null, seq__25382__$1);
            var ___$1 = cljs.core.nth.call(null, vec__25387, 0, null);
            var sim = cljs.core.nth.call(null, vec__25387, 1, null);
            var ___$2 = cljs.core.nth.call(null, vec__25387, 2, null);
            var w = vec__25387;
            var w_node_25397 = fyke.core.add_node.call(null, data, nodes, w);
            fyke.core.add_link.call(null, links, sim, node, w_node_25397);
            var G__25398 = cljs.core.next.call(null, seq__25382__$1);
            var G__25399 = null;
            var G__25400 = 0;
            var G__25401 = 0;
            seq__25382 = G__25398;
            chunk__25383 = G__25399;
            count__25384 = G__25400;
            i__25385 = G__25401;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
};
fyke.core.distance_fn = function fyke$core$distance_fn(link) {
  return 600 * (1 - link.sim);
};
fyke.core.init_graph = function fyke$core$init_graph() {
  var cnt = cljs.core.get_in.call(null, fyke.core.data, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cnt", "cnt", 283978798), new cljs.core.Keyword(null, "noun", "noun", 185846460), "alice"], null));
  var nodes = [fyke.core.create_node.call(null, new cljs.core.Keyword(null, "noun", "noun", 185846460), "alice", cnt, 0)];
  var links = [];
  console.log(cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "cnt", "cnt", 283978798)).cljs$core$IFn$_invoke$arity$1(fyke.core.data)));
  return fyke.graph.init.call(null, 1500, 1200, nodes, links, fyke.core.add_child.call(null, fyke.core.data), fyke.core.distance_fn);
};
fyke.core.init_graph.call(null);
